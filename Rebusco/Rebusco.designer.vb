'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Rebusco")>
Partial Public Class RebuscoDataContext
    Inherits System.Data.Linq.DataContext

    Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub InsertT_Accesos(instance As T_Accesos)
    End Sub
    Partial Private Sub UpdateT_Accesos(instance As T_Accesos)
    End Sub
    Partial Private Sub DeleteT_Accesos(instance As T_Accesos)
    End Sub
    Partial Private Sub InsertT_AFPs(instance As T_AFPs)
    End Sub
    Partial Private Sub UpdateT_AFPs(instance As T_AFPs)
    End Sub
    Partial Private Sub DeleteT_AFPs(instance As T_AFPs)
    End Sub
    Partial Private Sub InsertT_Auditoria(instance As T_Auditoria)
    End Sub
    Partial Private Sub UpdateT_Auditoria(instance As T_Auditoria)
    End Sub
    Partial Private Sub DeleteT_Auditoria(instance As T_Auditoria)
    End Sub
    Partial Private Sub InsertT_Bodegas(instance As T_Bodegas)
    End Sub
    Partial Private Sub UpdateT_Bodegas(instance As T_Bodegas)
    End Sub
    Partial Private Sub DeleteT_Bodegas(instance As T_Bodegas)
    End Sub
    Partial Private Sub InsertT_CajaCompensacion(instance As T_CajaCompensacion)
    End Sub
    Partial Private Sub UpdateT_CajaCompensacion(instance As T_CajaCompensacion)
    End Sub
    Partial Private Sub DeleteT_CajaCompensacion(instance As T_CajaCompensacion)
    End Sub
    Partial Private Sub InsertT_Comunas(instance As T_Comunas)
    End Sub
    Partial Private Sub UpdateT_Comunas(instance As T_Comunas)
    End Sub
    Partial Private Sub DeleteT_Comunas(instance As T_Comunas)
    End Sub
    Partial Private Sub InsertT_Control_Articulos(instance As T_Control_Articulos)
    End Sub
    Partial Private Sub UpdateT_Control_Articulos(instance As T_Control_Articulos)
    End Sub
    Partial Private Sub DeleteT_Control_Articulos(instance As T_Control_Articulos)
    End Sub
    Partial Private Sub InsertT_Correlativos(instance As T_Correlativos)
    End Sub
    Partial Private Sub UpdateT_Correlativos(instance As T_Correlativos)
    End Sub
    Partial Private Sub DeleteT_Correlativos(instance As T_Correlativos)
    End Sub
    Partial Private Sub InsertT_DocumentosD(instance As T_DocumentosD)
    End Sub
    Partial Private Sub UpdateT_DocumentosD(instance As T_DocumentosD)
    End Sub
    Partial Private Sub DeleteT_DocumentosD(instance As T_DocumentosD)
    End Sub
    Partial Private Sub InsertT_DocumentosR(instance As T_DocumentosR)
    End Sub
    Partial Private Sub UpdateT_DocumentosR(instance As T_DocumentosR)
    End Sub
    Partial Private Sub DeleteT_DocumentosR(instance As T_DocumentosR)
    End Sub
    Partial Private Sub InsertT_Etiquetas(instance As T_Etiquetas)
    End Sub
    Partial Private Sub UpdateT_Etiquetas(instance As T_Etiquetas)
    End Sub
    Partial Private Sub DeleteT_Etiquetas(instance As T_Etiquetas)
    End Sub
    Partial Private Sub InsertT_EventosRem(instance As T_EventosRem)
    End Sub
    Partial Private Sub UpdateT_EventosRem(instance As T_EventosRem)
    End Sub
    Partial Private Sub DeleteT_EventosRem(instance As T_EventosRem)
    End Sub
    Partial Private Sub InsertT_Familias(instance As T_Familias)
    End Sub
    Partial Private Sub UpdateT_Familias(instance As T_Familias)
    End Sub
    Partial Private Sub DeleteT_Familias(instance As T_Familias)
    End Sub
    Partial Private Sub InsertT_FPagos(instance As T_FPagos)
    End Sub
    Partial Private Sub UpdateT_FPagos(instance As T_FPagos)
    End Sub
    Partial Private Sub DeleteT_FPagos(instance As T_FPagos)
    End Sub
    Partial Private Sub InsertT_ImpuestoUnico(instance As T_ImpuestoUnico)
    End Sub
    Partial Private Sub UpdateT_ImpuestoUnico(instance As T_ImpuestoUnico)
    End Sub
    Partial Private Sub DeleteT_ImpuestoUnico(instance As T_ImpuestoUnico)
    End Sub
    Partial Private Sub InsertT_Log(instance As T_Log)
    End Sub
    Partial Private Sub UpdateT_Log(instance As T_Log)
    End Sub
    Partial Private Sub DeleteT_Log(instance As T_Log)
    End Sub
    Partial Private Sub InsertT_ModoPagos(instance As T_ModoPagos)
    End Sub
    Partial Private Sub UpdateT_ModoPagos(instance As T_ModoPagos)
    End Sub
    Partial Private Sub DeleteT_ModoPagos(instance As T_ModoPagos)
    End Sub
    Partial Private Sub InsertT_Modulos(instance As T_Modulos)
    End Sub
    Partial Private Sub UpdateT_Modulos(instance As T_Modulos)
    End Sub
    Partial Private Sub DeleteT_Modulos(instance As T_Modulos)
    End Sub
    Partial Private Sub InsertT_MovGen(instance As T_MovGen)
    End Sub
    Partial Private Sub UpdateT_MovGen(instance As T_MovGen)
    End Sub
    Partial Private Sub DeleteT_MovGen(instance As T_MovGen)
    End Sub
    Partial Private Sub InsertT_Pagos(instance As T_Pagos)
    End Sub
    Partial Private Sub UpdateT_Pagos(instance As T_Pagos)
    End Sub
    Partial Private Sub DeleteT_Pagos(instance As T_Pagos)
    End Sub
    Partial Private Sub InsertT_PermisosAcceso(instance As T_PermisosAcceso)
    End Sub
    Partial Private Sub UpdateT_PermisosAcceso(instance As T_PermisosAcceso)
    End Sub
    Partial Private Sub DeleteT_PermisosAcceso(instance As T_PermisosAcceso)
    End Sub
    Partial Private Sub InsertT_PermisosUsuario(instance As T_PermisosUsuario)
    End Sub
    Partial Private Sub UpdateT_PermisosUsuario(instance As T_PermisosUsuario)
    End Sub
    Partial Private Sub DeleteT_PermisosUsuario(instance As T_PermisosUsuario)
    End Sub
    Partial Private Sub InsertT_PlantillasObservaciones(instance As T_PlantillasObservaciones)
    End Sub
    Partial Private Sub UpdateT_PlantillasObservaciones(instance As T_PlantillasObservaciones)
    End Sub
    Partial Private Sub DeleteT_PlantillasObservaciones(instance As T_PlantillasObservaciones)
    End Sub
    Partial Private Sub InsertT_Regiones(instance As T_Regiones)
    End Sub
    Partial Private Sub UpdateT_Regiones(instance As T_Regiones)
    End Sub
    Partial Private Sub DeleteT_Regiones(instance As T_Regiones)
    End Sub
    Partial Private Sub InsertT_Salud(instance As T_Salud)
    End Sub
    Partial Private Sub UpdateT_Salud(instance As T_Salud)
    End Sub
    Partial Private Sub DeleteT_Salud(instance As T_Salud)
    End Sub
    Partial Private Sub InsertT_Servidores(instance As T_Servidores)
    End Sub
    Partial Private Sub UpdateT_Servidores(instance As T_Servidores)
    End Sub
    Partial Private Sub DeleteT_Servidores(instance As T_Servidores)
    End Sub
    Partial Private Sub InsertT_Stocks(instance As T_Stocks)
    End Sub
    Partial Private Sub UpdateT_Stocks(instance As T_Stocks)
    End Sub
    Partial Private Sub DeleteT_Stocks(instance As T_Stocks)
    End Sub
    Partial Private Sub InsertT_Stocks_Cierre(instance As T_Stocks_Cierre)
    End Sub
    Partial Private Sub UpdateT_Stocks_Cierre(instance As T_Stocks_Cierre)
    End Sub
    Partial Private Sub DeleteT_Stocks_Cierre(instance As T_Stocks_Cierre)
    End Sub
    Partial Private Sub InsertT_SubFamilias(instance As T_SubFamilias)
    End Sub
    Partial Private Sub UpdateT_SubFamilias(instance As T_SubFamilias)
    End Sub
    Partial Private Sub DeleteT_SubFamilias(instance As T_SubFamilias)
    End Sub
    Partial Private Sub InsertT_Sueldos(instance As T_Sueldos)
    End Sub
    Partial Private Sub UpdateT_Sueldos(instance As T_Sueldos)
    End Sub
    Partial Private Sub DeleteT_Sueldos(instance As T_Sueldos)
    End Sub
    Partial Private Sub InsertT_Sueldos_Detalles(instance As T_Sueldos_Detalles)
    End Sub
    Partial Private Sub UpdateT_Sueldos_Detalles(instance As T_Sueldos_Detalles)
    End Sub
    Partial Private Sub DeleteT_Sueldos_Detalles(instance As T_Sueldos_Detalles)
    End Sub
    Partial Private Sub InsertT_TipoArticulo(instance As T_TipoArticulo)
    End Sub
    Partial Private Sub UpdateT_TipoArticulo(instance As T_TipoArticulo)
    End Sub
    Partial Private Sub DeleteT_TipoArticulo(instance As T_TipoArticulo)
    End Sub
    Partial Private Sub InsertT_TipoDoc(instance As T_TipoDoc)
    End Sub
    Partial Private Sub UpdateT_TipoDoc(instance As T_TipoDoc)
    End Sub
    Partial Private Sub DeleteT_TipoDoc(instance As T_TipoDoc)
    End Sub
    Partial Private Sub InsertT_TipoEstados(instance As T_TipoEstados)
    End Sub
    Partial Private Sub UpdateT_TipoEstados(instance As T_TipoEstados)
    End Sub
    Partial Private Sub DeleteT_TipoEstados(instance As T_TipoEstados)
    End Sub
    Partial Private Sub InsertT_TipoMov(instance As T_TipoMov)
    End Sub
    Partial Private Sub UpdateT_TipoMov(instance As T_TipoMov)
    End Sub
    Partial Private Sub DeleteT_TipoMov(instance As T_TipoMov)
    End Sub
    Partial Private Sub InsertT_Unidades(instance As T_Unidades)
    End Sub
    Partial Private Sub UpdateT_Unidades(instance As T_Unidades)
    End Sub
    Partial Private Sub DeleteT_Unidades(instance As T_Unidades)
    End Sub
    Partial Private Sub InsertT_Usuarios(instance As T_Usuarios)
    End Sub
    Partial Private Sub UpdateT_Usuarios(instance As T_Usuarios)
    End Sub
    Partial Private Sub DeleteT_Usuarios(instance As T_Usuarios)
    End Sub
    Partial Private Sub InsertT_Valores(instance As T_Valores)
    End Sub
    Partial Private Sub UpdateT_Valores(instance As T_Valores)
    End Sub
    Partial Private Sub DeleteT_Valores(instance As T_Valores)
    End Sub
    Partial Private Sub InsertT_DocumentosP(instance As T_DocumentosP)
    End Sub
    Partial Private Sub UpdateT_DocumentosP(instance As T_DocumentosP)
    End Sub
    Partial Private Sub DeleteT_DocumentosP(instance As T_DocumentosP)
    End Sub
    Partial Private Sub InsertT_DocumentosG(instance As T_DocumentosG)
    End Sub
    Partial Private Sub UpdateT_DocumentosG(instance As T_DocumentosG)
    End Sub
    Partial Private Sub DeleteT_DocumentosG(instance As T_DocumentosG)
    End Sub
    Partial Private Sub InsertT_Barras(instance As T_Barras)
    End Sub
    Partial Private Sub UpdateT_Barras(instance As T_Barras)
    End Sub
    Partial Private Sub DeleteT_Barras(instance As T_Barras)
    End Sub
    Partial Private Sub InsertT_Abastecimiento(instance As T_Abastecimiento)
    End Sub
    Partial Private Sub UpdateT_Abastecimiento(instance As T_Abastecimiento)
    End Sub
    Partial Private Sub DeleteT_Abastecimiento(instance As T_Abastecimiento)
    End Sub
    Partial Private Sub InsertT_Articulos(instance As T_Articulos)
    End Sub
    Partial Private Sub UpdateT_Articulos(instance As T_Articulos)
    End Sub
    Partial Private Sub DeleteT_Articulos(instance As T_Articulos)
    End Sub
    Partial Private Sub InsertT_Clientes(instance As T_Clientes)
    End Sub
    Partial Private Sub UpdateT_Clientes(instance As T_Clientes)
    End Sub
    Partial Private Sub DeleteT_Clientes(instance As T_Clientes)
    End Sub
    Partial Private Sub InsertT_Locales(instance As T_Locales)
    End Sub
    Partial Private Sub UpdateT_Locales(instance As T_Locales)
    End Sub
    Partial Private Sub DeleteT_Locales(instance As T_Locales)
    End Sub
    Partial Private Sub InsertT_UFs(instance As T_UFs)
    End Sub
    Partial Private Sub UpdateT_UFs(instance As T_UFs)
    End Sub
    Partial Private Sub DeleteT_UFs(instance As T_UFs)
    End Sub
    Partial Private Sub InsertT_AccesoModulo(instance As T_AccesoModulo)
    End Sub
    Partial Private Sub UpdateT_AccesoModulo(instance As T_AccesoModulo)
    End Sub
    Partial Private Sub DeleteT_AccesoModulo(instance As T_AccesoModulo)
    End Sub
    Partial Private Sub InsertT_MovDet(instance As T_MovDet)
    End Sub
    Partial Private Sub UpdateT_MovDet(instance As T_MovDet)
    End Sub
    Partial Private Sub DeleteT_MovDet(instance As T_MovDet)
    End Sub
    Partial Private Sub InsertT_Eventos(instance As T_Eventos)
    End Sub
    Partial Private Sub UpdateT_Eventos(instance As T_Eventos)
    End Sub
    Partial Private Sub DeleteT_Eventos(instance As T_Eventos)
    End Sub
    Partial Private Sub InsertT_Tracking(instance As T_Tracking)
    End Sub
    Partial Private Sub UpdateT_Tracking(instance As T_Tracking)
    End Sub
    Partial Private Sub DeleteT_Tracking(instance As T_Tracking)
    End Sub
    Partial Private Sub InsertT_TikDet(instance As T_TikDet)
    End Sub
    Partial Private Sub UpdateT_TikDet(instance As T_TikDet)
    End Sub
    Partial Private Sub DeleteT_TikDet(instance As T_TikDet)
    End Sub
    Partial Private Sub InsertT_TikGen(instance As T_TikGen)
    End Sub
    Partial Private Sub UpdateT_TikGen(instance As T_TikGen)
    End Sub
    Partial Private Sub DeleteT_TikGen(instance As T_TikGen)
    End Sub
    Partial Private Sub InsertT_Parametros(instance As T_Parametros)
    End Sub
    Partial Private Sub UpdateT_Parametros(instance As T_Parametros)
    End Sub
    Partial Private Sub DeleteT_Parametros(instance As T_Parametros)
    End Sub
    Partial Private Sub InsertT_Estados(instance As T_Estados)
    End Sub
    Partial Private Sub UpdateT_Estados(instance As T_Estados)
    End Sub
    Partial Private Sub DeleteT_Estados(instance As T_Estados)
    End Sub
#End Region

    Public Sub New()
        MyBase.New("Data Source=wikets.no-ip.info/SQL2008;Initial Catalog=Rebusco;User ID=wikets", mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As String)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection)
        MyBase.New(connection, mappingSource)
        OnCreated
    End Sub

    Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated
    End Sub

    Public ReadOnly Property T_Accesos() As System.Data.Linq.Table(Of T_Accesos)
        Get
            Return Me.GetTable(Of T_Accesos)
        End Get
    End Property

    Public ReadOnly Property T_AFPs() As System.Data.Linq.Table(Of T_AFPs)
        Get
            Return Me.GetTable(Of T_AFPs)
        End Get
    End Property

    Public ReadOnly Property T_Auditoria() As System.Data.Linq.Table(Of T_Auditoria)
        Get
            Return Me.GetTable(Of T_Auditoria)
        End Get
    End Property

    Public ReadOnly Property T_Bancos() As System.Data.Linq.Table(Of T_Bancos)
        Get
            Return Me.GetTable(Of T_Bancos)
        End Get
    End Property

    Public ReadOnly Property T_Bodegas() As System.Data.Linq.Table(Of T_Bodegas)
        Get
            Return Me.GetTable(Of T_Bodegas)
        End Get
    End Property

    Public ReadOnly Property T_CajaCompensacion() As System.Data.Linq.Table(Of T_CajaCompensacion)
        Get
            Return Me.GetTable(Of T_CajaCompensacion)
        End Get
    End Property

    Public ReadOnly Property T_Comunas() As System.Data.Linq.Table(Of T_Comunas)
        Get
            Return Me.GetTable(Of T_Comunas)
        End Get
    End Property

    Public ReadOnly Property T_Control_Articulos() As System.Data.Linq.Table(Of T_Control_Articulos)
        Get
            Return Me.GetTable(Of T_Control_Articulos)
        End Get
    End Property

    Public ReadOnly Property T_Correlativos() As System.Data.Linq.Table(Of T_Correlativos)
        Get
            Return Me.GetTable(Of T_Correlativos)
        End Get
    End Property

    Public ReadOnly Property T_DocumentosD() As System.Data.Linq.Table(Of T_DocumentosD)
        Get
            Return Me.GetTable(Of T_DocumentosD)
        End Get
    End Property

    Public ReadOnly Property T_DocumentosR() As System.Data.Linq.Table(Of T_DocumentosR)
        Get
            Return Me.GetTable(Of T_DocumentosR)
        End Get
    End Property

    Public ReadOnly Property T_Etiquetas() As System.Data.Linq.Table(Of T_Etiquetas)
        Get
            Return Me.GetTable(Of T_Etiquetas)
        End Get
    End Property

    Public ReadOnly Property T_EventosRem() As System.Data.Linq.Table(Of T_EventosRem)
        Get
            Return Me.GetTable(Of T_EventosRem)
        End Get
    End Property

    Public ReadOnly Property T_Familias() As System.Data.Linq.Table(Of T_Familias)
        Get
            Return Me.GetTable(Of T_Familias)
        End Get
    End Property

    Public ReadOnly Property T_FPagos() As System.Data.Linq.Table(Of T_FPagos)
        Get
            Return Me.GetTable(Of T_FPagos)
        End Get
    End Property

    Public ReadOnly Property T_ImpuestoUnico() As System.Data.Linq.Table(Of T_ImpuestoUnico)
        Get
            Return Me.GetTable(Of T_ImpuestoUnico)
        End Get
    End Property

    Public ReadOnly Property T_Log() As System.Data.Linq.Table(Of T_Log)
        Get
            Return Me.GetTable(Of T_Log)
        End Get
    End Property

    Public ReadOnly Property T_LogIntegraciones() As System.Data.Linq.Table(Of T_LogIntegraciones)
        Get
            Return Me.GetTable(Of T_LogIntegraciones)
        End Get
    End Property

    Public ReadOnly Property T_ModoPagos() As System.Data.Linq.Table(Of T_ModoPagos)
        Get
            Return Me.GetTable(Of T_ModoPagos)
        End Get
    End Property

    Public ReadOnly Property T_Modulos() As System.Data.Linq.Table(Of T_Modulos)
        Get
            Return Me.GetTable(Of T_Modulos)
        End Get
    End Property

    Public ReadOnly Property T_Motivos() As System.Data.Linq.Table(Of T_Motivos)
        Get
            Return Me.GetTable(Of T_Motivos)
        End Get
    End Property

    Public ReadOnly Property T_MovGen() As System.Data.Linq.Table(Of T_MovGen)
        Get
            Return Me.GetTable(Of T_MovGen)
        End Get
    End Property

    Public ReadOnly Property T_Pagos() As System.Data.Linq.Table(Of T_Pagos)
        Get
            Return Me.GetTable(Of T_Pagos)
        End Get
    End Property

    Public ReadOnly Property T_PermisosAcceso() As System.Data.Linq.Table(Of T_PermisosAcceso)
        Get
            Return Me.GetTable(Of T_PermisosAcceso)
        End Get
    End Property

    Public ReadOnly Property T_PermisosUsuario() As System.Data.Linq.Table(Of T_PermisosUsuario)
        Get
            Return Me.GetTable(Of T_PermisosUsuario)
        End Get
    End Property

    Public ReadOnly Property T_PlantillasObservaciones() As System.Data.Linq.Table(Of T_PlantillasObservaciones)
        Get
            Return Me.GetTable(Of T_PlantillasObservaciones)
        End Get
    End Property

    Public ReadOnly Property T_Regiones() As System.Data.Linq.Table(Of T_Regiones)
        Get
            Return Me.GetTable(Of T_Regiones)
        End Get
    End Property

    Public ReadOnly Property T_Salud() As System.Data.Linq.Table(Of T_Salud)
        Get
            Return Me.GetTable(Of T_Salud)
        End Get
    End Property

    Public ReadOnly Property T_Servidores() As System.Data.Linq.Table(Of T_Servidores)
        Get
            Return Me.GetTable(Of T_Servidores)
        End Get
    End Property

    Public ReadOnly Property T_Stocks() As System.Data.Linq.Table(Of T_Stocks)
        Get
            Return Me.GetTable(Of T_Stocks)
        End Get
    End Property

    Public ReadOnly Property T_Stocks_Cierre() As System.Data.Linq.Table(Of T_Stocks_Cierre)
        Get
            Return Me.GetTable(Of T_Stocks_Cierre)
        End Get
    End Property

    Public ReadOnly Property T_SubFamilias() As System.Data.Linq.Table(Of T_SubFamilias)
        Get
            Return Me.GetTable(Of T_SubFamilias)
        End Get
    End Property

    Public ReadOnly Property T_Sueldos() As System.Data.Linq.Table(Of T_Sueldos)
        Get
            Return Me.GetTable(Of T_Sueldos)
        End Get
    End Property

    Public ReadOnly Property T_Sueldos_Detalles() As System.Data.Linq.Table(Of T_Sueldos_Detalles)
        Get
            Return Me.GetTable(Of T_Sueldos_Detalles)
        End Get
    End Property

    Public ReadOnly Property T_TipoArticulo() As System.Data.Linq.Table(Of T_TipoArticulo)
        Get
            Return Me.GetTable(Of T_TipoArticulo)
        End Get
    End Property

    Public ReadOnly Property T_TipoDoc() As System.Data.Linq.Table(Of T_TipoDoc)
        Get
            Return Me.GetTable(Of T_TipoDoc)
        End Get
    End Property

    Public ReadOnly Property T_TipoEstados() As System.Data.Linq.Table(Of T_TipoEstados)
        Get
            Return Me.GetTable(Of T_TipoEstados)
        End Get
    End Property

    Public ReadOnly Property T_TipoMov() As System.Data.Linq.Table(Of T_TipoMov)
        Get
            Return Me.GetTable(Of T_TipoMov)
        End Get
    End Property

    Public ReadOnly Property T_Unidades() As System.Data.Linq.Table(Of T_Unidades)
        Get
            Return Me.GetTable(Of T_Unidades)
        End Get
    End Property

    Public ReadOnly Property T_Usuarios() As System.Data.Linq.Table(Of T_Usuarios)
        Get
            Return Me.GetTable(Of T_Usuarios)
        End Get
    End Property

    Public ReadOnly Property T_Valores() As System.Data.Linq.Table(Of T_Valores)
        Get
            Return Me.GetTable(Of T_Valores)
        End Get
    End Property

    Public ReadOnly Property T_DocumentosP() As System.Data.Linq.Table(Of T_DocumentosP)
        Get
            Return Me.GetTable(Of T_DocumentosP)
        End Get
    End Property

    Public ReadOnly Property T_DocumentosG() As System.Data.Linq.Table(Of T_DocumentosG)
        Get
            Return Me.GetTable(Of T_DocumentosG)
        End Get
    End Property

    Public ReadOnly Property T_Barras() As System.Data.Linq.Table(Of T_Barras)
        Get
            Return Me.GetTable(Of T_Barras)
        End Get
    End Property

    Public ReadOnly Property T_Abastecimiento() As System.Data.Linq.Table(Of T_Abastecimiento)
        Get
            Return Me.GetTable(Of T_Abastecimiento)
        End Get
    End Property

    Public ReadOnly Property T_Articulos() As System.Data.Linq.Table(Of T_Articulos)
        Get
            Return Me.GetTable(Of T_Articulos)
        End Get
    End Property

    Public ReadOnly Property T_BusquedaArticulo() As System.Data.Linq.Table(Of T_BusquedaArticulo)
        Get
            Return Me.GetTable(Of T_BusquedaArticulo)
        End Get
    End Property

    Public ReadOnly Property T_BuscadorAutocompletar() As System.Data.Linq.Table(Of T_BuscadorAutocompletar)
        Get
            Return Me.GetTable(Of T_BuscadorAutocompletar)
        End Get
    End Property

    Public ReadOnly Property T_ListadoStockLocal() As System.Data.Linq.Table(Of T_ListadoStockLocal)
        Get
            Return Me.GetTable(Of T_ListadoStockLocal)
        End Get
    End Property

    Public ReadOnly Property T_ListadoMovimientosEncabezado() As System.Data.Linq.Table(Of T_ListadoMovimientosEncabezado)
        Get
            Return Me.GetTable(Of T_ListadoMovimientosEncabezado)
        End Get
    End Property

    Public ReadOnly Property T_ListadoStockBodega() As System.Data.Linq.Table(Of T_ListadoStockBodega)
        Get
            Return Me.GetTable(Of T_ListadoStockBodega)
        End Get
    End Property

    Public ReadOnly Property T_Clientes() As System.Data.Linq.Table(Of T_Clientes)
        Get
            Return Me.GetTable(Of T_Clientes)
        End Get
    End Property

    Public ReadOnly Property T_Locales() As System.Data.Linq.Table(Of T_Locales)
        Get
            Return Me.GetTable(Of T_Locales)
        End Get
    End Property

    Public ReadOnly Property T_UFs() As System.Data.Linq.Table(Of T_UFs)
        Get
            Return Me.GetTable(Of T_UFs)
        End Get
    End Property

    Public ReadOnly Property T_AccesoModulo() As System.Data.Linq.Table(Of T_AccesoModulo)
        Get
            Return Me.GetTable(Of T_AccesoModulo)
        End Get
    End Property

    Public ReadOnly Property T_MovDet() As System.Data.Linq.Table(Of T_MovDet)
        Get
            Return Me.GetTable(Of T_MovDet)
        End Get
    End Property

    Public ReadOnly Property T_CostosIngresos() As System.Data.Linq.Table(Of T_CostosIngresos)
        Get
            Return Me.GetTable(Of T_CostosIngresos)
        End Get
    End Property

    Public ReadOnly Property T_Eventos() As System.Data.Linq.Table(Of T_Eventos)
        Get
            Return Me.GetTable(Of T_Eventos)
        End Get
    End Property

    Public ReadOnly Property T_BuscarControlArticulos() As System.Data.Linq.Table(Of T_BuscarControlArticulos)
        Get
            Return Me.GetTable(Of T_BuscarControlArticulos)
        End Get
    End Property

    Public ReadOnly Property T_Tracking() As System.Data.Linq.Table(Of T_Tracking)
        Get
            Return Me.GetTable(Of T_Tracking)
        End Get
    End Property

    Public ReadOnly Property T_TikDet() As System.Data.Linq.Table(Of T_TikDet)
        Get
            Return Me.GetTable(Of T_TikDet)
        End Get
    End Property

    Public ReadOnly Property T_TikGen() As System.Data.Linq.Table(Of T_TikGen)
        Get
            Return Me.GetTable(Of T_TikGen)
        End Get
    End Property

    Public ReadOnly Property T_Parametros() As System.Data.Linq.Table(Of T_Parametros)
        Get
            Return Me.GetTable(Of T_Parametros)
        End Get
    End Property

    Public ReadOnly Property T_Estados() As System.Data.Linq.Table(Of T_Estados)
        Get
            Return Me.GetTable(Of T_Estados)
        End Get
    End Property

    <Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.IncrementarCorrelativo")>
    Public Function IncrementarCorrelativo(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Local", DbType:="Int")> ByVal local As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TipoDoc", DbType:="VarChar(2)")> ByVal tipoDoc As String) As ISingleResult(Of IncrementarCorrelativoResult)
        Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), local, tipoDoc)
        Return CType(result.ReturnValue, ISingleResult(Of IncrementarCorrelativoResult))
    End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Accesos")>
Partial Public Class T_Accesos
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Acceso As Decimal

    Private _NombreAcceso As String

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAccesoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnAccesoChanged()
    End Sub
    Partial Private Sub OnNombreAccesoChanging(value As String)
    End Sub
    Partial Private Sub OnNombreAccesoChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Acceso", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=True)>
    Public Property Acceso() As Decimal
        Get
            Return Me._Acceso
        End Get
        Set
            If ((Me._Acceso = value) _
                        = False) Then
                Me.OnAccesoChanging(value)
                Me.SendPropertyChanging
                Me._Acceso = value
                Me.SendPropertyChanged("Acceso")
                Me.OnAccesoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreAcceso", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property NombreAcceso() As String
        Get
            Return Me._NombreAcceso
        End Get
        Set
            If (String.Equals(Me._NombreAcceso, value) = False) Then
                Me.OnNombreAccesoChanging(value)
                Me.SendPropertyChanging
                Me._NombreAcceso = value
                Me.SendPropertyChanged("NombreAcceso")
                Me.OnNombreAccesoChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AFPs")>
Partial Public Class T_AFPs
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _AFP As Decimal

    Private _NombreAFP As String

    Private _PorcentajeAFP As Double

    Private _Año As Decimal

    Private _Mes As Decimal

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAFPChanging(value As Decimal)
    End Sub
    Partial Private Sub OnAFPChanged()
    End Sub
    Partial Private Sub OnNombreAFPChanging(value As String)
    End Sub
    Partial Private Sub OnNombreAFPChanged()
    End Sub
    Partial Private Sub OnPorcentajeAFPChanging(value As Double)
    End Sub
    Partial Private Sub OnPorcentajeAFPChanged()
    End Sub
    Partial Private Sub OnAñoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnAñoChanged()
    End Sub
    Partial Private Sub OnMesChanging(value As Decimal)
    End Sub
    Partial Private Sub OnMesChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AFP", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property AFP() As Decimal
        Get
            Return Me._AFP
        End Get
        Set
            If ((Me._AFP = value) _
                        = False) Then
                Me.OnAFPChanging(value)
                Me.SendPropertyChanging
                Me._AFP = value
                Me.SendPropertyChanged("AFP")
                Me.OnAFPChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreAFP", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property NombreAFP() As String
        Get
            Return Me._NombreAFP
        End Get
        Set
            If (String.Equals(Me._NombreAFP, value) = False) Then
                Me.OnNombreAFPChanging(value)
                Me.SendPropertyChanging
                Me._NombreAFP = value
                Me.SendPropertyChanged("NombreAFP")
                Me.OnNombreAFPChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PorcentajeAFP", DbType:="Float NOT NULL")>
    Public Property PorcentajeAFP() As Double
        Get
            Return Me._PorcentajeAFP
        End Get
        Set
            If ((Me._PorcentajeAFP = value) _
                        = False) Then
                Me.OnPorcentajeAFPChanging(value)
                Me.SendPropertyChanging
                Me._PorcentajeAFP = value
                Me.SendPropertyChanged("PorcentajeAFP")
                Me.OnPorcentajeAFPChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Año", DbType:="Decimal(4,0) NOT NULL")>
    Public Property Año() As Decimal
        Get
            Return Me._Año
        End Get
        Set
            If ((Me._Año = value) _
                        = False) Then
                Me.OnAñoChanging(value)
                Me.SendPropertyChanging
                Me._Año = value
                Me.SendPropertyChanged("Año")
                Me.OnAñoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mes", DbType:="Decimal(2,0) NOT NULL")>
    Public Property Mes() As Decimal
        Get
            Return Me._Mes
        End Get
        Set
            If ((Me._Mes = value) _
                        = False) Then
                Me.OnMesChanging(value)
                Me.SendPropertyChanging
                Me._Mes = value
                Me.SendPropertyChanged("Mes")
                Me.OnMesChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Auditoria")>
Partial Public Class T_Auditoria
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Id As Decimal

    Private _Lugar As String

    Private _Fecha As Date

    Private _Hora As String

    Private _Local As Decimal

    Private _Usuario As String

    Private _Proceso As String

    Private _Evento As String

    Private _Dato As String

    Private _Valor As String

    Private _Cantidad As Decimal

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnLugarChanging(value As String)
    End Sub
    Partial Private Sub OnLugarChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnHoraChanging(value As String)
    End Sub
    Partial Private Sub OnHoraChanged()
    End Sub
    Partial Private Sub OnLocalChanging(value As Decimal)
    End Sub
    Partial Private Sub OnLocalChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnProcesoChanging(value As String)
    End Sub
    Partial Private Sub OnProcesoChanged()
    End Sub
    Partial Private Sub OnEventoChanging(value As String)
    End Sub
    Partial Private Sub OnEventoChanged()
    End Sub
    Partial Private Sub OnDatoChanging(value As String)
    End Sub
    Partial Private Sub OnDatoChanged()
    End Sub
    Partial Private Sub OnValorChanging(value As String)
    End Sub
    Partial Private Sub OnValorChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property Id() As Decimal
        Get
            Return Me._Id
        End Get
        Set
            If ((Me._Id = value) _
                        = False) Then
                Me.OnIdChanging(value)
                Me.SendPropertyChanging
                Me._Id = value
                Me.SendPropertyChanged("Id")
                Me.OnIdChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lugar", DbType:="Char(3) NOT NULL", CanBeNull:=False)>
    Public Property Lugar() As String
        Get
            Return Me._Lugar
        End Get
        Set
            If (String.Equals(Me._Lugar, value) = False) Then
                Me.OnLugarChanging(value)
                Me.SendPropertyChanging
                Me._Lugar = value
                Me.SendPropertyChanged("Lugar")
                Me.OnLugarChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="DateTime NOT NULL")>
    Public Property Fecha() As Date
        Get
            Return Me._Fecha
        End Get
        Set
            If ((Me._Fecha = value) _
                        = False) Then
                Me.OnFechaChanging(value)
                Me.SendPropertyChanging
                Me._Fecha = value
                Me.SendPropertyChanged("Fecha")
                Me.OnFechaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Hora", DbType:="Char(8) NOT NULL", CanBeNull:=False)>
    Public Property Hora() As String
        Get
            Return Me._Hora
        End Get
        Set
            If (String.Equals(Me._Hora, value) = False) Then
                Me.OnHoraChanging(value)
                Me.SendPropertyChanging
                Me._Hora = value
                Me.SendPropertyChanged("Hora")
                Me.OnHoraChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Local() As Decimal
        Get
            Return Me._Local
        End Get
        Set
            If ((Me._Local = value) _
                        = False) Then
                Me.OnLocalChanging(value)
                Me.SendPropertyChanging
                Me._Local = value
                Me.SendPropertyChanged("Local")
                Me.OnLocalChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="Char(3) NOT NULL", CanBeNull:=False)>
    Public Property Usuario() As String
        Get
            Return Me._Usuario
        End Get
        Set
            If (String.Equals(Me._Usuario, value) = False) Then
                Me.OnUsuarioChanging(value)
                Me.SendPropertyChanging
                Me._Usuario = value
                Me.SendPropertyChanged("Usuario")
                Me.OnUsuarioChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Proceso", DbType:="VarChar(100) NOT NULL", CanBeNull:=False)>
    Public Property Proceso() As String
        Get
            Return Me._Proceso
        End Get
        Set
            If (String.Equals(Me._Proceso, value) = False) Then
                Me.OnProcesoChanging(value)
                Me.SendPropertyChanging
                Me._Proceso = value
                Me.SendPropertyChanged("Proceso")
                Me.OnProcesoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Evento", DbType:="VarChar(100) NOT NULL", CanBeNull:=False)>
    Public Property Evento() As String
        Get
            Return Me._Evento
        End Get
        Set
            If (String.Equals(Me._Evento, value) = False) Then
                Me.OnEventoChanging(value)
                Me.SendPropertyChanging
                Me._Evento = value
                Me.SendPropertyChanged("Evento")
                Me.OnEventoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Dato", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Dato() As String
        Get
            Return Me._Dato
        End Get
        Set
            If (String.Equals(Me._Dato, value) = False) Then
                Me.OnDatoChanging(value)
                Me.SendPropertyChanging
                Me._Dato = value
                Me.SendPropertyChanged("Dato")
                Me.OnDatoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Valor", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Valor() As String
        Get
            Return Me._Valor
        End Get
        Set
            If (String.Equals(Me._Valor, value) = False) Then
                Me.OnValorChanging(value)
                Me.SendPropertyChanging
                Me._Valor = value
                Me.SendPropertyChanged("Valor")
                Me.OnValorChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cantidad", DbType:="Float NOT NULL")>
    Public Property Cantidad() As Decimal
        Get
            Return Me._Cantidad
        End Get
        Set
            If ((Me._Cantidad = value) _
                        = False) Then
                Me.OnCantidadChanging(value)
                Me.SendPropertyChanging
                Me._Cantidad = value
                Me.SendPropertyChanged("Cantidad")
                Me.OnCantidadChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Bancos")>
Partial Public Class T_Bancos

    Private _Banco As String

    Private _DescBanco As String

    Public Sub New()
        MyBase.New
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Banco", DbType:="Char(3) NOT NULL", CanBeNull:=False)>
    Public Property Banco() As String
        Get
            Return Me._Banco
        End Get
        Set
            If (String.Equals(Me._Banco, value) = False) Then
                Me._Banco = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescBanco", DbType:="Char(25) NOT NULL", CanBeNull:=False)>
    Public Property DescBanco() As String
        Get
            Return Me._DescBanco
        End Get
        Set
            If (String.Equals(Me._DescBanco, value) = False) Then
                Me._DescBanco = value
            End If
        End Set
    End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Bodegas")>
Partial Public Class T_Bodegas
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Bodega As Decimal

    Private _NombreBodega As String

    Private _Local As Decimal

    Private _Principal As Boolean

    Private _Despacho As Boolean

    Private _Movil As Boolean

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBodegaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnBodegaChanged()
    End Sub
    Partial Private Sub OnNombreBodegaChanging(value As String)
    End Sub
    Partial Private Sub OnNombreBodegaChanged()
    End Sub
    Partial Private Sub OnLocalChanging(value As Decimal)
    End Sub
    Partial Private Sub OnLocalChanged()
    End Sub
    Partial Private Sub OnPrincipalChanging(value As Boolean)
    End Sub
    Partial Private Sub OnPrincipalChanged()
    End Sub
    Partial Private Sub OnDespachoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnDespachoChanged()
    End Sub
    Partial Private Sub OnMovilChanging(value As Boolean)
    End Sub
    Partial Private Sub OnMovilChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bodega", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=True)>
    Public Property Bodega() As Decimal
        Get
            Return Me._Bodega
        End Get
        Set
            If ((Me._Bodega = value) _
                        = False) Then
                Me.OnBodegaChanging(value)
                Me.SendPropertyChanging
                Me._Bodega = value
                Me.SendPropertyChanged("Bodega")
                Me.OnBodegaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreBodega", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property NombreBodega() As String
        Get
            Return Me._NombreBodega
        End Get
        Set
            If (String.Equals(Me._NombreBodega, value) = False) Then
                Me.OnNombreBodegaChanging(value)
                Me.SendPropertyChanging
                Me._NombreBodega = value
                Me.SendPropertyChanged("NombreBodega")
                Me.OnNombreBodegaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Local() As Decimal
        Get
            Return Me._Local
        End Get
        Set
            If ((Me._Local = value) _
                        = False) Then
                Me.OnLocalChanging(value)
                Me.SendPropertyChanging
                Me._Local = value
                Me.SendPropertyChanged("Local")
                Me.OnLocalChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Principal", DbType:="Bit NOT NULL")>
    Public Property Principal() As Boolean
        Get
            Return Me._Principal
        End Get
        Set
            If ((Me._Principal = value) _
                        = False) Then
                Me.OnPrincipalChanging(value)
                Me.SendPropertyChanging
                Me._Principal = value
                Me.SendPropertyChanged("Principal")
                Me.OnPrincipalChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Despacho", DbType:="Bit NOT NULL")>
    Public Property Despacho() As Boolean
        Get
            Return Me._Despacho
        End Get
        Set
            If ((Me._Despacho = value) _
                        = False) Then
                Me.OnDespachoChanging(value)
                Me.SendPropertyChanging
                Me._Despacho = value
                Me.SendPropertyChanged("Despacho")
                Me.OnDespachoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Movil", DbType:="Bit NOT NULL")>
    Public Property Movil() As Boolean
        Get
            Return Me._Movil
        End Get
        Set
            If ((Me._Movil = value) _
                        = False) Then
                Me.OnMovilChanging(value)
                Me.SendPropertyChanging
                Me._Movil = value
                Me.SendPropertyChanged("Movil")
                Me.OnMovilChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CajaCompensacion")>
Partial Public Class T_CajaCompensacion
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _CajaComp As Decimal

    Private _NombreCajaComp As String

    Private _PorcentajeCajaComp As Double

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCajaCompChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCajaCompChanged()
    End Sub
    Partial Private Sub OnNombreCajaCompChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCajaCompChanged()
    End Sub
    Partial Private Sub OnPorcentajeCajaCompChanging(value As Double)
    End Sub
    Partial Private Sub OnPorcentajeCajaCompChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CajaComp", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=True)>
    Public Property CajaComp() As Decimal
        Get
            Return Me._CajaComp
        End Get
        Set
            If ((Me._CajaComp = value) _
                        = False) Then
                Me.OnCajaCompChanging(value)
                Me.SendPropertyChanging
                Me._CajaComp = value
                Me.SendPropertyChanged("CajaComp")
                Me.OnCajaCompChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreCajaComp", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property NombreCajaComp() As String
        Get
            Return Me._NombreCajaComp
        End Get
        Set
            If (String.Equals(Me._NombreCajaComp, value) = False) Then
                Me.OnNombreCajaCompChanging(value)
                Me.SendPropertyChanging
                Me._NombreCajaComp = value
                Me.SendPropertyChanged("NombreCajaComp")
                Me.OnNombreCajaCompChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PorcentajeCajaComp", DbType:="Float NOT NULL")>
    Public Property PorcentajeCajaComp() As Double
        Get
            Return Me._PorcentajeCajaComp
        End Get
        Set
            If ((Me._PorcentajeCajaComp = value) _
                        = False) Then
                Me.OnPorcentajeCajaCompChanging(value)
                Me.SendPropertyChanging
                Me._PorcentajeCajaComp = value
                Me.SendPropertyChanged("PorcentajeCajaComp")
                Me.OnPorcentajeCajaCompChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Comunas")>
Partial Public Class T_Comunas
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Codigo As String

    Private _NombreComuna As String

    Private _Alias As String

    Private _CodigoArea As Decimal

    Private _Region As String

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoChanged()
    End Sub
    Partial Private Sub OnNombreComunaChanging(value As String)
    End Sub
    Partial Private Sub OnNombreComunaChanged()
    End Sub
    Partial Private Sub OnAliasChanging(value As String)
    End Sub
    Partial Private Sub OnAliasChanged()
    End Sub
    Partial Private Sub OnCodigoAreaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCodigoAreaChanged()
    End Sub
    Partial Private Sub OnRegionChanging(value As String)
    End Sub
    Partial Private Sub OnRegionChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codigo", DbType:="VarChar(5) NOT NULL", CanBeNull:=False, IsPrimaryKey:=True)>
    Public Property Codigo() As String
        Get
            Return Me._Codigo
        End Get
        Set
            If (String.Equals(Me._Codigo, value) = False) Then
                Me.OnCodigoChanging(value)
                Me.SendPropertyChanging
                Me._Codigo = value
                Me.SendPropertyChanged("Codigo")
                Me.OnCodigoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreComuna", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property NombreComuna() As String
        Get
            Return Me._NombreComuna
        End Get
        Set
            If (String.Equals(Me._NombreComuna, value) = False) Then
                Me.OnNombreComunaChanging(value)
                Me.SendPropertyChanging
                Me._NombreComuna = value
                Me.SendPropertyChanged("NombreComuna")
                Me.OnNombreComunaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Alias", Storage:="_Alias", DbType:="VarChar(10) NOT NULL", CanBeNull:=False)>
    Public Property [Alias]() As String
        Get
            Return Me._Alias
        End Get
        Set
            If (String.Equals(Me._Alias, value) = False) Then
                Me.OnAliasChanging(value)
                Me.SendPropertyChanging
                Me._Alias = value
                Me.SendPropertyChanged("[Alias]")
                Me.OnAliasChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodigoArea", DbType:="Decimal(18,0) NOT NULL")>
    Public Property CodigoArea() As Decimal
        Get
            Return Me._CodigoArea
        End Get
        Set
            If ((Me._CodigoArea = value) _
                        = False) Then
                Me.OnCodigoAreaChanging(value)
                Me.SendPropertyChanging
                Me._CodigoArea = value
                Me.SendPropertyChanged("CodigoArea")
                Me.OnCodigoAreaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Region", DbType:="VarChar(2) NOT NULL", CanBeNull:=False)>
    Public Property Region() As String
        Get
            Return Me._Region
        End Get
        Set
            If (String.Equals(Me._Region, value) = False) Then
                Me.OnRegionChanging(value)
                Me.SendPropertyChanging
                Me._Region = value
                Me.SendPropertyChanged("Region")
                Me.OnRegionChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Control_Articulos")>
Partial Public Class T_Control_Articulos
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _ID As Decimal

    Private _Local As String

    Private _Fecha As Date

    Private _FPago As String

    Private _Documento As String

    Private _Articulo As Decimal

    Private _Marca As String

    Private _Modelo As String

    Private _Color As String

    Private _Talla As String

    Private _Año As Decimal

    Private _Activo As Boolean

    Private _SKU As String

    Private _Serie As String

    Private _Cliente As String

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnLocalChanging(value As String)
    End Sub
    Partial Private Sub OnLocalChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnFPagoChanging(value As String)
    End Sub
    Partial Private Sub OnFPagoChanged()
    End Sub
    Partial Private Sub OnDocumentoChanging(value As String)
    End Sub
    Partial Private Sub OnDocumentoChanged()
    End Sub
    Partial Private Sub OnArticuloChanging(value As Decimal)
    End Sub
    Partial Private Sub OnArticuloChanged()
    End Sub
    Partial Private Sub OnMarcaChanging(value As String)
    End Sub
    Partial Private Sub OnMarcaChanged()
    End Sub
    Partial Private Sub OnModeloChanging(value As String)
    End Sub
    Partial Private Sub OnModeloChanged()
    End Sub
    Partial Private Sub OnColorChanging(value As String)
    End Sub
    Partial Private Sub OnColorChanged()
    End Sub
    Partial Private Sub OnTallaChanging(value As String)
    End Sub
    Partial Private Sub OnTallaChanged()
    End Sub
    Partial Private Sub OnAñoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnAñoChanged()
    End Sub
    Partial Private Sub OnActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivoChanged()
    End Sub
    Partial Private Sub OnSKUChanging(value As String)
    End Sub
    Partial Private Sub OnSKUChanged()
    End Sub
    Partial Private Sub OnSerieChanging(value As String)
    End Sub
    Partial Private Sub OnSerieChanged()
    End Sub
    Partial Private Sub OnClienteChanging(value As String)
    End Sub
    Partial Private Sub OnClienteChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property ID() As Decimal
        Get
            Return Me._ID
        End Get
        Set
            If ((Me._ID = value) _
                        = False) Then
                Me.OnIDChanging(value)
                Me.SendPropertyChanging
                Me._ID = value
                Me.SendPropertyChanged("ID")
                Me.OnIDChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="VarChar(5) NOT NULL", CanBeNull:=False)>
    Public Property Local() As String
        Get
            Return Me._Local
        End Get
        Set
            If (String.Equals(Me._Local, value) = False) Then
                Me.OnLocalChanging(value)
                Me.SendPropertyChanging
                Me._Local = value
                Me.SendPropertyChanged("Local")
                Me.OnLocalChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="DateTime NOT NULL")>
    Public Property Fecha() As Date
        Get
            Return Me._Fecha
        End Get
        Set
            If ((Me._Fecha = value) _
                        = False) Then
                Me.OnFechaChanging(value)
                Me.SendPropertyChanging
                Me._Fecha = value
                Me.SendPropertyChanged("Fecha")
                Me.OnFechaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FPago", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property FPago() As String
        Get
            Return Me._FPago
        End Get
        Set
            If (String.Equals(Me._FPago, value) = False) Then
                Me.OnFPagoChanging(value)
                Me.SendPropertyChanging
                Me._FPago = value
                Me.SendPropertyChanged("FPago")
                Me.OnFPagoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Documento", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Documento() As String
        Get
            Return Me._Documento
        End Get
        Set
            If (String.Equals(Me._Documento, value) = False) Then
                Me.OnDocumentoChanging(value)
                Me.SendPropertyChanging
                Me._Documento = value
                Me.SendPropertyChanged("Documento")
                Me.OnDocumentoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Articulo", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Articulo() As Decimal
        Get
            Return Me._Articulo
        End Get
        Set
            If ((Me._Articulo = value) _
                        = False) Then
                Me.OnArticuloChanging(value)
                Me.SendPropertyChanging
                Me._Articulo = value
                Me.SendPropertyChanged("Articulo")
                Me.OnArticuloChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Marca", DbType:="VarChar(100) NOT NULL", CanBeNull:=False)>
    Public Property Marca() As String
        Get
            Return Me._Marca
        End Get
        Set
            If (String.Equals(Me._Marca, value) = False) Then
                Me.OnMarcaChanging(value)
                Me.SendPropertyChanging
                Me._Marca = value
                Me.SendPropertyChanged("Marca")
                Me.OnMarcaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Modelo", DbType:="VarChar(100) NOT NULL", CanBeNull:=False)>
    Public Property Modelo() As String
        Get
            Return Me._Modelo
        End Get
        Set
            If (String.Equals(Me._Modelo, value) = False) Then
                Me.OnModeloChanging(value)
                Me.SendPropertyChanging
                Me._Modelo = value
                Me.SendPropertyChanged("Modelo")
                Me.OnModeloChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Color", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Color() As String
        Get
            Return Me._Color
        End Get
        Set
            If (String.Equals(Me._Color, value) = False) Then
                Me.OnColorChanging(value)
                Me.SendPropertyChanging
                Me._Color = value
                Me.SendPropertyChanged("Color")
                Me.OnColorChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Talla", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Talla() As String
        Get
            Return Me._Talla
        End Get
        Set
            If (String.Equals(Me._Talla, value) = False) Then
                Me.OnTallaChanging(value)
                Me.SendPropertyChanging
                Me._Talla = value
                Me.SendPropertyChanged("Talla")
                Me.OnTallaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Año", DbType:="Decimal(4,0) NOT NULL")>
    Public Property Año() As Decimal
        Get
            Return Me._Año
        End Get
        Set
            If ((Me._Año = value) _
                        = False) Then
                Me.OnAñoChanging(value)
                Me.SendPropertyChanging
                Me._Año = value
                Me.SendPropertyChanged("Año")
                Me.OnAñoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Activo", DbType:="Bit NOT NULL")>
    Public Property Activo() As Boolean
        Get
            Return Me._Activo
        End Get
        Set
            If ((Me._Activo = value) _
                        = False) Then
                Me.OnActivoChanging(value)
                Me.SendPropertyChanging
                Me._Activo = value
                Me.SendPropertyChanged("Activo")
                Me.OnActivoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SKU", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property SKU() As String
        Get
            Return Me._SKU
        End Get
        Set
            If (String.Equals(Me._SKU, value) = False) Then
                Me.OnSKUChanging(value)
                Me.SendPropertyChanging
                Me._SKU = value
                Me.SendPropertyChanged("SKU")
                Me.OnSKUChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Serie", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Serie() As String
        Get
            Return Me._Serie
        End Get
        Set
            If (String.Equals(Me._Serie, value) = False) Then
                Me.OnSerieChanging(value)
                Me.SendPropertyChanging
                Me._Serie = value
                Me.SendPropertyChanged("Serie")
                Me.OnSerieChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cliente", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Cliente() As String
        Get
            Return Me._Cliente
        End Get
        Set
            If (String.Equals(Me._Cliente, value) = False) Then
                Me.OnClienteChanging(value)
                Me.SendPropertyChanging
                Me._Cliente = value
                Me.SendPropertyChanged("Cliente")
                Me.OnClienteChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Correlativos")>
Partial Public Class T_Correlativos
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _ID As Decimal

    Private _Local As Decimal

    Private _POS As Decimal

    Private _TipoDoc As String

    Private _Correlativo As Decimal

    Private _Inicial As Decimal

    Private _Final As Decimal

    Private _FechaCAF As Date

    Private _CAF As String

    Private _Aviso As Decimal

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnLocalChanging(value As Decimal)
    End Sub
    Partial Private Sub OnLocalChanged()
    End Sub
    Partial Private Sub OnPOSChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPOSChanged()
    End Sub
    Partial Private Sub OnTipoDocChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDocChanged()
    End Sub
    Partial Private Sub OnCorrelativoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCorrelativoChanged()
    End Sub
    Partial Private Sub OnInicialChanging(value As Decimal)
    End Sub
    Partial Private Sub OnInicialChanged()
    End Sub
    Partial Private Sub OnFinalChanging(value As Decimal)
    End Sub
    Partial Private Sub OnFinalChanged()
    End Sub
    Partial Private Sub OnFechaCAFChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaCAFChanged()
    End Sub
    Partial Private Sub OnCAFChanging(value As String)
    End Sub
    Partial Private Sub OnCAFChanged()
    End Sub
    Partial Private Sub OnAvisoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnAvisoChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property ID() As Decimal
        Get
            Return Me._ID
        End Get
        Set
            If ((Me._ID = value) _
                        = False) Then
                Me.OnIDChanging(value)
                Me.SendPropertyChanging
                Me._ID = value
                Me.SendPropertyChanged("ID")
                Me.OnIDChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Local() As Decimal
        Get
            Return Me._Local
        End Get
        Set
            If ((Me._Local = value) _
                        = False) Then
                Me.OnLocalChanging(value)
                Me.SendPropertyChanging
                Me._Local = value
                Me.SendPropertyChanged("Local")
                Me.OnLocalChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POS", DbType:="Decimal(18,0) NOT NULL")>
    Public Property POS() As Decimal
        Get
            Return Me._POS
        End Get
        Set
            If ((Me._POS = value) _
                        = False) Then
                Me.OnPOSChanging(value)
                Me.SendPropertyChanging
                Me._POS = value
                Me.SendPropertyChanged("POS")
                Me.OnPOSChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDoc", DbType:="Char(2) NOT NULL", CanBeNull:=False)>
    Public Property TipoDoc() As String
        Get
            Return Me._TipoDoc
        End Get
        Set
            If (String.Equals(Me._TipoDoc, value) = False) Then
                Me.OnTipoDocChanging(value)
                Me.SendPropertyChanging
                Me._TipoDoc = value
                Me.SendPropertyChanged("TipoDoc")
                Me.OnTipoDocChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Correlativo", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Correlativo() As Decimal
        Get
            Return Me._Correlativo
        End Get
        Set
            If ((Me._Correlativo = value) _
                        = False) Then
                Me.OnCorrelativoChanging(value)
                Me.SendPropertyChanging
                Me._Correlativo = value
                Me.SendPropertyChanged("Correlativo")
                Me.OnCorrelativoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Inicial", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Inicial() As Decimal
        Get
            Return Me._Inicial
        End Get
        Set
            If ((Me._Inicial = value) _
                        = False) Then
                Me.OnInicialChanging(value)
                Me.SendPropertyChanging
                Me._Inicial = value
                Me.SendPropertyChanged("Inicial")
                Me.OnInicialChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Final", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Final() As Decimal
        Get
            Return Me._Final
        End Get
        Set
            If ((Me._Final = value) _
                        = False) Then
                Me.OnFinalChanging(value)
                Me.SendPropertyChanging
                Me._Final = value
                Me.SendPropertyChanged("Final")
                Me.OnFinalChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaCAF", DbType:="Date NOT NULL")>
    Public Property FechaCAF() As Date
        Get
            Return Me._FechaCAF
        End Get
        Set
            If ((Me._FechaCAF = value) _
                        = False) Then
                Me.OnFechaCAFChanging(value)
                Me.SendPropertyChanging
                Me._FechaCAF = value
                Me.SendPropertyChanged("FechaCAF")
                Me.OnFechaCAFChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAF", DbType:="VarChar(2000) NOT NULL", CanBeNull:=False)>
    Public Property CAF() As String
        Get
            Return Me._CAF
        End Get
        Set
            If (String.Equals(Me._CAF, value) = False) Then
                Me.OnCAFChanging(value)
                Me.SendPropertyChanging
                Me._CAF = value
                Me.SendPropertyChanged("CAF")
                Me.OnCAFChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Aviso", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Aviso() As Decimal
        Get
            Return Me._Aviso
        End Get
        Set
            If ((Me._Aviso = value) _
                        = False) Then
                Me.OnAvisoChanging(value)
                Me.SendPropertyChanging
                Me._Aviso = value
                Me.SendPropertyChanged("Aviso")
                Me.OnAvisoChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DocumentosD")>
Partial Public Class T_DocumentosD
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _ID As Decimal

    Private _Local As Decimal

    Private _TipoDoc As String

    Private _Numero As Decimal

    Private _Articulo As Decimal

    Private _Cantidad As Double

    Private _Neto As Double

    Private _IVA As Decimal

    Private _EXE As Decimal

    Private _MIN As Decimal

    Private _BEB As Decimal

    Private _VIN As Decimal

    Private _CER As Decimal

    Private _LIC As Decimal

    Private _CAR As Decimal

    Private _LGT As Decimal

    Private _FEP As Decimal

    Private _TAB As Decimal

    Private _HAR As Decimal

    Private _OTRO As Decimal

    Private _PVenta As Double

    Private _Glosa As String

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnLocalChanging(value As Decimal)
    End Sub
    Partial Private Sub OnLocalChanged()
    End Sub
    Partial Private Sub OnTipoDocChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDocChanged()
    End Sub
    Partial Private Sub OnNumeroChanging(value As Decimal)
    End Sub
    Partial Private Sub OnNumeroChanged()
    End Sub
    Partial Private Sub OnArticuloChanging(value As Decimal)
    End Sub
    Partial Private Sub OnArticuloChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As Double)
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
    Partial Private Sub OnNetoChanging(value As Double)
    End Sub
    Partial Private Sub OnNetoChanged()
    End Sub
    Partial Private Sub OnIVAChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIVAChanged()
    End Sub
    Partial Private Sub OnEXEChanging(value As Decimal)
    End Sub
    Partial Private Sub OnEXEChanged()
    End Sub
    Partial Private Sub OnMINChanging(value As Decimal)
    End Sub
    Partial Private Sub OnMINChanged()
    End Sub
    Partial Private Sub OnBEBChanging(value As Decimal)
    End Sub
    Partial Private Sub OnBEBChanged()
    End Sub
    Partial Private Sub OnVINChanging(value As Decimal)
    End Sub
    Partial Private Sub OnVINChanged()
    End Sub
    Partial Private Sub OnCERChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCERChanged()
    End Sub
    Partial Private Sub OnLICChanging(value As Decimal)
    End Sub
    Partial Private Sub OnLICChanged()
    End Sub
    Partial Private Sub OnCARChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCARChanged()
    End Sub
    Partial Private Sub OnLGTChanging(value As Decimal)
    End Sub
    Partial Private Sub OnLGTChanged()
    End Sub
    Partial Private Sub OnFEPChanging(value As Decimal)
    End Sub
    Partial Private Sub OnFEPChanged()
    End Sub
    Partial Private Sub OnTABChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTABChanged()
    End Sub
    Partial Private Sub OnHARChanging(value As Decimal)
    End Sub
    Partial Private Sub OnHARChanged()
    End Sub
    Partial Private Sub OnOTROChanging(value As Decimal)
    End Sub
    Partial Private Sub OnOTROChanged()
    End Sub
    Partial Private Sub OnPVentaChanging(value As Double)
    End Sub
    Partial Private Sub OnPVentaChanged()
    End Sub
    Partial Private Sub OnGlosaChanging(value As String)
    End Sub
    Partial Private Sub OnGlosaChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property ID() As Decimal
        Get
            Return Me._ID
        End Get
        Set
            If ((Me._ID = value) _
                        = False) Then
                Me.OnIDChanging(value)
                Me.SendPropertyChanging
                Me._ID = value
                Me.SendPropertyChanged("ID")
                Me.OnIDChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Local() As Decimal
        Get
            Return Me._Local
        End Get
        Set
            If ((Me._Local = value) _
                        = False) Then
                Me.OnLocalChanging(value)
                Me.SendPropertyChanging
                Me._Local = value
                Me.SendPropertyChanged("Local")
                Me.OnLocalChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDoc", DbType:="VarChar(2) NOT NULL", CanBeNull:=False)>
    Public Property TipoDoc() As String
        Get
            Return Me._TipoDoc
        End Get
        Set
            If (String.Equals(Me._TipoDoc, value) = False) Then
                Me.OnTipoDocChanging(value)
                Me.SendPropertyChanging
                Me._TipoDoc = value
                Me.SendPropertyChanged("TipoDoc")
                Me.OnTipoDocChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Numero", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Numero() As Decimal
        Get
            Return Me._Numero
        End Get
        Set
            If ((Me._Numero = value) _
                        = False) Then
                Me.OnNumeroChanging(value)
                Me.SendPropertyChanging
                Me._Numero = value
                Me.SendPropertyChanged("Numero")
                Me.OnNumeroChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Articulo", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Articulo() As Decimal
        Get
            Return Me._Articulo
        End Get
        Set
            If ((Me._Articulo = value) _
                        = False) Then
                Me.OnArticuloChanging(value)
                Me.SendPropertyChanging
                Me._Articulo = value
                Me.SendPropertyChanged("Articulo")
                Me.OnArticuloChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cantidad", DbType:="Float NOT NULL")>
    Public Property Cantidad() As Double
        Get
            Return Me._Cantidad
        End Get
        Set
            If ((Me._Cantidad = value) _
                        = False) Then
                Me.OnCantidadChanging(value)
                Me.SendPropertyChanging
                Me._Cantidad = value
                Me.SendPropertyChanged("Cantidad")
                Me.OnCantidadChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Neto", DbType:="Float NOT NULL")>
    Public Property Neto() As Double
        Get
            Return Me._Neto
        End Get
        Set
            If ((Me._Neto = value) _
                        = False) Then
                Me.OnNetoChanging(value)
                Me.SendPropertyChanging
                Me._Neto = value
                Me.SendPropertyChanged("Neto")
                Me.OnNetoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IVA", DbType:="Decimal(18,0) NOT NULL")>
    Public Property IVA() As Decimal
        Get
            Return Me._IVA
        End Get
        Set
            If ((Me._IVA = value) _
                        = False) Then
                Me.OnIVAChanging(value)
                Me.SendPropertyChanging
                Me._IVA = value
                Me.SendPropertyChanged("IVA")
                Me.OnIVAChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXE", DbType:="Decimal(18,0) NOT NULL")>
    Public Property EXE() As Decimal
        Get
            Return Me._EXE
        End Get
        Set
            If ((Me._EXE = value) _
                        = False) Then
                Me.OnEXEChanging(value)
                Me.SendPropertyChanging
                Me._EXE = value
                Me.SendPropertyChanged("EXE")
                Me.OnEXEChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MIN", DbType:="Decimal(18,0) NOT NULL")>
    Public Property MIN() As Decimal
        Get
            Return Me._MIN
        End Get
        Set
            If ((Me._MIN = value) _
                        = False) Then
                Me.OnMINChanging(value)
                Me.SendPropertyChanging
                Me._MIN = value
                Me.SendPropertyChanged("MIN")
                Me.OnMINChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BEB", DbType:="Decimal(18,0) NOT NULL")>
    Public Property BEB() As Decimal
        Get
            Return Me._BEB
        End Get
        Set
            If ((Me._BEB = value) _
                        = False) Then
                Me.OnBEBChanging(value)
                Me.SendPropertyChanging
                Me._BEB = value
                Me.SendPropertyChanged("BEB")
                Me.OnBEBChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VIN", DbType:="Decimal(18,0) NOT NULL")>
    Public Property VIN() As Decimal
        Get
            Return Me._VIN
        End Get
        Set
            If ((Me._VIN = value) _
                        = False) Then
                Me.OnVINChanging(value)
                Me.SendPropertyChanging
                Me._VIN = value
                Me.SendPropertyChanged("VIN")
                Me.OnVINChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER", DbType:="Decimal(18,0) NOT NULL")>
    Public Property CER() As Decimal
        Get
            Return Me._CER
        End Get
        Set
            If ((Me._CER = value) _
                        = False) Then
                Me.OnCERChanging(value)
                Me.SendPropertyChanging
                Me._CER = value
                Me.SendPropertyChanged("CER")
                Me.OnCERChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LIC", DbType:="Decimal(18,0) NOT NULL")>
    Public Property LIC() As Decimal
        Get
            Return Me._LIC
        End Get
        Set
            If ((Me._LIC = value) _
                        = False) Then
                Me.OnLICChanging(value)
                Me.SendPropertyChanging
                Me._LIC = value
                Me.SendPropertyChanged("LIC")
                Me.OnLICChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAR", DbType:="Decimal(18,0) NOT NULL")>
    Public Property CAR() As Decimal
        Get
            Return Me._CAR
        End Get
        Set
            If ((Me._CAR = value) _
                        = False) Then
                Me.OnCARChanging(value)
                Me.SendPropertyChanging
                Me._CAR = value
                Me.SendPropertyChanged("CAR")
                Me.OnCARChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LGT", DbType:="Decimal(18,0) NOT NULL")>
    Public Property LGT() As Decimal
        Get
            Return Me._LGT
        End Get
        Set
            If ((Me._LGT = value) _
                        = False) Then
                Me.OnLGTChanging(value)
                Me.SendPropertyChanging
                Me._LGT = value
                Me.SendPropertyChanged("LGT")
                Me.OnLGTChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FEP", DbType:="Decimal(18,0) NOT NULL")>
    Public Property FEP() As Decimal
        Get
            Return Me._FEP
        End Get
        Set
            If ((Me._FEP = value) _
                        = False) Then
                Me.OnFEPChanging(value)
                Me.SendPropertyChanging
                Me._FEP = value
                Me.SendPropertyChanged("FEP")
                Me.OnFEPChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAB", DbType:="Decimal(18,0) NOT NULL")>
    Public Property TAB() As Decimal
        Get
            Return Me._TAB
        End Get
        Set
            If ((Me._TAB = value) _
                        = False) Then
                Me.OnTABChanging(value)
                Me.SendPropertyChanging
                Me._TAB = value
                Me.SendPropertyChanged("TAB")
                Me.OnTABChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HAR", DbType:="Decimal(18,0) NOT NULL")>
    Public Property HAR() As Decimal
        Get
            Return Me._HAR
        End Get
        Set
            If ((Me._HAR = value) _
                        = False) Then
                Me.OnHARChanging(value)
                Me.SendPropertyChanging
                Me._HAR = value
                Me.SendPropertyChanged("HAR")
                Me.OnHARChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTRO", DbType:="Decimal(18,0) NOT NULL")>
    Public Property OTRO() As Decimal
        Get
            Return Me._OTRO
        End Get
        Set
            If ((Me._OTRO = value) _
                        = False) Then
                Me.OnOTROChanging(value)
                Me.SendPropertyChanging
                Me._OTRO = value
                Me.SendPropertyChanged("OTRO")
                Me.OnOTROChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVenta", DbType:="Float NOT NULL")>
    Public Property PVenta() As Double
        Get
            Return Me._PVenta
        End Get
        Set
            If ((Me._PVenta = value) _
                        = False) Then
                Me.OnPVentaChanging(value)
                Me.SendPropertyChanging
                Me._PVenta = value
                Me.SendPropertyChanged("PVenta")
                Me.OnPVentaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Glosa", DbType:="VarChar(4000) NOT NULL", CanBeNull:=False)>
    Public Property Glosa() As String
        Get
            Return Me._Glosa
        End Get
        Set
            If (String.Equals(Me._Glosa, value) = False) Then
                Me.OnGlosaChanging(value)
                Me.SendPropertyChanging
                Me._Glosa = value
                Me.SendPropertyChanged("Glosa")
                Me.OnGlosaChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DocumentosR")>
Partial Public Class T_DocumentosR
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _ID As Decimal

    Private _Local As Decimal

    Private _TipoDoc As String

    Private _Numero As Decimal

    Private _TipoDocRef As String

    Private _NumDocRef As String

    Private _FechaRef As Date

    Private _Tributario As Boolean

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnLocalChanging(value As Decimal)
    End Sub
    Partial Private Sub OnLocalChanged()
    End Sub
    Partial Private Sub OnTipoDocChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDocChanged()
    End Sub
    Partial Private Sub OnNumeroChanging(value As Decimal)
    End Sub
    Partial Private Sub OnNumeroChanged()
    End Sub
    Partial Private Sub OnTipoDocRefChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDocRefChanged()
    End Sub
    Partial Private Sub OnNumDocRefChanging(value As String)
    End Sub
    Partial Private Sub OnNumDocRefChanged()
    End Sub
    Partial Private Sub OnFechaRefChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaRefChanged()
    End Sub
    Partial Private Sub OnTributarioChanging(value As Boolean)
    End Sub
    Partial Private Sub OnTributarioChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property ID() As Decimal
        Get
            Return Me._ID
        End Get
        Set
            If ((Me._ID = value) _
                        = False) Then
                Me.OnIDChanging(value)
                Me.SendPropertyChanging
                Me._ID = value
                Me.SendPropertyChanged("ID")
                Me.OnIDChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Local() As Decimal
        Get
            Return Me._Local
        End Get
        Set
            If ((Me._Local = value) _
                        = False) Then
                Me.OnLocalChanging(value)
                Me.SendPropertyChanging
                Me._Local = value
                Me.SendPropertyChanged("Local")
                Me.OnLocalChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDoc", DbType:="VarChar(2) NOT NULL", CanBeNull:=False)>
    Public Property TipoDoc() As String
        Get
            Return Me._TipoDoc
        End Get
        Set
            If (String.Equals(Me._TipoDoc, value) = False) Then
                Me.OnTipoDocChanging(value)
                Me.SendPropertyChanging
                Me._TipoDoc = value
                Me.SendPropertyChanged("TipoDoc")
                Me.OnTipoDocChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Numero", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Numero() As Decimal
        Get
            Return Me._Numero
        End Get
        Set
            If ((Me._Numero = value) _
                        = False) Then
                Me.OnNumeroChanging(value)
                Me.SendPropertyChanging
                Me._Numero = value
                Me.SendPropertyChanged("Numero")
                Me.OnNumeroChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDocRef", DbType:="VarChar(2) NOT NULL", CanBeNull:=False)>
    Public Property TipoDocRef() As String
        Get
            Return Me._TipoDocRef
        End Get
        Set
            If (String.Equals(Me._TipoDocRef, value) = False) Then
                Me.OnTipoDocRefChanging(value)
                Me.SendPropertyChanging
                Me._TipoDocRef = value
                Me.SendPropertyChanged("TipoDocRef")
                Me.OnTipoDocRefChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumDocRef", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property NumDocRef() As String
        Get
            Return Me._NumDocRef
        End Get
        Set
            If (String.Equals(Me._NumDocRef, value) = False) Then
                Me.OnNumDocRefChanging(value)
                Me.SendPropertyChanging
                Me._NumDocRef = value
                Me.SendPropertyChanged("NumDocRef")
                Me.OnNumDocRefChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaRef", DbType:="DateTime NOT NULL")>
    Public Property FechaRef() As Date
        Get
            Return Me._FechaRef
        End Get
        Set
            If ((Me._FechaRef = value) _
                        = False) Then
                Me.OnFechaRefChanging(value)
                Me.SendPropertyChanging
                Me._FechaRef = value
                Me.SendPropertyChanged("FechaRef")
                Me.OnFechaRefChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tributario", DbType:="Bit NOT NULL")>
    Public Property Tributario() As Boolean
        Get
            Return Me._Tributario
        End Get
        Set
            If ((Me._Tributario = value) _
                        = False) Then
                Me.OnTributarioChanging(value)
                Me.SendPropertyChanging
                Me._Tributario = value
                Me.SendPropertyChanged("Tributario")
                Me.OnTributarioChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Etiquetas")>
Partial Public Class T_Etiquetas
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Id As Decimal

    Private _Fecha As Date

    Private _Local As Decimal

    Private _Usuario As String

    Private _Cliente As Decimal

    Private _Articulo As Decimal

    Private _Cantidad As Decimal

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnLocalChanging(value As Decimal)
    End Sub
    Partial Private Sub OnLocalChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnClienteChanging(value As Decimal)
    End Sub
    Partial Private Sub OnClienteChanged()
    End Sub
    Partial Private Sub OnArticuloChanging(value As Decimal)
    End Sub
    Partial Private Sub OnArticuloChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property Id() As Decimal
        Get
            Return Me._Id
        End Get
        Set
            If ((Me._Id = value) _
                        = False) Then
                Me.OnIdChanging(value)
                Me.SendPropertyChanging
                Me._Id = value
                Me.SendPropertyChanged("Id")
                Me.OnIdChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="DateTime NOT NULL")>
    Public Property Fecha() As Date
        Get
            Return Me._Fecha
        End Get
        Set
            If ((Me._Fecha = value) _
                        = False) Then
                Me.OnFechaChanging(value)
                Me.SendPropertyChanging
                Me._Fecha = value
                Me.SendPropertyChanged("Fecha")
                Me.OnFechaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Local() As Decimal
        Get
            Return Me._Local
        End Get
        Set
            If ((Me._Local = value) _
                        = False) Then
                Me.OnLocalChanging(value)
                Me.SendPropertyChanging
                Me._Local = value
                Me.SendPropertyChanged("Local")
                Me.OnLocalChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="VarChar(3) NOT NULL", CanBeNull:=False)>
    Public Property Usuario() As String
        Get
            Return Me._Usuario
        End Get
        Set
            If (String.Equals(Me._Usuario, value) = False) Then
                Me.OnUsuarioChanging(value)
                Me.SendPropertyChanging
                Me._Usuario = value
                Me.SendPropertyChanged("Usuario")
                Me.OnUsuarioChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cliente", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Cliente() As Decimal
        Get
            Return Me._Cliente
        End Get
        Set
            If ((Me._Cliente = value) _
                        = False) Then
                Me.OnClienteChanging(value)
                Me.SendPropertyChanging
                Me._Cliente = value
                Me.SendPropertyChanged("Cliente")
                Me.OnClienteChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Articulo", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Articulo() As Decimal
        Get
            Return Me._Articulo
        End Get
        Set
            If ((Me._Articulo = value) _
                        = False) Then
                Me.OnArticuloChanging(value)
                Me.SendPropertyChanging
                Me._Articulo = value
                Me.SendPropertyChanged("Articulo")
                Me.OnArticuloChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cantidad", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Cantidad() As Decimal
        Get
            Return Me._Cantidad
        End Get
        Set
            If ((Me._Cantidad = value) _
                        = False) Then
                Me.OnCantidadChanging(value)
                Me.SendPropertyChanging
                Me._Cantidad = value
                Me.SendPropertyChanged("Cantidad")
                Me.OnCantidadChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.EventosRem")>
Partial Public Class T_EventosRem
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _EventoRem As Decimal

    Private _DescEventoRem As String

    Private _CalculoRem As String

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnEventoRemChanging(value As Decimal)
    End Sub
    Partial Private Sub OnEventoRemChanged()
    End Sub
    Partial Private Sub OnDescEventoRemChanging(value As String)
    End Sub
    Partial Private Sub OnDescEventoRemChanged()
    End Sub
    Partial Private Sub OnCalculoRemChanging(value As String)
    End Sub
    Partial Private Sub OnCalculoRemChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EventoRem", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=True)>
    Public Property EventoRem() As Decimal
        Get
            Return Me._EventoRem
        End Get
        Set
            If ((Me._EventoRem = value) _
                        = False) Then
                Me.OnEventoRemChanging(value)
                Me.SendPropertyChanging
                Me._EventoRem = value
                Me.SendPropertyChanged("EventoRem")
                Me.OnEventoRemChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescEventoRem", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property DescEventoRem() As String
        Get
            Return Me._DescEventoRem
        End Get
        Set
            If (String.Equals(Me._DescEventoRem, value) = False) Then
                Me.OnDescEventoRemChanging(value)
                Me.SendPropertyChanging
                Me._DescEventoRem = value
                Me.SendPropertyChanged("DescEventoRem")
                Me.OnDescEventoRemChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CalculoRem", DbType:="VarChar(1) NOT NULL", CanBeNull:=False)>
    Public Property CalculoRem() As String
        Get
            Return Me._CalculoRem
        End Get
        Set
            If (String.Equals(Me._CalculoRem, value) = False) Then
                Me.OnCalculoRemChanging(value)
                Me.SendPropertyChanging
                Me._CalculoRem = value
                Me.SendPropertyChanged("CalculoRem")
                Me.OnCalculoRemChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Familias")>
Partial Public Class T_Familias
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Familia As Decimal

    Private _DescFamilia As String

    Private _VisibleWeb As Boolean

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFamiliaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnFamiliaChanged()
    End Sub
    Partial Private Sub OnDescFamiliaChanging(value As String)
    End Sub
    Partial Private Sub OnDescFamiliaChanged()
    End Sub
    Partial Private Sub OnVisibleWebChanging(value As Boolean)
    End Sub
    Partial Private Sub OnVisibleWebChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Familia", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=True)>
    Public Property Familia() As Decimal
        Get
            Return Me._Familia
        End Get
        Set
            If ((Me._Familia = value) _
                        = False) Then
                Me.OnFamiliaChanging(value)
                Me.SendPropertyChanging
                Me._Familia = value
                Me.SendPropertyChanged("Familia")
                Me.OnFamiliaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescFamilia", DbType:="VarChar(100) NOT NULL", CanBeNull:=False)>
    Public Property DescFamilia() As String
        Get
            Return Me._DescFamilia
        End Get
        Set
            If (String.Equals(Me._DescFamilia, value) = False) Then
                Me.OnDescFamiliaChanging(value)
                Me.SendPropertyChanging
                Me._DescFamilia = value
                Me.SendPropertyChanged("DescFamilia")
                Me.OnDescFamiliaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VisibleWeb", DbType:="Bit NOT NULL")>
    Public Property VisibleWeb() As Boolean
        Get
            Return Me._VisibleWeb
        End Get
        Set
            If ((Me._VisibleWeb = value) _
                        = False) Then
                Me.OnVisibleWebChanging(value)
                Me.SendPropertyChanging
                Me._VisibleWeb = value
                Me.SendPropertyChanged("VisibleWeb")
                Me.OnVisibleWebChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FPagos")>
Partial Public Class T_FPagos
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _FPago As String

    Private _DescFPago As String

    Private _Dias As Decimal

    Private _Orden As Decimal

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFPagoChanging(value As String)
    End Sub
    Partial Private Sub OnFPagoChanged()
    End Sub
    Partial Private Sub OnDescFPagoChanging(value As String)
    End Sub
    Partial Private Sub OnDescFPagoChanged()
    End Sub
    Partial Private Sub OnDiasChanging(value As Decimal)
    End Sub
    Partial Private Sub OnDiasChanged()
    End Sub
    Partial Private Sub OnOrdenChanging(value As Decimal)
    End Sub
    Partial Private Sub OnOrdenChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FPago", DbType:="VarChar(2) NOT NULL", CanBeNull:=False, IsPrimaryKey:=True)>
    Public Property FPago() As String
        Get
            Return Me._FPago
        End Get
        Set
            If (String.Equals(Me._FPago, value) = False) Then
                Me.OnFPagoChanging(value)
                Me.SendPropertyChanging
                Me._FPago = value
                Me.SendPropertyChanged("FPago")
                Me.OnFPagoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescFPago", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property DescFPago() As String
        Get
            Return Me._DescFPago
        End Get
        Set
            If (String.Equals(Me._DescFPago, value) = False) Then
                Me.OnDescFPagoChanging(value)
                Me.SendPropertyChanging
                Me._DescFPago = value
                Me.SendPropertyChanged("DescFPago")
                Me.OnDescFPagoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Dias", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Dias() As Decimal
        Get
            Return Me._Dias
        End Get
        Set
            If ((Me._Dias = value) _
                        = False) Then
                Me.OnDiasChanging(value)
                Me.SendPropertyChanging
                Me._Dias = value
                Me.SendPropertyChanged("Dias")
                Me.OnDiasChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Orden", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Orden() As Decimal
        Get
            Return Me._Orden
        End Get
        Set
            If ((Me._Orden = value) _
                        = False) Then
                Me.OnOrdenChanging(value)
                Me.SendPropertyChanging
                Me._Orden = value
                Me.SendPropertyChanged("Orden")
                Me.OnOrdenChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ImpuestoUnico")>
Partial Public Class T_ImpuestoUnico
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Id As Decimal

    Private _Tope As Double

    Private _Factor As Double

    Private _Rebaja As Double

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnTopeChanging(value As Double)
    End Sub
    Partial Private Sub OnTopeChanged()
    End Sub
    Partial Private Sub OnFactorChanging(value As Double)
    End Sub
    Partial Private Sub OnFactorChanged()
    End Sub
    Partial Private Sub OnRebajaChanging(value As Double)
    End Sub
    Partial Private Sub OnRebajaChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property Id() As Decimal
        Get
            Return Me._Id
        End Get
        Set
            If ((Me._Id = value) _
                        = False) Then
                Me.OnIdChanging(value)
                Me.SendPropertyChanging
                Me._Id = value
                Me.SendPropertyChanged("Id")
                Me.OnIdChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tope", DbType:="Float NOT NULL")>
    Public Property Tope() As Double
        Get
            Return Me._Tope
        End Get
        Set
            If ((Me._Tope = value) _
                        = False) Then
                Me.OnTopeChanging(value)
                Me.SendPropertyChanging
                Me._Tope = value
                Me.SendPropertyChanged("Tope")
                Me.OnTopeChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Factor", DbType:="Float NOT NULL")>
    Public Property Factor() As Double
        Get
            Return Me._Factor
        End Get
        Set
            If ((Me._Factor = value) _
                        = False) Then
                Me.OnFactorChanging(value)
                Me.SendPropertyChanging
                Me._Factor = value
                Me.SendPropertyChanged("Factor")
                Me.OnFactorChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rebaja", DbType:="Float NOT NULL")>
    Public Property Rebaja() As Double
        Get
            Return Me._Rebaja
        End Get
        Set
            If ((Me._Rebaja = value) _
                        = False) Then
                Me.OnRebajaChanging(value)
                Me.SendPropertyChanging
                Me._Rebaja = value
                Me.SendPropertyChanged("Rebaja")
                Me.OnRebajaChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[Log]")>
Partial Public Class T_Log
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Id As Decimal

    Private _Mensaje As String

    Private _fecha As Date

    Private _cliente As Decimal

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnMensajeChanging(value As String)
    End Sub
    Partial Private Sub OnMensajeChanged()
    End Sub
    Partial Private Sub OnfechaChanging(value As Date)
    End Sub
    Partial Private Sub OnfechaChanged()
    End Sub
    Partial Private Sub OnclienteChanging(value As Decimal)
    End Sub
    Partial Private Sub OnclienteChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property Id() As Decimal
        Get
            Return Me._Id
        End Get
        Set
            If ((Me._Id = value) _
                        = False) Then
                Me.OnIdChanging(value)
                Me.SendPropertyChanging
                Me._Id = value
                Me.SendPropertyChanged("Id")
                Me.OnIdChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mensaje", DbType:="VarChar(5000) NOT NULL", CanBeNull:=False)>
    Public Property Mensaje() As String
        Get
            Return Me._Mensaje
        End Get
        Set
            If (String.Equals(Me._Mensaje, value) = False) Then
                Me.OnMensajeChanging(value)
                Me.SendPropertyChanging
                Me._Mensaje = value
                Me.SendPropertyChanged("Mensaje")
                Me.OnMensajeChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fecha", DbType:="DateTime NOT NULL")>
    Public Property fecha() As Date
        Get
            Return Me._fecha
        End Get
        Set
            If ((Me._fecha = value) _
                        = False) Then
                Me.OnfechaChanging(value)
                Me.SendPropertyChanging
                Me._fecha = value
                Me.SendPropertyChanged("fecha")
                Me.OnfechaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cliente", DbType:="Decimal(18,0) NOT NULL")>
    Public Property cliente() As Decimal
        Get
            Return Me._cliente
        End Get
        Set
            If ((Me._cliente = value) _
                        = False) Then
                Me.OnclienteChanging(value)
                Me.SendPropertyChanging
                Me._cliente = value
                Me.SendPropertyChanged("cliente")
                Me.OnclienteChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LogIntegraciones")>
Partial Public Class T_LogIntegraciones

    Private _id As Decimal

    Private _Fecha As Date

    Private _Integracion As String

    Private _Version As String

    Private _Cliente As Decimal

    Private _Local As Decimal

    Private _Servidor As String

    Private _Conexion As String

    Private _Query As String

    Private _Evento As String

    Public Sub New()
        MyBase.New
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", AutoSync:=AutoSync.Always, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsDbGenerated:=True)>
    Public Property id() As Decimal
        Get
            Return Me._id
        End Get
        Set
            If ((Me._id = value) _
                        = False) Then
                Me._id = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="DateTime NOT NULL")>
    Public Property Fecha() As Date
        Get
            Return Me._Fecha
        End Get
        Set
            If ((Me._Fecha = value) _
                        = False) Then
                Me._Fecha = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Integracion", DbType:="VarChar(120) NOT NULL", CanBeNull:=False)>
    Public Property Integracion() As String
        Get
            Return Me._Integracion
        End Get
        Set
            If (String.Equals(Me._Integracion, value) = False) Then
                Me._Integracion = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Version", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Version() As String
        Get
            Return Me._Version
        End Get
        Set
            If (String.Equals(Me._Version, value) = False) Then
                Me._Version = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cliente", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Cliente() As Decimal
        Get
            Return Me._Cliente
        End Get
        Set
            If ((Me._Cliente = value) _
                        = False) Then
                Me._Cliente = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Local() As Decimal
        Get
            Return Me._Local
        End Get
        Set
            If ((Me._Local = value) _
                        = False) Then
                Me._Local = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Servidor", DbType:="VarChar(120) NOT NULL", CanBeNull:=False)>
    Public Property Servidor() As String
        Get
            Return Me._Servidor
        End Get
        Set
            If (String.Equals(Me._Servidor, value) = False) Then
                Me._Servidor = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conexion", DbType:="VarChar(150) NOT NULL", CanBeNull:=False)>
    Public Property Conexion() As String
        Get
            Return Me._Conexion
        End Get
        Set
            If (String.Equals(Me._Conexion, value) = False) Then
                Me._Conexion = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Query", DbType:="VarChar(MAX) NOT NULL", CanBeNull:=False)>
    Public Property Query() As String
        Get
            Return Me._Query
        End Get
        Set
            If (String.Equals(Me._Query, value) = False) Then
                Me._Query = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Evento", DbType:="VarChar(MAX) NOT NULL", CanBeNull:=False)>
    Public Property Evento() As String
        Get
            Return Me._Evento
        End Get
        Set
            If (String.Equals(Me._Evento, value) = False) Then
                Me._Evento = value
            End If
        End Set
    End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ModoPagos")>
Partial Public Class T_ModoPagos
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _ModoPago As Char

    Private _DescModoPago As String

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnModoPagoChanging(value As Char)
    End Sub
    Partial Private Sub OnModoPagoChanged()
    End Sub
    Partial Private Sub OnDescModoPagoChanging(value As String)
    End Sub
    Partial Private Sub OnDescModoPagoChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModoPago", DbType:="NChar(1) NOT NULL", IsPrimaryKey:=True)>
    Public Property ModoPago() As Char
        Get
            Return Me._ModoPago
        End Get
        Set
            If ((Me._ModoPago = value) _
                        = False) Then
                Me.OnModoPagoChanging(value)
                Me.SendPropertyChanging
                Me._ModoPago = value
                Me.SendPropertyChanged("ModoPago")
                Me.OnModoPagoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescModoPago", DbType:="NVarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property DescModoPago() As String
        Get
            Return Me._DescModoPago
        End Get
        Set
            If (String.Equals(Me._DescModoPago, value) = False) Then
                Me.OnDescModoPagoChanging(value)
                Me.SendPropertyChanging
                Me._DescModoPago = value
                Me.SendPropertyChanged("DescModoPago")
                Me.OnDescModoPagoChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Modulos")>
Partial Public Class T_Modulos
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Modulo As Decimal

    Private _Menu As String

    Private _Texto As String

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnModuloChanging(value As Decimal)
    End Sub
    Partial Private Sub OnModuloChanged()
    End Sub
    Partial Private Sub OnMenuChanging(value As String)
    End Sub
    Partial Private Sub OnMenuChanged()
    End Sub
    Partial Private Sub OnTextoChanging(value As String)
    End Sub
    Partial Private Sub OnTextoChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Modulo", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property Modulo() As Decimal
        Get
            Return Me._Modulo
        End Get
        Set
            If ((Me._Modulo = value) _
                        = False) Then
                Me.OnModuloChanging(value)
                Me.SendPropertyChanging
                Me._Modulo = value
                Me.SendPropertyChanged("Modulo")
                Me.OnModuloChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Menu", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Menu() As String
        Get
            Return Me._Menu
        End Get
        Set
            If (String.Equals(Me._Menu, value) = False) Then
                Me.OnMenuChanging(value)
                Me.SendPropertyChanging
                Me._Menu = value
                Me.SendPropertyChanged("Menu")
                Me.OnMenuChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Texto", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Texto() As String
        Get
            Return Me._Texto
        End Get
        Set
            If (String.Equals(Me._Texto, value) = False) Then
                Me.OnTextoChanging(value)
                Me.SendPropertyChanging
                Me._Texto = value
                Me.SendPropertyChanged("Texto")
                Me.OnTextoChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Motivos")>
Partial Public Class T_Motivos

    Private _Motivo As String

    Private _DescMotivo As String

    Private _TipoDoc As String

    Public Sub New()
        MyBase.New
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Motivo", DbType:="VarChar(1) NOT NULL", CanBeNull:=False)>
    Public Property Motivo() As String
        Get
            Return Me._Motivo
        End Get
        Set
            If (String.Equals(Me._Motivo, value) = False) Then
                Me._Motivo = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescMotivo", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property DescMotivo() As String
        Get
            Return Me._DescMotivo
        End Get
        Set
            If (String.Equals(Me._DescMotivo, value) = False) Then
                Me._DescMotivo = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDoc", DbType:="VarChar(2) NOT NULL", CanBeNull:=False)>
    Public Property TipoDoc() As String
        Get
            Return Me._TipoDoc
        End Get
        Set
            If (String.Equals(Me._TipoDoc, value) = False) Then
                Me._TipoDoc = value
            End If
        End Set
    End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MovGen")>
Partial Public Class T_MovGen
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Movimiento As Decimal

    Private _Fecha As Date

    Private _Hora As String

    Private _TipoMov As String

    Private _Local As Decimal

    Private _Bodega As Decimal

    Private _Destino As Decimal

    Private _Usuario As String

    Private _Responsable As String

    Private _Estado As String

    Private _TipoDoc As String

    Private _NumDoc As Decimal

    Private _ObsTra As String

    Private _Total As Double

    Private _Cargado As Boolean

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMovimientoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnMovimientoChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnHoraChanging(value As String)
    End Sub
    Partial Private Sub OnHoraChanged()
    End Sub
    Partial Private Sub OnTipoMovChanging(value As String)
    End Sub
    Partial Private Sub OnTipoMovChanged()
    End Sub
    Partial Private Sub OnLocalChanging(value As Decimal)
    End Sub
    Partial Private Sub OnLocalChanged()
    End Sub
    Partial Private Sub OnBodegaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnBodegaChanged()
    End Sub
    Partial Private Sub OnDestinoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnDestinoChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnResponsableChanging(value As String)
    End Sub
    Partial Private Sub OnResponsableChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnTipoDocChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDocChanged()
    End Sub
    Partial Private Sub OnNumDocChanging(value As Decimal)
    End Sub
    Partial Private Sub OnNumDocChanged()
    End Sub
    Partial Private Sub OnObsTraChanging(value As String)
    End Sub
    Partial Private Sub OnObsTraChanged()
    End Sub
    Partial Private Sub OnTotalChanging(value As Double)
    End Sub
    Partial Private Sub OnTotalChanged()
    End Sub
    Partial Private Sub OnCargadoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCargadoChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Movimiento", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property Movimiento() As Decimal
        Get
            Return Me._Movimiento
        End Get
        Set
            If ((Me._Movimiento = value) _
                        = False) Then
                Me.OnMovimientoChanging(value)
                Me.SendPropertyChanging
                Me._Movimiento = value
                Me.SendPropertyChanged("Movimiento")
                Me.OnMovimientoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="DateTime NOT NULL")>
    Public Property Fecha() As Date
        Get
            Return Me._Fecha
        End Get
        Set
            If ((Me._Fecha = value) _
                        = False) Then
                Me.OnFechaChanging(value)
                Me.SendPropertyChanging
                Me._Fecha = value
                Me.SendPropertyChanged("Fecha")
                Me.OnFechaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Hora", DbType:="VarChar(5) NOT NULL", CanBeNull:=False)>
    Public Property Hora() As String
        Get
            Return Me._Hora
        End Get
        Set
            If (String.Equals(Me._Hora, value) = False) Then
                Me.OnHoraChanging(value)
                Me.SendPropertyChanging
                Me._Hora = value
                Me.SendPropertyChanged("Hora")
                Me.OnHoraChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoMov", DbType:="VarChar(1) NOT NULL", CanBeNull:=False)>
    Public Property TipoMov() As String
        Get
            Return Me._TipoMov
        End Get
        Set
            If (String.Equals(Me._TipoMov, value) = False) Then
                Me.OnTipoMovChanging(value)
                Me.SendPropertyChanging
                Me._TipoMov = value
                Me.SendPropertyChanged("TipoMov")
                Me.OnTipoMovChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Local() As Decimal
        Get
            Return Me._Local
        End Get
        Set
            If ((Me._Local = value) _
                        = False) Then
                Me.OnLocalChanging(value)
                Me.SendPropertyChanging
                Me._Local = value
                Me.SendPropertyChanged("Local")
                Me.OnLocalChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bodega", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Bodega() As Decimal
        Get
            Return Me._Bodega
        End Get
        Set
            If ((Me._Bodega = value) _
                        = False) Then
                Me.OnBodegaChanging(value)
                Me.SendPropertyChanging
                Me._Bodega = value
                Me.SendPropertyChanged("Bodega")
                Me.OnBodegaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Destino", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Destino() As Decimal
        Get
            Return Me._Destino
        End Get
        Set
            If ((Me._Destino = value) _
                        = False) Then
                Me.OnDestinoChanging(value)
                Me.SendPropertyChanging
                Me._Destino = value
                Me.SendPropertyChanged("Destino")
                Me.OnDestinoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="VarChar(3) NOT NULL", CanBeNull:=False)>
    Public Property Usuario() As String
        Get
            Return Me._Usuario
        End Get
        Set
            If (String.Equals(Me._Usuario, value) = False) Then
                Me.OnUsuarioChanging(value)
                Me.SendPropertyChanging
                Me._Usuario = value
                Me.SendPropertyChanged("Usuario")
                Me.OnUsuarioChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Responsable", DbType:="VarChar(3) NOT NULL", CanBeNull:=False)>
    Public Property Responsable() As String
        Get
            Return Me._Responsable
        End Get
        Set
            If (String.Equals(Me._Responsable, value) = False) Then
                Me.OnResponsableChanging(value)
                Me.SendPropertyChanging
                Me._Responsable = value
                Me.SendPropertyChanged("Responsable")
                Me.OnResponsableChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Estado", DbType:="VarChar(1) NOT NULL", CanBeNull:=False)>
    Public Property Estado() As String
        Get
            Return Me._Estado
        End Get
        Set
            If (String.Equals(Me._Estado, value) = False) Then
                Me.OnEstadoChanging(value)
                Me.SendPropertyChanging
                Me._Estado = value
                Me.SendPropertyChanged("Estado")
                Me.OnEstadoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDoc", DbType:="VarChar(2) NOT NULL", CanBeNull:=False)>
    Public Property TipoDoc() As String
        Get
            Return Me._TipoDoc
        End Get
        Set
            If (String.Equals(Me._TipoDoc, value) = False) Then
                Me.OnTipoDocChanging(value)
                Me.SendPropertyChanging
                Me._TipoDoc = value
                Me.SendPropertyChanged("TipoDoc")
                Me.OnTipoDocChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumDoc", DbType:="Decimal(18,0) NOT NULL")>
    Public Property NumDoc() As Decimal
        Get
            Return Me._NumDoc
        End Get
        Set
            If ((Me._NumDoc = value) _
                        = False) Then
                Me.OnNumDocChanging(value)
                Me.SendPropertyChanging
                Me._NumDoc = value
                Me.SendPropertyChanged("NumDoc")
                Me.OnNumDocChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ObsTra", DbType:="VarChar(200) NOT NULL", CanBeNull:=False)>
    Public Property ObsTra() As String
        Get
            Return Me._ObsTra
        End Get
        Set
            If (String.Equals(Me._ObsTra, value) = False) Then
                Me.OnObsTraChanging(value)
                Me.SendPropertyChanging
                Me._ObsTra = value
                Me.SendPropertyChanged("ObsTra")
                Me.OnObsTraChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Total", DbType:="Float NOT NULL")>
    Public Property Total() As Double
        Get
            Return Me._Total
        End Get
        Set
            If ((Me._Total = value) _
                        = False) Then
                Me.OnTotalChanging(value)
                Me.SendPropertyChanging
                Me._Total = value
                Me.SendPropertyChanged("Total")
                Me.OnTotalChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cargado", DbType:="Bit NOT NULL")>
    Public Property Cargado() As Boolean
        Get
            Return Me._Cargado
        End Get
        Set
            If ((Me._Cargado = value) _
                        = False) Then
                Me.OnCargadoChanging(value)
                Me.SendPropertyChanging
                Me._Cargado = value
                Me.SendPropertyChanged("Cargado")
                Me.OnCargadoChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Pagos")>
Partial Public Class T_Pagos
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Id As Decimal

    Private _Fecha As Date

    Private _Rut As String

    Private _Ticket As Decimal

    Private _TipoDoc As Char

    Private _NumDoc As Decimal

    Private _Monto As Decimal

    Private _FPago As Char

    Private _Caja As String

    Private _Usuario As String

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnRutChanging(value As String)
    End Sub
    Partial Private Sub OnRutChanged()
    End Sub
    Partial Private Sub OnTicketChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTicketChanged()
    End Sub
    Partial Private Sub OnTipoDocChanging(value As Char)
    End Sub
    Partial Private Sub OnTipoDocChanged()
    End Sub
    Partial Private Sub OnNumDocChanging(value As Decimal)
    End Sub
    Partial Private Sub OnNumDocChanged()
    End Sub
    Partial Private Sub OnMontoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnMontoChanged()
    End Sub
    Partial Private Sub OnFPagoChanging(value As Char)
    End Sub
    Partial Private Sub OnFPagoChanged()
    End Sub
    Partial Private Sub OnCajaChanging(value As String)
    End Sub
    Partial Private Sub OnCajaChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property Id() As Decimal
        Get
            Return Me._Id
        End Get
        Set
            If ((Me._Id = value) _
                        = False) Then
                Me.OnIdChanging(value)
                Me.SendPropertyChanging
                Me._Id = value
                Me.SendPropertyChanged("Id")
                Me.OnIdChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="DateTime NOT NULL")>
    Public Property Fecha() As Date
        Get
            Return Me._Fecha
        End Get
        Set
            If ((Me._Fecha = value) _
                        = False) Then
                Me.OnFechaChanging(value)
                Me.SendPropertyChanging
                Me._Fecha = value
                Me.SendPropertyChanged("Fecha")
                Me.OnFechaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rut", DbType:="Char(12) NOT NULL", CanBeNull:=False)>
    Public Property Rut() As String
        Get
            Return Me._Rut
        End Get
        Set
            If (String.Equals(Me._Rut, value) = False) Then
                Me.OnRutChanging(value)
                Me.SendPropertyChanging
                Me._Rut = value
                Me.SendPropertyChanged("Rut")
                Me.OnRutChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ticket", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Ticket() As Decimal
        Get
            Return Me._Ticket
        End Get
        Set
            If ((Me._Ticket = value) _
                        = False) Then
                Me.OnTicketChanging(value)
                Me.SendPropertyChanging
                Me._Ticket = value
                Me.SendPropertyChanged("Ticket")
                Me.OnTicketChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDoc", DbType:="Char(1) NOT NULL")>
    Public Property TipoDoc() As Char
        Get
            Return Me._TipoDoc
        End Get
        Set
            If ((Me._TipoDoc = value) _
                        = False) Then
                Me.OnTipoDocChanging(value)
                Me.SendPropertyChanging
                Me._TipoDoc = value
                Me.SendPropertyChanged("TipoDoc")
                Me.OnTipoDocChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumDoc", DbType:="Decimal(18,0) NOT NULL")>
    Public Property NumDoc() As Decimal
        Get
            Return Me._NumDoc
        End Get
        Set
            If ((Me._NumDoc = value) _
                        = False) Then
                Me.OnNumDocChanging(value)
                Me.SendPropertyChanging
                Me._NumDoc = value
                Me.SendPropertyChanged("NumDoc")
                Me.OnNumDocChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Monto", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Monto() As Decimal
        Get
            Return Me._Monto
        End Get
        Set
            If ((Me._Monto = value) _
                        = False) Then
                Me.OnMontoChanging(value)
                Me.SendPropertyChanging
                Me._Monto = value
                Me.SendPropertyChanged("Monto")
                Me.OnMontoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FPago", DbType:="Char(1) NOT NULL")>
    Public Property FPago() As Char
        Get
            Return Me._FPago
        End Get
        Set
            If ((Me._FPago = value) _
                        = False) Then
                Me.OnFPagoChanging(value)
                Me.SendPropertyChanging
                Me._FPago = value
                Me.SendPropertyChanged("FPago")
                Me.OnFPagoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Caja", DbType:="Char(10) NOT NULL", CanBeNull:=False)>
    Public Property Caja() As String
        Get
            Return Me._Caja
        End Get
        Set
            If (String.Equals(Me._Caja, value) = False) Then
                Me.OnCajaChanging(value)
                Me.SendPropertyChanging
                Me._Caja = value
                Me.SendPropertyChanged("Caja")
                Me.OnCajaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="Char(3) NOT NULL", CanBeNull:=False)>
    Public Property Usuario() As String
        Get
            Return Me._Usuario
        End Get
        Set
            If (String.Equals(Me._Usuario, value) = False) Then
                Me.OnUsuarioChanging(value)
                Me.SendPropertyChanging
                Me._Usuario = value
                Me.SendPropertyChanged("Usuario")
                Me.OnUsuarioChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PermisosAcceso")>
Partial Public Class T_PermisosAcceso
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Acceso As Decimal

    Private _Modulo As Decimal

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAccesoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnAccesoChanged()
    End Sub
    Partial Private Sub OnModuloChanging(value As Decimal)
    End Sub
    Partial Private Sub OnModuloChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Acceso", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=True)>
    Public Property Acceso() As Decimal
        Get
            Return Me._Acceso
        End Get
        Set
            If ((Me._Acceso = value) _
                        = False) Then
                Me.OnAccesoChanging(value)
                Me.SendPropertyChanging
                Me._Acceso = value
                Me.SendPropertyChanged("Acceso")
                Me.OnAccesoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Modulo", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=True)>
    Public Property Modulo() As Decimal
        Get
            Return Me._Modulo
        End Get
        Set
            If ((Me._Modulo = value) _
                        = False) Then
                Me.OnModuloChanging(value)
                Me.SendPropertyChanging
                Me._Modulo = value
                Me.SendPropertyChanged("Modulo")
                Me.OnModuloChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PermisosUsuario")>
Partial Public Class T_PermisosUsuario
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Usuario As String

    Private _Modulo As Decimal

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnModuloChanging(value As Decimal)
    End Sub
    Partial Private Sub OnModuloChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="VarChar(3) NOT NULL", CanBeNull:=False, IsPrimaryKey:=True)>
    Public Property Usuario() As String
        Get
            Return Me._Usuario
        End Get
        Set
            If (String.Equals(Me._Usuario, value) = False) Then
                Me.OnUsuarioChanging(value)
                Me.SendPropertyChanging
                Me._Usuario = value
                Me.SendPropertyChanged("Usuario")
                Me.OnUsuarioChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Modulo", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=True)>
    Public Property Modulo() As Decimal
        Get
            Return Me._Modulo
        End Get
        Set
            If ((Me._Modulo = value) _
                        = False) Then
                Me.OnModuloChanging(value)
                Me.SendPropertyChanging
                Me._Modulo = value
                Me.SendPropertyChanged("Modulo")
                Me.OnModuloChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PlantillasObservaciones")>
Partial Public Class T_PlantillasObservaciones
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Id As Decimal

    Private _Plantilla As Decimal

    Private _Descripcion As String

    Private _Tipo As String

    Private _Contenido As String

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnPlantillaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPlantillaChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    Partial Private Sub OnContenidoChanging(value As String)
    End Sub
    Partial Private Sub OnContenidoChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property Id() As Decimal
        Get
            Return Me._Id
        End Get
        Set
            If ((Me._Id = value) _
                        = False) Then
                Me.OnIdChanging(value)
                Me.SendPropertyChanging
                Me._Id = value
                Me.SendPropertyChanged("Id")
                Me.OnIdChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Plantilla", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Plantilla() As Decimal
        Get
            Return Me._Plantilla
        End Get
        Set
            If ((Me._Plantilla = value) _
                        = False) Then
                Me.OnPlantillaChanging(value)
                Me.SendPropertyChanging
                Me._Plantilla = value
                Me.SendPropertyChanged("Plantilla")
                Me.OnPlantillaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Descripcion() As String
        Get
            Return Me._Descripcion
        End Get
        Set
            If (String.Equals(Me._Descripcion, value) = False) Then
                Me.OnDescripcionChanging(value)
                Me.SendPropertyChanging
                Me._Descripcion = value
                Me.SendPropertyChanged("Descripcion")
                Me.OnDescripcionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tipo", DbType:="VarChar(1) NOT NULL", CanBeNull:=False)>
    Public Property Tipo() As String
        Get
            Return Me._Tipo
        End Get
        Set
            If (String.Equals(Me._Tipo, value) = False) Then
                Me.OnTipoChanging(value)
                Me.SendPropertyChanging
                Me._Tipo = value
                Me.SendPropertyChanged("Tipo")
                Me.OnTipoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Contenido", DbType:="VarChar(2000) NOT NULL", CanBeNull:=False)>
    Public Property Contenido() As String
        Get
            Return Me._Contenido
        End Get
        Set
            If (String.Equals(Me._Contenido, value) = False) Then
                Me.OnContenidoChanging(value)
                Me.SendPropertyChanging
                Me._Contenido = value
                Me.SendPropertyChanged("Contenido")
                Me.OnContenidoChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Regiones")>
Partial Public Class T_Regiones
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Region As String

    Private _NombreRegion As String

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRegionChanging(value As String)
    End Sub
    Partial Private Sub OnRegionChanged()
    End Sub
    Partial Private Sub OnNombreRegionChanging(value As String)
    End Sub
    Partial Private Sub OnNombreRegionChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Region", DbType:="VarChar(2) NOT NULL", CanBeNull:=False, IsPrimaryKey:=True)>
    Public Property Region() As String
        Get
            Return Me._Region
        End Get
        Set
            If (String.Equals(Me._Region, value) = False) Then
                Me.OnRegionChanging(value)
                Me.SendPropertyChanging
                Me._Region = value
                Me.SendPropertyChanged("Region")
                Me.OnRegionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreRegion", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property NombreRegion() As String
        Get
            Return Me._NombreRegion
        End Get
        Set
            If (String.Equals(Me._NombreRegion, value) = False) Then
                Me.OnNombreRegionChanging(value)
                Me.SendPropertyChanging
                Me._NombreRegion = value
                Me.SendPropertyChanged("NombreRegion")
                Me.OnNombreRegionChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Salud")>
Partial Public Class T_Salud
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Salud As Decimal

    Private _NombreSalud As String

    Private _PorcentajeSalud As Double

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSaludChanging(value As Decimal)
    End Sub
    Partial Private Sub OnSaludChanged()
    End Sub
    Partial Private Sub OnNombreSaludChanging(value As String)
    End Sub
    Partial Private Sub OnNombreSaludChanged()
    End Sub
    Partial Private Sub OnPorcentajeSaludChanging(value As Double)
    End Sub
    Partial Private Sub OnPorcentajeSaludChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Salud", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=True)>
    Public Property Salud() As Decimal
        Get
            Return Me._Salud
        End Get
        Set
            If ((Me._Salud = value) _
                        = False) Then
                Me.OnSaludChanging(value)
                Me.SendPropertyChanging
                Me._Salud = value
                Me.SendPropertyChanged("Salud")
                Me.OnSaludChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreSalud", DbType:="NVarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property NombreSalud() As String
        Get
            Return Me._NombreSalud
        End Get
        Set
            If (String.Equals(Me._NombreSalud, value) = False) Then
                Me.OnNombreSaludChanging(value)
                Me.SendPropertyChanging
                Me._NombreSalud = value
                Me.SendPropertyChanged("NombreSalud")
                Me.OnNombreSaludChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PorcentajeSalud", DbType:="Float NOT NULL")>
    Public Property PorcentajeSalud() As Double
        Get
            Return Me._PorcentajeSalud
        End Get
        Set
            If ((Me._PorcentajeSalud = value) _
                        = False) Then
                Me.OnPorcentajeSaludChanging(value)
                Me.SendPropertyChanging
                Me._PorcentajeSalud = value
                Me.SendPropertyChanged("PorcentajeSalud")
                Me.OnPorcentajeSaludChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Servidores")>
Partial Public Class T_Servidores
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _ID As Decimal

    Private _Nombre As String

    Private _IP As String

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnIPChanging(value As String)
    End Sub
    Partial Private Sub OnIPChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=True)>
    Public Property ID() As Decimal
        Get
            Return Me._ID
        End Get
        Set
            If ((Me._ID = value) _
                        = False) Then
                Me.OnIDChanging(value)
                Me.SendPropertyChanging
                Me._ID = value
                Me.SendPropertyChanged("ID")
                Me.OnIDChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Nombre() As String
        Get
            Return Me._Nombre
        End Get
        Set
            If (String.Equals(Me._Nombre, value) = False) Then
                Me.OnNombreChanging(value)
                Me.SendPropertyChanging
                Me._Nombre = value
                Me.SendPropertyChanged("Nombre")
                Me.OnNombreChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IP", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property IP() As String
        Get
            Return Me._IP
        End Get
        Set
            If (String.Equals(Me._IP, value) = False) Then
                Me.OnIPChanging(value)
                Me.SendPropertyChanging
                Me._IP = value
                Me.SendPropertyChanged("IP")
                Me.OnIPChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Stocks")>
Partial Public Class T_Stocks
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Id As Decimal

    Private _Articulo As Decimal

    Private _Bodega As Decimal

    Private _Local As Decimal

    Private _StockMin As Decimal

    Private _StockMax As Decimal

    Private _Stock As Decimal

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnArticuloChanging(value As Decimal)
    End Sub
    Partial Private Sub OnArticuloChanged()
    End Sub
    Partial Private Sub OnBodegaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnBodegaChanged()
    End Sub
    Partial Private Sub OnLocalChanging(value As Decimal)
    End Sub
    Partial Private Sub OnLocalChanged()
    End Sub
    Partial Private Sub OnStockMinChanging(value As Decimal)
    End Sub
    Partial Private Sub OnStockMinChanged()
    End Sub
    Partial Private Sub OnStockMaxChanging(value As Decimal)
    End Sub
    Partial Private Sub OnStockMaxChanged()
    End Sub
    Partial Private Sub OnStockChanging(value As Decimal)
    End Sub
    Partial Private Sub OnStockChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property Id() As Decimal
        Get
            Return Me._Id
        End Get
        Set
            If ((Me._Id = value) _
                        = False) Then
                Me.OnIdChanging(value)
                Me.SendPropertyChanging
                Me._Id = value
                Me.SendPropertyChanged("Id")
                Me.OnIdChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Articulo", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Articulo() As Decimal
        Get
            Return Me._Articulo
        End Get
        Set
            If ((Me._Articulo = value) _
                        = False) Then
                Me.OnArticuloChanging(value)
                Me.SendPropertyChanging
                Me._Articulo = value
                Me.SendPropertyChanged("Articulo")
                Me.OnArticuloChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bodega", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Bodega() As Decimal
        Get
            Return Me._Bodega
        End Get
        Set
            If ((Me._Bodega = value) _
                        = False) Then
                Me.OnBodegaChanging(value)
                Me.SendPropertyChanging
                Me._Bodega = value
                Me.SendPropertyChanged("Bodega")
                Me.OnBodegaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Local() As Decimal
        Get
            Return Me._Local
        End Get
        Set
            If ((Me._Local = value) _
                        = False) Then
                Me.OnLocalChanging(value)
                Me.SendPropertyChanging
                Me._Local = value
                Me.SendPropertyChanged("Local")
                Me.OnLocalChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StockMin", DbType:="Float NOT NULL")>
    Public Property StockMin() As Decimal
        Get
            Return Me._StockMin
        End Get
        Set
            If ((Me._StockMin = value) _
                        = False) Then
                Me.OnStockMinChanging(value)
                Me.SendPropertyChanging
                Me._StockMin = value
                Me.SendPropertyChanged("StockMin")
                Me.OnStockMinChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StockMax", DbType:="Float NOT NULL")>
    Public Property StockMax() As Decimal
        Get
            Return Me._StockMax
        End Get
        Set
            If ((Me._StockMax = value) _
                        = False) Then
                Me.OnStockMaxChanging(value)
                Me.SendPropertyChanging
                Me._StockMax = value
                Me.SendPropertyChanged("StockMax")
                Me.OnStockMaxChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Stock", DbType:="Float NOT NULL")>
    Public Property Stock() As Decimal
        Get
            Return Me._Stock
        End Get
        Set
            If ((Me._Stock = value) _
                        = False) Then
                Me.OnStockChanging(value)
                Me.SendPropertyChanging
                Me._Stock = value
                Me.SendPropertyChanged("Stock")
                Me.OnStockChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Stocks_Cierre")>
Partial Public Class T_Stocks_Cierre
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Id As Decimal

    Private _FechaCierre As Date

    Private _Articulo As Decimal

    Private _Bodega As Decimal

    Private _Local As Decimal

    Private _Stock As Double

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnFechaCierreChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaCierreChanged()
    End Sub
    Partial Private Sub OnArticuloChanging(value As Decimal)
    End Sub
    Partial Private Sub OnArticuloChanged()
    End Sub
    Partial Private Sub OnBodegaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnBodegaChanged()
    End Sub
    Partial Private Sub OnLocalChanging(value As Decimal)
    End Sub
    Partial Private Sub OnLocalChanged()
    End Sub
    Partial Private Sub OnStockChanging(value As Double)
    End Sub
    Partial Private Sub OnStockChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property Id() As Decimal
        Get
            Return Me._Id
        End Get
        Set
            If ((Me._Id = value) _
                        = False) Then
                Me.OnIdChanging(value)
                Me.SendPropertyChanging
                Me._Id = value
                Me.SendPropertyChanged("Id")
                Me.OnIdChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaCierre", DbType:="Date NOT NULL")>
    Public Property FechaCierre() As Date
        Get
            Return Me._FechaCierre
        End Get
        Set
            If ((Me._FechaCierre = value) _
                        = False) Then
                Me.OnFechaCierreChanging(value)
                Me.SendPropertyChanging
                Me._FechaCierre = value
                Me.SendPropertyChanged("FechaCierre")
                Me.OnFechaCierreChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Articulo", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Articulo() As Decimal
        Get
            Return Me._Articulo
        End Get
        Set
            If ((Me._Articulo = value) _
                        = False) Then
                Me.OnArticuloChanging(value)
                Me.SendPropertyChanging
                Me._Articulo = value
                Me.SendPropertyChanged("Articulo")
                Me.OnArticuloChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bodega", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Bodega() As Decimal
        Get
            Return Me._Bodega
        End Get
        Set
            If ((Me._Bodega = value) _
                        = False) Then
                Me.OnBodegaChanging(value)
                Me.SendPropertyChanging
                Me._Bodega = value
                Me.SendPropertyChanged("Bodega")
                Me.OnBodegaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Local() As Decimal
        Get
            Return Me._Local
        End Get
        Set
            If ((Me._Local = value) _
                        = False) Then
                Me.OnLocalChanging(value)
                Me.SendPropertyChanging
                Me._Local = value
                Me.SendPropertyChanged("Local")
                Me.OnLocalChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Stock", DbType:="Float NOT NULL")>
    Public Property Stock() As Double
        Get
            Return Me._Stock
        End Get
        Set
            If ((Me._Stock = value) _
                        = False) Then
                Me.OnStockChanging(value)
                Me.SendPropertyChanging
                Me._Stock = value
                Me.SendPropertyChanged("Stock")
                Me.OnStockChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SubFamilias")>
Partial Public Class T_SubFamilias
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _SubFamilia As Decimal

    Private _DescSubFamilia As String

    Private _Familia As Decimal

    Private _VisibleWeb As Boolean

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSubFamiliaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnSubFamiliaChanged()
    End Sub
    Partial Private Sub OnDescSubFamiliaChanging(value As String)
    End Sub
    Partial Private Sub OnDescSubFamiliaChanged()
    End Sub
    Partial Private Sub OnFamiliaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnFamiliaChanged()
    End Sub
    Partial Private Sub OnVisibleWebChanging(value As Boolean)
    End Sub
    Partial Private Sub OnVisibleWebChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubFamilia", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=True)>
    Public Property SubFamilia() As Decimal
        Get
            Return Me._SubFamilia
        End Get
        Set
            If ((Me._SubFamilia = value) _
                        = False) Then
                Me.OnSubFamiliaChanging(value)
                Me.SendPropertyChanging
                Me._SubFamilia = value
                Me.SendPropertyChanged("SubFamilia")
                Me.OnSubFamiliaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescSubFamilia", DbType:="VarChar(100) NOT NULL", CanBeNull:=False)>
    Public Property DescSubFamilia() As String
        Get
            Return Me._DescSubFamilia
        End Get
        Set
            If (String.Equals(Me._DescSubFamilia, value) = False) Then
                Me.OnDescSubFamiliaChanging(value)
                Me.SendPropertyChanging
                Me._DescSubFamilia = value
                Me.SendPropertyChanged("DescSubFamilia")
                Me.OnDescSubFamiliaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Familia", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Familia() As Decimal
        Get
            Return Me._Familia
        End Get
        Set
            If ((Me._Familia = value) _
                        = False) Then
                Me.OnFamiliaChanging(value)
                Me.SendPropertyChanging
                Me._Familia = value
                Me.SendPropertyChanged("Familia")
                Me.OnFamiliaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VisibleWeb", DbType:="Bit NOT NULL")>
    Public Property VisibleWeb() As Boolean
        Get
            Return Me._VisibleWeb
        End Get
        Set
            If ((Me._VisibleWeb = value) _
                        = False) Then
                Me.OnVisibleWebChanging(value)
                Me.SendPropertyChanging
                Me._VisibleWeb = value
                Me.SendPropertyChanged("VisibleWeb")
                Me.OnVisibleWebChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Sueldos")>
Partial Public Class T_Sueldos
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Id As Decimal

    Private _Año As Decimal

    Private _Mes As Decimal

    Private _Usuario As String

    Private _Estado As String

    Private _Base As Decimal

    Private _Bruto As Decimal

    Private _Dias As Decimal

    Private _Gratificacion As Decimal

    Private _TGratificacion As Decimal

    Private _TImponible As Decimal

    Private _Colacion As Decimal

    Private _TColacion As Decimal

    Private _Movilizacion As Decimal

    Private _TMovilizacion As Decimal

    Private _Cargas As Decimal

    Private _TCargas As Decimal

    Private _TVariables As Decimal

    Private _TBonos As Decimal

    Private _TBonos2 As Decimal

    Private _TAguinaldos As Decimal

    Private _THaberes As Decimal

    Private _AFP As Decimal

    Private _NAFP As String

    Private _PorcentajeAFP As Double

    Private _TAFP As Decimal

    Private _Salud As Decimal

    Private _NSalud As String

    Private _PorcentajeSalud As Double

    Private _TSalud As Decimal

    Private _SIS As Decimal

    Private _Anticipos As Decimal

    Private _Descuentos As Decimal

    Private _Creditos As Decimal

    Private _Seguros As Decimal

    Private _AFC As Decimal

    Private _ImpuestoUnico As Decimal

    Private _UF As Double

    Private _Ahorros As Decimal

    Private _TDescuentos As Decimal

    Private _TLiquido As Decimal

    Private _Cancelado As Boolean

    Private _ModoPago As String

    Private _FechaPago As Date

    Private _UsuarioPago As String

    Private _Empresa As Decimal

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnAñoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnAñoChanged()
    End Sub
    Partial Private Sub OnMesChanging(value As Decimal)
    End Sub
    Partial Private Sub OnMesChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnBaseChanging(value As Decimal)
    End Sub
    Partial Private Sub OnBaseChanged()
    End Sub
    Partial Private Sub OnBrutoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnBrutoChanged()
    End Sub
    Partial Private Sub OnDiasChanging(value As Decimal)
    End Sub
    Partial Private Sub OnDiasChanged()
    End Sub
    Partial Private Sub OnGratificacionChanging(value As Decimal)
    End Sub
    Partial Private Sub OnGratificacionChanged()
    End Sub
    Partial Private Sub OnTGratificacionChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTGratificacionChanged()
    End Sub
    Partial Private Sub OnTImponibleChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTImponibleChanged()
    End Sub
    Partial Private Sub OnColacionChanging(value As Decimal)
    End Sub
    Partial Private Sub OnColacionChanged()
    End Sub
    Partial Private Sub OnTColacionChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTColacionChanged()
    End Sub
    Partial Private Sub OnMovilizacionChanging(value As Decimal)
    End Sub
    Partial Private Sub OnMovilizacionChanged()
    End Sub
    Partial Private Sub OnTMovilizacionChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTMovilizacionChanged()
    End Sub
    Partial Private Sub OnCargasChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCargasChanged()
    End Sub
    Partial Private Sub OnTCargasChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTCargasChanged()
    End Sub
    Partial Private Sub OnTVariablesChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTVariablesChanged()
    End Sub
    Partial Private Sub OnTBonosChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTBonosChanged()
    End Sub
    Partial Private Sub OnTBonos2Changing(value As Decimal)
    End Sub
    Partial Private Sub OnTBonos2Changed()
    End Sub
    Partial Private Sub OnTAguinaldosChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTAguinaldosChanged()
    End Sub
    Partial Private Sub OnTHaberesChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTHaberesChanged()
    End Sub
    Partial Private Sub OnAFPChanging(value As Decimal)
    End Sub
    Partial Private Sub OnAFPChanged()
    End Sub
    Partial Private Sub OnNAFPChanging(value As String)
    End Sub
    Partial Private Sub OnNAFPChanged()
    End Sub
    Partial Private Sub OnPorcentajeAFPChanging(value As Double)
    End Sub
    Partial Private Sub OnPorcentajeAFPChanged()
    End Sub
    Partial Private Sub OnTAFPChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTAFPChanged()
    End Sub
    Partial Private Sub OnSaludChanging(value As Decimal)
    End Sub
    Partial Private Sub OnSaludChanged()
    End Sub
    Partial Private Sub OnNSaludChanging(value As String)
    End Sub
    Partial Private Sub OnNSaludChanged()
    End Sub
    Partial Private Sub OnPorcentajeSaludChanging(value As Double)
    End Sub
    Partial Private Sub OnPorcentajeSaludChanged()
    End Sub
    Partial Private Sub OnTSaludChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTSaludChanged()
    End Sub
    Partial Private Sub OnSISChanging(value As Decimal)
    End Sub
    Partial Private Sub OnSISChanged()
    End Sub
    Partial Private Sub OnAnticiposChanging(value As Decimal)
    End Sub
    Partial Private Sub OnAnticiposChanged()
    End Sub
    Partial Private Sub OnDescuentosChanging(value As Decimal)
    End Sub
    Partial Private Sub OnDescuentosChanged()
    End Sub
    Partial Private Sub OnCreditosChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCreditosChanged()
    End Sub
    Partial Private Sub OnSegurosChanging(value As Decimal)
    End Sub
    Partial Private Sub OnSegurosChanged()
    End Sub
    Partial Private Sub OnAFCChanging(value As Decimal)
    End Sub
    Partial Private Sub OnAFCChanged()
    End Sub
    Partial Private Sub OnImpuestoUnicoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnImpuestoUnicoChanged()
    End Sub
    Partial Private Sub OnUFChanging(value As Double)
    End Sub
    Partial Private Sub OnUFChanged()
    End Sub
    Partial Private Sub OnAhorrosChanging(value As Decimal)
    End Sub
    Partial Private Sub OnAhorrosChanged()
    End Sub
    Partial Private Sub OnTDescuentosChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTDescuentosChanged()
    End Sub
    Partial Private Sub OnTLiquidoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTLiquidoChanged()
    End Sub
    Partial Private Sub OnCanceladoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCanceladoChanged()
    End Sub
    Partial Private Sub OnModoPagoChanging(value As String)
    End Sub
    Partial Private Sub OnModoPagoChanged()
    End Sub
    Partial Private Sub OnFechaPagoChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaPagoChanged()
    End Sub
    Partial Private Sub OnUsuarioPagoChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioPagoChanged()
    End Sub
    Partial Private Sub OnEmpresaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnEmpresaChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property Id() As Decimal
        Get
            Return Me._Id
        End Get
        Set
            If ((Me._Id = value) _
                        = False) Then
                Me.OnIdChanging(value)
                Me.SendPropertyChanging
                Me._Id = value
                Me.SendPropertyChanged("Id")
                Me.OnIdChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Año", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Año() As Decimal
        Get
            Return Me._Año
        End Get
        Set
            If ((Me._Año = value) _
                        = False) Then
                Me.OnAñoChanging(value)
                Me.SendPropertyChanging
                Me._Año = value
                Me.SendPropertyChanged("Año")
                Me.OnAñoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mes", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Mes() As Decimal
        Get
            Return Me._Mes
        End Get
        Set
            If ((Me._Mes = value) _
                        = False) Then
                Me.OnMesChanging(value)
                Me.SendPropertyChanging
                Me._Mes = value
                Me.SendPropertyChanged("Mes")
                Me.OnMesChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="VarChar(3) NOT NULL", CanBeNull:=False)>
    Public Property Usuario() As String
        Get
            Return Me._Usuario
        End Get
        Set
            If (String.Equals(Me._Usuario, value) = False) Then
                Me.OnUsuarioChanging(value)
                Me.SendPropertyChanging
                Me._Usuario = value
                Me.SendPropertyChanged("Usuario")
                Me.OnUsuarioChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Estado", DbType:="VarChar(1) NOT NULL", CanBeNull:=False)>
    Public Property Estado() As String
        Get
            Return Me._Estado
        End Get
        Set
            If (String.Equals(Me._Estado, value) = False) Then
                Me.OnEstadoChanging(value)
                Me.SendPropertyChanging
                Me._Estado = value
                Me.SendPropertyChanged("Estado")
                Me.OnEstadoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Base", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Base() As Decimal
        Get
            Return Me._Base
        End Get
        Set
            If ((Me._Base = value) _
                        = False) Then
                Me.OnBaseChanging(value)
                Me.SendPropertyChanging
                Me._Base = value
                Me.SendPropertyChanged("Base")
                Me.OnBaseChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bruto", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Bruto() As Decimal
        Get
            Return Me._Bruto
        End Get
        Set
            If ((Me._Bruto = value) _
                        = False) Then
                Me.OnBrutoChanging(value)
                Me.SendPropertyChanging
                Me._Bruto = value
                Me.SendPropertyChanged("Bruto")
                Me.OnBrutoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Dias", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Dias() As Decimal
        Get
            Return Me._Dias
        End Get
        Set
            If ((Me._Dias = value) _
                        = False) Then
                Me.OnDiasChanging(value)
                Me.SendPropertyChanging
                Me._Dias = value
                Me.SendPropertyChanged("Dias")
                Me.OnDiasChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Gratificacion", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Gratificacion() As Decimal
        Get
            Return Me._Gratificacion
        End Get
        Set
            If ((Me._Gratificacion = value) _
                        = False) Then
                Me.OnGratificacionChanging(value)
                Me.SendPropertyChanging
                Me._Gratificacion = value
                Me.SendPropertyChanged("Gratificacion")
                Me.OnGratificacionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TGratificacion", DbType:="Decimal(18,0) NOT NULL")>
    Public Property TGratificacion() As Decimal
        Get
            Return Me._TGratificacion
        End Get
        Set
            If ((Me._TGratificacion = value) _
                        = False) Then
                Me.OnTGratificacionChanging(value)
                Me.SendPropertyChanging
                Me._TGratificacion = value
                Me.SendPropertyChanged("TGratificacion")
                Me.OnTGratificacionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TImponible", DbType:="Decimal(18,0) NOT NULL")>
    Public Property TImponible() As Decimal
        Get
            Return Me._TImponible
        End Get
        Set
            If ((Me._TImponible = value) _
                        = False) Then
                Me.OnTImponibleChanging(value)
                Me.SendPropertyChanging
                Me._TImponible = value
                Me.SendPropertyChanged("TImponible")
                Me.OnTImponibleChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Colacion", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Colacion() As Decimal
        Get
            Return Me._Colacion
        End Get
        Set
            If ((Me._Colacion = value) _
                        = False) Then
                Me.OnColacionChanging(value)
                Me.SendPropertyChanging
                Me._Colacion = value
                Me.SendPropertyChanged("Colacion")
                Me.OnColacionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TColacion", DbType:="Decimal(18,0) NOT NULL")>
    Public Property TColacion() As Decimal
        Get
            Return Me._TColacion
        End Get
        Set
            If ((Me._TColacion = value) _
                        = False) Then
                Me.OnTColacionChanging(value)
                Me.SendPropertyChanging
                Me._TColacion = value
                Me.SendPropertyChanged("TColacion")
                Me.OnTColacionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Movilizacion", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Movilizacion() As Decimal
        Get
            Return Me._Movilizacion
        End Get
        Set
            If ((Me._Movilizacion = value) _
                        = False) Then
                Me.OnMovilizacionChanging(value)
                Me.SendPropertyChanging
                Me._Movilizacion = value
                Me.SendPropertyChanged("Movilizacion")
                Me.OnMovilizacionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TMovilizacion", DbType:="Decimal(18,0) NOT NULL")>
    Public Property TMovilizacion() As Decimal
        Get
            Return Me._TMovilizacion
        End Get
        Set
            If ((Me._TMovilizacion = value) _
                        = False) Then
                Me.OnTMovilizacionChanging(value)
                Me.SendPropertyChanging
                Me._TMovilizacion = value
                Me.SendPropertyChanged("TMovilizacion")
                Me.OnTMovilizacionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cargas", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Cargas() As Decimal
        Get
            Return Me._Cargas
        End Get
        Set
            If ((Me._Cargas = value) _
                        = False) Then
                Me.OnCargasChanging(value)
                Me.SendPropertyChanging
                Me._Cargas = value
                Me.SendPropertyChanged("Cargas")
                Me.OnCargasChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TCargas", DbType:="Decimal(18,0) NOT NULL")>
    Public Property TCargas() As Decimal
        Get
            Return Me._TCargas
        End Get
        Set
            If ((Me._TCargas = value) _
                        = False) Then
                Me.OnTCargasChanging(value)
                Me.SendPropertyChanging
                Me._TCargas = value
                Me.SendPropertyChanged("TCargas")
                Me.OnTCargasChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TVariables", DbType:="Decimal(18,0) NOT NULL")>
    Public Property TVariables() As Decimal
        Get
            Return Me._TVariables
        End Get
        Set
            If ((Me._TVariables = value) _
                        = False) Then
                Me.OnTVariablesChanging(value)
                Me.SendPropertyChanging
                Me._TVariables = value
                Me.SendPropertyChanged("TVariables")
                Me.OnTVariablesChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TBonos", DbType:="Decimal(18,0) NOT NULL")>
    Public Property TBonos() As Decimal
        Get
            Return Me._TBonos
        End Get
        Set
            If ((Me._TBonos = value) _
                        = False) Then
                Me.OnTBonosChanging(value)
                Me.SendPropertyChanging
                Me._TBonos = value
                Me.SendPropertyChanged("TBonos")
                Me.OnTBonosChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TBonos2", DbType:="Decimal(18,0) NOT NULL")>
    Public Property TBonos2() As Decimal
        Get
            Return Me._TBonos2
        End Get
        Set
            If ((Me._TBonos2 = value) _
                        = False) Then
                Me.OnTBonos2Changing(value)
                Me.SendPropertyChanging
                Me._TBonos2 = value
                Me.SendPropertyChanged("TBonos2")
                Me.OnTBonos2Changed
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAguinaldos", DbType:="Decimal(18,0) NOT NULL")>
    Public Property TAguinaldos() As Decimal
        Get
            Return Me._TAguinaldos
        End Get
        Set
            If ((Me._TAguinaldos = value) _
                        = False) Then
                Me.OnTAguinaldosChanging(value)
                Me.SendPropertyChanging
                Me._TAguinaldos = value
                Me.SendPropertyChanged("TAguinaldos")
                Me.OnTAguinaldosChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_THaberes", DbType:="Decimal(18,0) NOT NULL")>
    Public Property THaberes() As Decimal
        Get
            Return Me._THaberes
        End Get
        Set
            If ((Me._THaberes = value) _
                        = False) Then
                Me.OnTHaberesChanging(value)
                Me.SendPropertyChanging
                Me._THaberes = value
                Me.SendPropertyChanged("THaberes")
                Me.OnTHaberesChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AFP", DbType:="Decimal(18,0) NOT NULL")>
    Public Property AFP() As Decimal
        Get
            Return Me._AFP
        End Get
        Set
            If ((Me._AFP = value) _
                        = False) Then
                Me.OnAFPChanging(value)
                Me.SendPropertyChanging
                Me._AFP = value
                Me.SendPropertyChanged("AFP")
                Me.OnAFPChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAFP", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property NAFP() As String
        Get
            Return Me._NAFP
        End Get
        Set
            If (String.Equals(Me._NAFP, value) = False) Then
                Me.OnNAFPChanging(value)
                Me.SendPropertyChanging
                Me._NAFP = value
                Me.SendPropertyChanged("NAFP")
                Me.OnNAFPChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PorcentajeAFP", DbType:="Float NOT NULL")>
    Public Property PorcentajeAFP() As Double
        Get
            Return Me._PorcentajeAFP
        End Get
        Set
            If ((Me._PorcentajeAFP = value) _
                        = False) Then
                Me.OnPorcentajeAFPChanging(value)
                Me.SendPropertyChanging
                Me._PorcentajeAFP = value
                Me.SendPropertyChanged("PorcentajeAFP")
                Me.OnPorcentajeAFPChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAFP", DbType:="Decimal(18,0) NOT NULL")>
    Public Property TAFP() As Decimal
        Get
            Return Me._TAFP
        End Get
        Set
            If ((Me._TAFP = value) _
                        = False) Then
                Me.OnTAFPChanging(value)
                Me.SendPropertyChanging
                Me._TAFP = value
                Me.SendPropertyChanged("TAFP")
                Me.OnTAFPChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Salud", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Salud() As Decimal
        Get
            Return Me._Salud
        End Get
        Set
            If ((Me._Salud = value) _
                        = False) Then
                Me.OnSaludChanging(value)
                Me.SendPropertyChanging
                Me._Salud = value
                Me.SendPropertyChanged("Salud")
                Me.OnSaludChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NSalud", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property NSalud() As String
        Get
            Return Me._NSalud
        End Get
        Set
            If (String.Equals(Me._NSalud, value) = False) Then
                Me.OnNSaludChanging(value)
                Me.SendPropertyChanging
                Me._NSalud = value
                Me.SendPropertyChanged("NSalud")
                Me.OnNSaludChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PorcentajeSalud", DbType:="Float NOT NULL")>
    Public Property PorcentajeSalud() As Double
        Get
            Return Me._PorcentajeSalud
        End Get
        Set
            If ((Me._PorcentajeSalud = value) _
                        = False) Then
                Me.OnPorcentajeSaludChanging(value)
                Me.SendPropertyChanging
                Me._PorcentajeSalud = value
                Me.SendPropertyChanged("PorcentajeSalud")
                Me.OnPorcentajeSaludChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TSalud", DbType:="Decimal(18,0) NOT NULL")>
    Public Property TSalud() As Decimal
        Get
            Return Me._TSalud
        End Get
        Set
            If ((Me._TSalud = value) _
                        = False) Then
                Me.OnTSaludChanging(value)
                Me.SendPropertyChanging
                Me._TSalud = value
                Me.SendPropertyChanged("TSalud")
                Me.OnTSaludChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SIS", DbType:="Decimal(18,0) NOT NULL")>
    Public Property SIS() As Decimal
        Get
            Return Me._SIS
        End Get
        Set
            If ((Me._SIS = value) _
                        = False) Then
                Me.OnSISChanging(value)
                Me.SendPropertyChanging
                Me._SIS = value
                Me.SendPropertyChanged("SIS")
                Me.OnSISChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Anticipos", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Anticipos() As Decimal
        Get
            Return Me._Anticipos
        End Get
        Set
            If ((Me._Anticipos = value) _
                        = False) Then
                Me.OnAnticiposChanging(value)
                Me.SendPropertyChanging
                Me._Anticipos = value
                Me.SendPropertyChanged("Anticipos")
                Me.OnAnticiposChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descuentos", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Descuentos() As Decimal
        Get
            Return Me._Descuentos
        End Get
        Set
            If ((Me._Descuentos = value) _
                        = False) Then
                Me.OnDescuentosChanging(value)
                Me.SendPropertyChanging
                Me._Descuentos = value
                Me.SendPropertyChanged("Descuentos")
                Me.OnDescuentosChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Creditos", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Creditos() As Decimal
        Get
            Return Me._Creditos
        End Get
        Set
            If ((Me._Creditos = value) _
                        = False) Then
                Me.OnCreditosChanging(value)
                Me.SendPropertyChanging
                Me._Creditos = value
                Me.SendPropertyChanged("Creditos")
                Me.OnCreditosChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Seguros", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Seguros() As Decimal
        Get
            Return Me._Seguros
        End Get
        Set
            If ((Me._Seguros = value) _
                        = False) Then
                Me.OnSegurosChanging(value)
                Me.SendPropertyChanging
                Me._Seguros = value
                Me.SendPropertyChanged("Seguros")
                Me.OnSegurosChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AFC", DbType:="Decimal(18,0) NOT NULL")>
    Public Property AFC() As Decimal
        Get
            Return Me._AFC
        End Get
        Set
            If ((Me._AFC = value) _
                        = False) Then
                Me.OnAFCChanging(value)
                Me.SendPropertyChanging
                Me._AFC = value
                Me.SendPropertyChanged("AFC")
                Me.OnAFCChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImpuestoUnico", DbType:="Decimal(18,0) NOT NULL")>
    Public Property ImpuestoUnico() As Decimal
        Get
            Return Me._ImpuestoUnico
        End Get
        Set
            If ((Me._ImpuestoUnico = value) _
                        = False) Then
                Me.OnImpuestoUnicoChanging(value)
                Me.SendPropertyChanging
                Me._ImpuestoUnico = value
                Me.SendPropertyChanged("ImpuestoUnico")
                Me.OnImpuestoUnicoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UF", DbType:="Float NOT NULL")>
    Public Property UF() As Double
        Get
            Return Me._UF
        End Get
        Set
            If ((Me._UF = value) _
                        = False) Then
                Me.OnUFChanging(value)
                Me.SendPropertyChanging
                Me._UF = value
                Me.SendPropertyChanged("UF")
                Me.OnUFChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ahorros", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Ahorros() As Decimal
        Get
            Return Me._Ahorros
        End Get
        Set
            If ((Me._Ahorros = value) _
                        = False) Then
                Me.OnAhorrosChanging(value)
                Me.SendPropertyChanging
                Me._Ahorros = value
                Me.SendPropertyChanged("Ahorros")
                Me.OnAhorrosChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TDescuentos", DbType:="Decimal(18,0) NOT NULL")>
    Public Property TDescuentos() As Decimal
        Get
            Return Me._TDescuentos
        End Get
        Set
            If ((Me._TDescuentos = value) _
                        = False) Then
                Me.OnTDescuentosChanging(value)
                Me.SendPropertyChanging
                Me._TDescuentos = value
                Me.SendPropertyChanged("TDescuentos")
                Me.OnTDescuentosChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TLiquido", DbType:="Decimal(18,0) NOT NULL")>
    Public Property TLiquido() As Decimal
        Get
            Return Me._TLiquido
        End Get
        Set
            If ((Me._TLiquido = value) _
                        = False) Then
                Me.OnTLiquidoChanging(value)
                Me.SendPropertyChanging
                Me._TLiquido = value
                Me.SendPropertyChanged("TLiquido")
                Me.OnTLiquidoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cancelado", DbType:="Bit NOT NULL")>
    Public Property Cancelado() As Boolean
        Get
            Return Me._Cancelado
        End Get
        Set
            If ((Me._Cancelado = value) _
                        = False) Then
                Me.OnCanceladoChanging(value)
                Me.SendPropertyChanging
                Me._Cancelado = value
                Me.SendPropertyChanged("Cancelado")
                Me.OnCanceladoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModoPago", DbType:="VarChar(1) NOT NULL", CanBeNull:=False)>
    Public Property ModoPago() As String
        Get
            Return Me._ModoPago
        End Get
        Set
            If (String.Equals(Me._ModoPago, value) = False) Then
                Me.OnModoPagoChanging(value)
                Me.SendPropertyChanging
                Me._ModoPago = value
                Me.SendPropertyChanged("ModoPago")
                Me.OnModoPagoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaPago", DbType:="DateTime NOT NULL")>
    Public Property FechaPago() As Date
        Get
            Return Me._FechaPago
        End Get
        Set
            If ((Me._FechaPago = value) _
                        = False) Then
                Me.OnFechaPagoChanging(value)
                Me.SendPropertyChanging
                Me._FechaPago = value
                Me.SendPropertyChanged("FechaPago")
                Me.OnFechaPagoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UsuarioPago", DbType:="VarChar(3) NOT NULL", CanBeNull:=False)>
    Public Property UsuarioPago() As String
        Get
            Return Me._UsuarioPago
        End Get
        Set
            If (String.Equals(Me._UsuarioPago, value) = False) Then
                Me.OnUsuarioPagoChanging(value)
                Me.SendPropertyChanging
                Me._UsuarioPago = value
                Me.SendPropertyChanged("UsuarioPago")
                Me.OnUsuarioPagoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Empresa", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Empresa() As Decimal
        Get
            Return Me._Empresa
        End Get
        Set
            If ((Me._Empresa = value) _
                        = False) Then
                Me.OnEmpresaChanging(value)
                Me.SendPropertyChanging
                Me._Empresa = value
                Me.SendPropertyChanged("Empresa")
                Me.OnEmpresaChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Sueldos_Detalles")>
Partial Public Class T_Sueldos_Detalles
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Id As Decimal

    Private _Fecha As Date

    Private _Usuario As String

    Private _Estado As String

    Private _EventoRem As Decimal

    Private _Monto As Double

    Private _Glosa As String

    Private _UsuarioRem As String

    Private _Posicion As Decimal

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnEventoRemChanging(value As Decimal)
    End Sub
    Partial Private Sub OnEventoRemChanged()
    End Sub
    Partial Private Sub OnMontoChanging(value As Double)
    End Sub
    Partial Private Sub OnMontoChanged()
    End Sub
    Partial Private Sub OnGlosaChanging(value As String)
    End Sub
    Partial Private Sub OnGlosaChanged()
    End Sub
    Partial Private Sub OnUsuarioRemChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioRemChanged()
    End Sub
    Partial Private Sub OnPosicionChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPosicionChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property Id() As Decimal
        Get
            Return Me._Id
        End Get
        Set
            If ((Me._Id = value) _
                        = False) Then
                Me.OnIdChanging(value)
                Me.SendPropertyChanging
                Me._Id = value
                Me.SendPropertyChanged("Id")
                Me.OnIdChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="DateTime NOT NULL")>
    Public Property Fecha() As Date
        Get
            Return Me._Fecha
        End Get
        Set
            If ((Me._Fecha = value) _
                        = False) Then
                Me.OnFechaChanging(value)
                Me.SendPropertyChanging
                Me._Fecha = value
                Me.SendPropertyChanged("Fecha")
                Me.OnFechaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="Char(3) NOT NULL", CanBeNull:=False)>
    Public Property Usuario() As String
        Get
            Return Me._Usuario
        End Get
        Set
            If (String.Equals(Me._Usuario, value) = False) Then
                Me.OnUsuarioChanging(value)
                Me.SendPropertyChanging
                Me._Usuario = value
                Me.SendPropertyChanged("Usuario")
                Me.OnUsuarioChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Estado", DbType:="VarChar(1) NOT NULL", CanBeNull:=False)>
    Public Property Estado() As String
        Get
            Return Me._Estado
        End Get
        Set
            If (String.Equals(Me._Estado, value) = False) Then
                Me.OnEstadoChanging(value)
                Me.SendPropertyChanging
                Me._Estado = value
                Me.SendPropertyChanged("Estado")
                Me.OnEstadoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EventoRem", DbType:="Decimal(18,0) NOT NULL")>
    Public Property EventoRem() As Decimal
        Get
            Return Me._EventoRem
        End Get
        Set
            If ((Me._EventoRem = value) _
                        = False) Then
                Me.OnEventoRemChanging(value)
                Me.SendPropertyChanging
                Me._EventoRem = value
                Me.SendPropertyChanged("EventoRem")
                Me.OnEventoRemChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Monto", DbType:="Float NOT NULL")>
    Public Property Monto() As Double
        Get
            Return Me._Monto
        End Get
        Set
            If ((Me._Monto = value) _
                        = False) Then
                Me.OnMontoChanging(value)
                Me.SendPropertyChanging
                Me._Monto = value
                Me.SendPropertyChanged("Monto")
                Me.OnMontoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Glosa", DbType:="NVarChar(500) NOT NULL", CanBeNull:=False)>
    Public Property Glosa() As String
        Get
            Return Me._Glosa
        End Get
        Set
            If (String.Equals(Me._Glosa, value) = False) Then
                Me.OnGlosaChanging(value)
                Me.SendPropertyChanging
                Me._Glosa = value
                Me.SendPropertyChanged("Glosa")
                Me.OnGlosaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UsuarioRem", DbType:="Char(3) NOT NULL", CanBeNull:=False)>
    Public Property UsuarioRem() As String
        Get
            Return Me._UsuarioRem
        End Get
        Set
            If (String.Equals(Me._UsuarioRem, value) = False) Then
                Me.OnUsuarioRemChanging(value)
                Me.SendPropertyChanging
                Me._UsuarioRem = value
                Me.SendPropertyChanged("UsuarioRem")
                Me.OnUsuarioRemChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Posicion", DbType:="Decimal(1,0) NOT NULL")>
    Public Property Posicion() As Decimal
        Get
            Return Me._Posicion
        End Get
        Set
            If ((Me._Posicion = value) _
                        = False) Then
                Me.OnPosicionChanging(value)
                Me.SendPropertyChanging
                Me._Posicion = value
                Me.SendPropertyChanged("Posicion")
                Me.OnPosicionChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TipoArticulo")>
Partial Public Class T_TipoArticulo
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _TipoArticulo As String

    Private _Descripcion As String

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTipoArticuloChanging(value As String)
    End Sub
    Partial Private Sub OnTipoArticuloChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoArticulo", DbType:="VarChar(1) NOT NULL", CanBeNull:=False, IsPrimaryKey:=True)>
    Public Property TipoArticulo() As String
        Get
            Return Me._TipoArticulo
        End Get
        Set
            If (String.Equals(Me._TipoArticulo, value) = False) Then
                Me.OnTipoArticuloChanging(value)
                Me.SendPropertyChanging
                Me._TipoArticulo = value
                Me.SendPropertyChanged("TipoArticulo")
                Me.OnTipoArticuloChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Descripcion() As String
        Get
            Return Me._Descripcion
        End Get
        Set
            If (String.Equals(Me._Descripcion, value) = False) Then
                Me.OnDescripcionChanging(value)
                Me.SendPropertyChanging
                Me._Descripcion = value
                Me.SendPropertyChanged("Descripcion")
                Me.OnDescripcionChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TipoDoc")>
Partial Public Class T_TipoDoc
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _TipoDoc As String

    Private _DescTipoDoc As String

    Private _Electronica As Boolean

    Private _Contable As Boolean

    Private _Filtro As String

    Private _Modo As String

    Private _Facturable As Boolean

    Private _Emision As Boolean

    Private _Cod_SII As Decimal

    Private _Nombre_Documento As String

    Private _Pagos As Boolean

    Private _Anula As String

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTipoDocChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDocChanged()
    End Sub
    Partial Private Sub OnDescTipoDocChanging(value As String)
    End Sub
    Partial Private Sub OnDescTipoDocChanged()
    End Sub
    Partial Private Sub OnElectronicaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnElectronicaChanged()
    End Sub
    Partial Private Sub OnContableChanging(value As Boolean)
    End Sub
    Partial Private Sub OnContableChanged()
    End Sub
    Partial Private Sub OnFiltroChanging(value As String)
    End Sub
    Partial Private Sub OnFiltroChanged()
    End Sub
    Partial Private Sub OnModoChanging(value As String)
    End Sub
    Partial Private Sub OnModoChanged()
    End Sub
    Partial Private Sub OnFacturableChanging(value As Boolean)
    End Sub
    Partial Private Sub OnFacturableChanged()
    End Sub
    Partial Private Sub OnEmisionChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEmisionChanged()
    End Sub
    Partial Private Sub OnCod_SIIChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCod_SIIChanged()
    End Sub
    Partial Private Sub OnNombre_DocumentoChanging(value As String)
    End Sub
    Partial Private Sub OnNombre_DocumentoChanged()
    End Sub
    Partial Private Sub OnPagosChanging(value As Boolean)
    End Sub
    Partial Private Sub OnPagosChanged()
    End Sub
    Partial Private Sub OnAnulaChanging(value As String)
    End Sub
    Partial Private Sub OnAnulaChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDoc", DbType:="VarChar(2) NOT NULL", CanBeNull:=False, IsPrimaryKey:=True)>
    Public Property TipoDoc() As String
        Get
            Return Me._TipoDoc
        End Get
        Set
            If (String.Equals(Me._TipoDoc, value) = False) Then
                Me.OnTipoDocChanging(value)
                Me.SendPropertyChanging
                Me._TipoDoc = value
                Me.SendPropertyChanged("TipoDoc")
                Me.OnTipoDocChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescTipoDoc", DbType:="VarChar(30) NOT NULL", CanBeNull:=False)>
    Public Property DescTipoDoc() As String
        Get
            Return Me._DescTipoDoc
        End Get
        Set
            If (String.Equals(Me._DescTipoDoc, value) = False) Then
                Me.OnDescTipoDocChanging(value)
                Me.SendPropertyChanging
                Me._DescTipoDoc = value
                Me.SendPropertyChanged("DescTipoDoc")
                Me.OnDescTipoDocChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Electronica", DbType:="Bit NOT NULL")>
    Public Property Electronica() As Boolean
        Get
            Return Me._Electronica
        End Get
        Set
            If ((Me._Electronica = value) _
                        = False) Then
                Me.OnElectronicaChanging(value)
                Me.SendPropertyChanging
                Me._Electronica = value
                Me.SendPropertyChanged("Electronica")
                Me.OnElectronicaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Contable", DbType:="Bit NOT NULL")>
    Public Property Contable() As Boolean
        Get
            Return Me._Contable
        End Get
        Set
            If ((Me._Contable = value) _
                        = False) Then
                Me.OnContableChanging(value)
                Me.SendPropertyChanging
                Me._Contable = value
                Me.SendPropertyChanged("Contable")
                Me.OnContableChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Filtro", DbType:="VarChar(1) NOT NULL", CanBeNull:=False)>
    Public Property Filtro() As String
        Get
            Return Me._Filtro
        End Get
        Set
            If (String.Equals(Me._Filtro, value) = False) Then
                Me.OnFiltroChanging(value)
                Me.SendPropertyChanging
                Me._Filtro = value
                Me.SendPropertyChanged("Filtro")
                Me.OnFiltroChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Modo", DbType:="VarChar(1) NOT NULL", CanBeNull:=False)>
    Public Property Modo() As String
        Get
            Return Me._Modo
        End Get
        Set
            If (String.Equals(Me._Modo, value) = False) Then
                Me.OnModoChanging(value)
                Me.SendPropertyChanging
                Me._Modo = value
                Me.SendPropertyChanged("Modo")
                Me.OnModoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Facturable", DbType:="Bit NOT NULL")>
    Public Property Facturable() As Boolean
        Get
            Return Me._Facturable
        End Get
        Set
            If ((Me._Facturable = value) _
                        = False) Then
                Me.OnFacturableChanging(value)
                Me.SendPropertyChanging
                Me._Facturable = value
                Me.SendPropertyChanged("Facturable")
                Me.OnFacturableChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Emision", DbType:="Bit NOT NULL")>
    Public Property Emision() As Boolean
        Get
            Return Me._Emision
        End Get
        Set
            If ((Me._Emision = value) _
                        = False) Then
                Me.OnEmisionChanging(value)
                Me.SendPropertyChanging
                Me._Emision = value
                Me.SendPropertyChanged("Emision")
                Me.OnEmisionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cod_SII", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Cod_SII() As Decimal
        Get
            Return Me._Cod_SII
        End Get
        Set
            If ((Me._Cod_SII = value) _
                        = False) Then
                Me.OnCod_SIIChanging(value)
                Me.SendPropertyChanging
                Me._Cod_SII = value
                Me.SendPropertyChanged("Cod_SII")
                Me.OnCod_SIIChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre_Documento", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Nombre_Documento() As String
        Get
            Return Me._Nombre_Documento
        End Get
        Set
            If (String.Equals(Me._Nombre_Documento, value) = False) Then
                Me.OnNombre_DocumentoChanging(value)
                Me.SendPropertyChanging
                Me._Nombre_Documento = value
                Me.SendPropertyChanged("Nombre_Documento")
                Me.OnNombre_DocumentoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pagos", DbType:="Bit NOT NULL")>
    Public Property Pagos() As Boolean
        Get
            Return Me._Pagos
        End Get
        Set
            If ((Me._Pagos = value) _
                        = False) Then
                Me.OnPagosChanging(value)
                Me.SendPropertyChanging
                Me._Pagos = value
                Me.SendPropertyChanged("Pagos")
                Me.OnPagosChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Anula", DbType:="VarChar(2) NOT NULL", CanBeNull:=False)>
    Public Property Anula() As String
        Get
            Return Me._Anula
        End Get
        Set
            If (String.Equals(Me._Anula, value) = False) Then
                Me.OnAnulaChanging(value)
                Me.SendPropertyChanging
                Me._Anula = value
                Me.SendPropertyChanged("Anula")
                Me.OnAnulaChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TipoEstados")>
Partial Public Class T_TipoEstados
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Tipo As Char

    Private _DescTipo As String

    Private _Tabla As String

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTipoChanging(value As Char)
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    Partial Private Sub OnDescTipoChanging(value As String)
    End Sub
    Partial Private Sub OnDescTipoChanged()
    End Sub
    Partial Private Sub OnTablaChanging(value As String)
    End Sub
    Partial Private Sub OnTablaChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tipo", DbType:="NChar(1) NOT NULL", IsPrimaryKey:=True)>
    Public Property Tipo() As Char
        Get
            Return Me._Tipo
        End Get
        Set
            If ((Me._Tipo = value) _
                        = False) Then
                Me.OnTipoChanging(value)
                Me.SendPropertyChanging
                Me._Tipo = value
                Me.SendPropertyChanged("Tipo")
                Me.OnTipoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescTipo", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property DescTipo() As String
        Get
            Return Me._DescTipo
        End Get
        Set
            If (String.Equals(Me._DescTipo, value) = False) Then
                Me.OnDescTipoChanging(value)
                Me.SendPropertyChanging
                Me._DescTipo = value
                Me.SendPropertyChanged("DescTipo")
                Me.OnDescTipoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tabla", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Tabla() As String
        Get
            Return Me._Tabla
        End Get
        Set
            If (String.Equals(Me._Tabla, value) = False) Then
                Me.OnTablaChanging(value)
                Me.SendPropertyChanging
                Me._Tabla = value
                Me.SendPropertyChanged("Tabla")
                Me.OnTablaChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TipoMov")>
Partial Public Class T_TipoMov
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _TipoMov As String

    Private _DescTipo As String

    Private _Ajuste As String

    Private _Visible As Boolean

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTipoMovChanging(value As String)
    End Sub
    Partial Private Sub OnTipoMovChanged()
    End Sub
    Partial Private Sub OnDescTipoChanging(value As String)
    End Sub
    Partial Private Sub OnDescTipoChanged()
    End Sub
    Partial Private Sub OnAjusteChanging(value As String)
    End Sub
    Partial Private Sub OnAjusteChanged()
    End Sub
    Partial Private Sub OnVisibleChanging(value As Boolean)
    End Sub
    Partial Private Sub OnVisibleChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoMov", DbType:="VarChar(2) NOT NULL", CanBeNull:=False, IsPrimaryKey:=True)>
    Public Property TipoMov() As String
        Get
            Return Me._TipoMov
        End Get
        Set
            If (String.Equals(Me._TipoMov, value) = False) Then
                Me.OnTipoMovChanging(value)
                Me.SendPropertyChanging
                Me._TipoMov = value
                Me.SendPropertyChanged("TipoMov")
                Me.OnTipoMovChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescTipo", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property DescTipo() As String
        Get
            Return Me._DescTipo
        End Get
        Set
            If (String.Equals(Me._DescTipo, value) = False) Then
                Me.OnDescTipoChanging(value)
                Me.SendPropertyChanging
                Me._DescTipo = value
                Me.SendPropertyChanged("DescTipo")
                Me.OnDescTipoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ajuste", DbType:="VarChar(1) NOT NULL", CanBeNull:=False)>
    Public Property Ajuste() As String
        Get
            Return Me._Ajuste
        End Get
        Set
            If (String.Equals(Me._Ajuste, value) = False) Then
                Me.OnAjusteChanging(value)
                Me.SendPropertyChanging
                Me._Ajuste = value
                Me.SendPropertyChanged("Ajuste")
                Me.OnAjusteChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Visible", DbType:="Bit NOT NULL")>
    Public Property Visible() As Boolean
        Get
            Return Me._Visible
        End Get
        Set
            If ((Me._Visible = value) _
                        = False) Then
                Me.OnVisibleChanging(value)
                Me.SendPropertyChanging
                Me._Visible = value
                Me.SendPropertyChanged("Visible")
                Me.OnVisibleChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Unidades")>
Partial Public Class T_Unidades
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Unidad As String

    Private _DescUnidad As String

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnUnidadChanging(value As String)
    End Sub
    Partial Private Sub OnUnidadChanged()
    End Sub
    Partial Private Sub OnDescUnidadChanging(value As String)
    End Sub
    Partial Private Sub OnDescUnidadChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Unidad", DbType:="VarChar(2) NOT NULL", CanBeNull:=False, IsPrimaryKey:=True)>
    Public Property Unidad() As String
        Get
            Return Me._Unidad
        End Get
        Set
            If (String.Equals(Me._Unidad, value) = False) Then
                Me.OnUnidadChanging(value)
                Me.SendPropertyChanging
                Me._Unidad = value
                Me.SendPropertyChanged("Unidad")
                Me.OnUnidadChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescUnidad", DbType:="VarChar(30) NOT NULL", CanBeNull:=False)>
    Public Property DescUnidad() As String
        Get
            Return Me._DescUnidad
        End Get
        Set
            If (String.Equals(Me._DescUnidad, value) = False) Then
                Me.OnDescUnidadChanging(value)
                Me.SendPropertyChanging
                Me._DescUnidad = value
                Me.SendPropertyChanged("DescUnidad")
                Me.OnDescUnidadChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Usuarios")>
Partial Public Class T_Usuarios
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Usuario As String

    Private _NombreUsr As String

    Private _Rut As String

    Private _Acceso As Decimal

    Private _Clave As String

    Private _Local As Decimal

    Private _Bodega As Decimal

    Private _Funcionario As Boolean

    Private _Empresa As Decimal

    Private _MaxDescuento As Decimal

    Private _Base As Decimal

    Private _Bruto As Decimal

    Private _AFP As Decimal

    Private _Salud As Decimal

    Private _Pactado As Double

    Private _CajaComp As Decimal

    Private _Vigencia As Date

    Private _Movilizacion As Double

    Private _Colacion As Double

    Private _Gratificacion As Double

    Private _Cargas As Decimal

    Private _MontoCargas As Double

    Private _SIS As Double

    Private _ImpuestoUnico As Double

    Private _Banco As String

    Private _CuentaCorriente As String

    Private _Correo As String

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnNombreUsrChanging(value As String)
    End Sub
    Partial Private Sub OnNombreUsrChanged()
    End Sub
    Partial Private Sub OnRutChanging(value As String)
    End Sub
    Partial Private Sub OnRutChanged()
    End Sub
    Partial Private Sub OnAccesoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnAccesoChanged()
    End Sub
    Partial Private Sub OnClaveChanging(value As String)
    End Sub
    Partial Private Sub OnClaveChanged()
    End Sub
    Partial Private Sub OnLocalChanging(value As Decimal)
    End Sub
    Partial Private Sub OnLocalChanged()
    End Sub
    Partial Private Sub OnBodegaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnBodegaChanged()
    End Sub
    Partial Private Sub OnFuncionarioChanging(value As Boolean)
    End Sub
    Partial Private Sub OnFuncionarioChanged()
    End Sub
    Partial Private Sub OnEmpresaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnEmpresaChanged()
    End Sub
    Partial Private Sub OnMaxDescuentoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnMaxDescuentoChanged()
    End Sub
    Partial Private Sub OnBaseChanging(value As Decimal)
    End Sub
    Partial Private Sub OnBaseChanged()
    End Sub
    Partial Private Sub OnBrutoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnBrutoChanged()
    End Sub
    Partial Private Sub OnAFPChanging(value As Decimal)
    End Sub
    Partial Private Sub OnAFPChanged()
    End Sub
    Partial Private Sub OnSaludChanging(value As Decimal)
    End Sub
    Partial Private Sub OnSaludChanged()
    End Sub
    Partial Private Sub OnPactadoChanging(value As Double)
    End Sub
    Partial Private Sub OnPactadoChanged()
    End Sub
    Partial Private Sub OnCajaCompChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCajaCompChanged()
    End Sub
    Partial Private Sub OnVigenciaChanging(value As Date)
    End Sub
    Partial Private Sub OnVigenciaChanged()
    End Sub
    Partial Private Sub OnMovilizacionChanging(value As Double)
    End Sub
    Partial Private Sub OnMovilizacionChanged()
    End Sub
    Partial Private Sub OnColacionChanging(value As Double)
    End Sub
    Partial Private Sub OnColacionChanged()
    End Sub
    Partial Private Sub OnGratificacionChanging(value As Double)
    End Sub
    Partial Private Sub OnGratificacionChanged()
    End Sub
    Partial Private Sub OnCargasChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCargasChanged()
    End Sub
    Partial Private Sub OnMontoCargasChanging(value As Double)
    End Sub
    Partial Private Sub OnMontoCargasChanged()
    End Sub
    Partial Private Sub OnSISChanging(value As Double)
    End Sub
    Partial Private Sub OnSISChanged()
    End Sub
    Partial Private Sub OnImpuestoUnicoChanging(value As Double)
    End Sub
    Partial Private Sub OnImpuestoUnicoChanged()
    End Sub
    Partial Private Sub OnBancoChanging(value As String)
    End Sub
    Partial Private Sub OnBancoChanged()
    End Sub
    Partial Private Sub OnCuentaCorrienteChanging(value As String)
    End Sub
    Partial Private Sub OnCuentaCorrienteChanged()
    End Sub
    Partial Private Sub OnCorreoChanging(value As String)
    End Sub
    Partial Private Sub OnCorreoChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="VarChar(3) NOT NULL", CanBeNull:=False, IsPrimaryKey:=True)>
    Public Property Usuario() As String
        Get
            Return Me._Usuario
        End Get
        Set
            If (String.Equals(Me._Usuario, value) = False) Then
                Me.OnUsuarioChanging(value)
                Me.SendPropertyChanging
                Me._Usuario = value
                Me.SendPropertyChanged("Usuario")
                Me.OnUsuarioChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreUsr", DbType:="VarChar(100) NOT NULL", CanBeNull:=False)>
    Public Property NombreUsr() As String
        Get
            Return Me._NombreUsr
        End Get
        Set
            If (String.Equals(Me._NombreUsr, value) = False) Then
                Me.OnNombreUsrChanging(value)
                Me.SendPropertyChanging
                Me._NombreUsr = value
                Me.SendPropertyChanged("NombreUsr")
                Me.OnNombreUsrChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rut", DbType:="VarChar(12) NOT NULL", CanBeNull:=False)>
    Public Property Rut() As String
        Get
            Return Me._Rut
        End Get
        Set
            If (String.Equals(Me._Rut, value) = False) Then
                Me.OnRutChanging(value)
                Me.SendPropertyChanging
                Me._Rut = value
                Me.SendPropertyChanged("Rut")
                Me.OnRutChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Acceso", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Acceso() As Decimal
        Get
            Return Me._Acceso
        End Get
        Set
            If ((Me._Acceso = value) _
                        = False) Then
                Me.OnAccesoChanging(value)
                Me.SendPropertyChanging
                Me._Acceso = value
                Me.SendPropertyChanged("Acceso")
                Me.OnAccesoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Clave", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Clave() As String
        Get
            Return Me._Clave
        End Get
        Set
            If (String.Equals(Me._Clave, value) = False) Then
                Me.OnClaveChanging(value)
                Me.SendPropertyChanging
                Me._Clave = value
                Me.SendPropertyChanged("Clave")
                Me.OnClaveChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Local() As Decimal
        Get
            Return Me._Local
        End Get
        Set
            If ((Me._Local = value) _
                        = False) Then
                Me.OnLocalChanging(value)
                Me.SendPropertyChanging
                Me._Local = value
                Me.SendPropertyChanged("Local")
                Me.OnLocalChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bodega", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Bodega() As Decimal
        Get
            Return Me._Bodega
        End Get
        Set
            If ((Me._Bodega = value) _
                        = False) Then
                Me.OnBodegaChanging(value)
                Me.SendPropertyChanging
                Me._Bodega = value
                Me.SendPropertyChanged("Bodega")
                Me.OnBodegaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Funcionario", DbType:="Bit NOT NULL")>
    Public Property Funcionario() As Boolean
        Get
            Return Me._Funcionario
        End Get
        Set
            If ((Me._Funcionario = value) _
                        = False) Then
                Me.OnFuncionarioChanging(value)
                Me.SendPropertyChanging
                Me._Funcionario = value
                Me.SendPropertyChanged("Funcionario")
                Me.OnFuncionarioChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Empresa", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Empresa() As Decimal
        Get
            Return Me._Empresa
        End Get
        Set
            If ((Me._Empresa = value) _
                        = False) Then
                Me.OnEmpresaChanging(value)
                Me.SendPropertyChanging
                Me._Empresa = value
                Me.SendPropertyChanged("Empresa")
                Me.OnEmpresaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaxDescuento", DbType:="Float NOT NULL")>
    Public Property MaxDescuento() As Decimal
        Get
            Return Me._MaxDescuento
        End Get
        Set
            If ((Me._MaxDescuento = value) _
                        = False) Then
                Me.OnMaxDescuentoChanging(value)
                Me.SendPropertyChanging
                Me._MaxDescuento = value
                Me.SendPropertyChanged("MaxDescuento")
                Me.OnMaxDescuentoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Base", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Base() As Decimal
        Get
            Return Me._Base
        End Get
        Set
            If ((Me._Base = value) _
                        = False) Then
                Me.OnBaseChanging(value)
                Me.SendPropertyChanging
                Me._Base = value
                Me.SendPropertyChanged("Base")
                Me.OnBaseChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bruto", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Bruto() As Decimal
        Get
            Return Me._Bruto
        End Get
        Set
            If ((Me._Bruto = value) _
                        = False) Then
                Me.OnBrutoChanging(value)
                Me.SendPropertyChanging
                Me._Bruto = value
                Me.SendPropertyChanged("Bruto")
                Me.OnBrutoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AFP", DbType:="Decimal(18,0) NOT NULL")>
    Public Property AFP() As Decimal
        Get
            Return Me._AFP
        End Get
        Set
            If ((Me._AFP = value) _
                        = False) Then
                Me.OnAFPChanging(value)
                Me.SendPropertyChanging
                Me._AFP = value
                Me.SendPropertyChanged("AFP")
                Me.OnAFPChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Salud", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Salud() As Decimal
        Get
            Return Me._Salud
        End Get
        Set
            If ((Me._Salud = value) _
                        = False) Then
                Me.OnSaludChanging(value)
                Me.SendPropertyChanging
                Me._Salud = value
                Me.SendPropertyChanged("Salud")
                Me.OnSaludChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pactado", DbType:="Float NOT NULL")>
    Public Property Pactado() As Double
        Get
            Return Me._Pactado
        End Get
        Set
            If ((Me._Pactado = value) _
                        = False) Then
                Me.OnPactadoChanging(value)
                Me.SendPropertyChanging
                Me._Pactado = value
                Me.SendPropertyChanged("Pactado")
                Me.OnPactadoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CajaComp", DbType:="Decimal(18,0) NOT NULL")>
    Public Property CajaComp() As Decimal
        Get
            Return Me._CajaComp
        End Get
        Set
            If ((Me._CajaComp = value) _
                        = False) Then
                Me.OnCajaCompChanging(value)
                Me.SendPropertyChanging
                Me._CajaComp = value
                Me.SendPropertyChanged("CajaComp")
                Me.OnCajaCompChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Vigencia", DbType:="DateTime NOT NULL")>
    Public Property Vigencia() As Date
        Get
            Return Me._Vigencia
        End Get
        Set
            If ((Me._Vigencia = value) _
                        = False) Then
                Me.OnVigenciaChanging(value)
                Me.SendPropertyChanging
                Me._Vigencia = value
                Me.SendPropertyChanged("Vigencia")
                Me.OnVigenciaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Movilizacion", DbType:="Float NOT NULL")>
    Public Property Movilizacion() As Double
        Get
            Return Me._Movilizacion
        End Get
        Set
            If ((Me._Movilizacion = value) _
                        = False) Then
                Me.OnMovilizacionChanging(value)
                Me.SendPropertyChanging
                Me._Movilizacion = value
                Me.SendPropertyChanged("Movilizacion")
                Me.OnMovilizacionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Colacion", DbType:="Float NOT NULL")>
    Public Property Colacion() As Double
        Get
            Return Me._Colacion
        End Get
        Set
            If ((Me._Colacion = value) _
                        = False) Then
                Me.OnColacionChanging(value)
                Me.SendPropertyChanging
                Me._Colacion = value
                Me.SendPropertyChanged("Colacion")
                Me.OnColacionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Gratificacion", DbType:="Float NOT NULL")>
    Public Property Gratificacion() As Double
        Get
            Return Me._Gratificacion
        End Get
        Set
            If ((Me._Gratificacion = value) _
                        = False) Then
                Me.OnGratificacionChanging(value)
                Me.SendPropertyChanging
                Me._Gratificacion = value
                Me.SendPropertyChanged("Gratificacion")
                Me.OnGratificacionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cargas", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Cargas() As Decimal
        Get
            Return Me._Cargas
        End Get
        Set
            If ((Me._Cargas = value) _
                        = False) Then
                Me.OnCargasChanging(value)
                Me.SendPropertyChanging
                Me._Cargas = value
                Me.SendPropertyChanged("Cargas")
                Me.OnCargasChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MontoCargas", DbType:="Float NOT NULL")>
    Public Property MontoCargas() As Double
        Get
            Return Me._MontoCargas
        End Get
        Set
            If ((Me._MontoCargas = value) _
                        = False) Then
                Me.OnMontoCargasChanging(value)
                Me.SendPropertyChanging
                Me._MontoCargas = value
                Me.SendPropertyChanged("MontoCargas")
                Me.OnMontoCargasChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SIS", DbType:="Float NOT NULL")>
    Public Property SIS() As Double
        Get
            Return Me._SIS
        End Get
        Set
            If ((Me._SIS = value) _
                        = False) Then
                Me.OnSISChanging(value)
                Me.SendPropertyChanging
                Me._SIS = value
                Me.SendPropertyChanged("SIS")
                Me.OnSISChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImpuestoUnico", DbType:="Float NOT NULL")>
    Public Property ImpuestoUnico() As Double
        Get
            Return Me._ImpuestoUnico
        End Get
        Set
            If ((Me._ImpuestoUnico = value) _
                        = False) Then
                Me.OnImpuestoUnicoChanging(value)
                Me.SendPropertyChanging
                Me._ImpuestoUnico = value
                Me.SendPropertyChanged("ImpuestoUnico")
                Me.OnImpuestoUnicoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Banco", DbType:="VarChar(3) NOT NULL", CanBeNull:=False)>
    Public Property Banco() As String
        Get
            Return Me._Banco
        End Get
        Set
            If (String.Equals(Me._Banco, value) = False) Then
                Me.OnBancoChanging(value)
                Me.SendPropertyChanging
                Me._Banco = value
                Me.SendPropertyChanged("Banco")
                Me.OnBancoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CuentaCorriente", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property CuentaCorriente() As String
        Get
            Return Me._CuentaCorriente
        End Get
        Set
            If (String.Equals(Me._CuentaCorriente, value) = False) Then
                Me.OnCuentaCorrienteChanging(value)
                Me.SendPropertyChanging
                Me._CuentaCorriente = value
                Me.SendPropertyChanged("CuentaCorriente")
                Me.OnCuentaCorrienteChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Correo", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Correo() As String
        Get
            Return Me._Correo
        End Get
        Set
            If (String.Equals(Me._Correo, value) = False) Then
                Me.OnCorreoChanging(value)
                Me.SendPropertyChanging
                Me._Correo = value
                Me.SendPropertyChanged("Correo")
                Me.OnCorreoChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Valores")>
Partial Public Class T_Valores
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _ID As Decimal

    Private _Rango As Decimal

    Private _Valor As Double

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnRangoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnRangoChanged()
    End Sub
    Partial Private Sub OnValorChanging(value As Double)
    End Sub
    Partial Private Sub OnValorChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property ID() As Decimal
        Get
            Return Me._ID
        End Get
        Set
            If ((Me._ID = value) _
                        = False) Then
                Me.OnIDChanging(value)
                Me.SendPropertyChanging
                Me._ID = value
                Me.SendPropertyChanged("ID")
                Me.OnIDChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rango", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Rango() As Decimal
        Get
            Return Me._Rango
        End Get
        Set
            If ((Me._Rango = value) _
                        = False) Then
                Me.OnRangoChanging(value)
                Me.SendPropertyChanging
                Me._Rango = value
                Me.SendPropertyChanged("Rango")
                Me.OnRangoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Valor", DbType:="Float NOT NULL")>
    Public Property Valor() As Double
        Get
            Return Me._Valor
        End Get
        Set
            If ((Me._Valor = value) _
                        = False) Then
                Me.OnValorChanging(value)
                Me.SendPropertyChanging
                Me._Valor = value
                Me.SendPropertyChanged("Valor")
                Me.OnValorChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DocumentosP")>
Partial Public Class T_DocumentosP
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _ID As Decimal

    Private _Local As Decimal

    Private _TipoDoc As String

    Private _Numero As Decimal

    Private _Fecha As Date

    Private _Cliente As Decimal

    Private _Vendedor As String

    Private _Estado As String

    Private _FPago As String

    Private _FechaPago As Date

    Private _NumeroPago As String

    Private _Cuenta As String

    Private _Banco As String

    Private _Titular As String

    Private _Monto As Decimal

    Private _Obs As String

    Private _Usuario As String

    Private _FechaCanc As Date

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnLocalChanging(value As Decimal)
    End Sub
    Partial Private Sub OnLocalChanged()
    End Sub
    Partial Private Sub OnTipoDocChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDocChanged()
    End Sub
    Partial Private Sub OnNumeroChanging(value As Decimal)
    End Sub
    Partial Private Sub OnNumeroChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnClienteChanging(value As Decimal)
    End Sub
    Partial Private Sub OnClienteChanged()
    End Sub
    Partial Private Sub OnVendedorChanging(value As String)
    End Sub
    Partial Private Sub OnVendedorChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnFPagoChanging(value As String)
    End Sub
    Partial Private Sub OnFPagoChanged()
    End Sub
    Partial Private Sub OnFechaPagoChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaPagoChanged()
    End Sub
    Partial Private Sub OnNumeroPagoChanging(value As String)
    End Sub
    Partial Private Sub OnNumeroPagoChanged()
    End Sub
    Partial Private Sub OnCuentaChanging(value As String)
    End Sub
    Partial Private Sub OnCuentaChanged()
    End Sub
    Partial Private Sub OnBancoChanging(value As String)
    End Sub
    Partial Private Sub OnBancoChanged()
    End Sub
    Partial Private Sub OnTitularChanging(value As String)
    End Sub
    Partial Private Sub OnTitularChanged()
    End Sub
    Partial Private Sub OnMontoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnMontoChanged()
    End Sub
    Partial Private Sub OnObsChanging(value As String)
    End Sub
    Partial Private Sub OnObsChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnFechaCancChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaCancChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property ID() As Decimal
        Get
            Return Me._ID
        End Get
        Set
            If ((Me._ID = value) _
                        = False) Then
                Me.OnIDChanging(value)
                Me.SendPropertyChanging
                Me._ID = value
                Me.SendPropertyChanged("ID")
                Me.OnIDChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Local() As Decimal
        Get
            Return Me._Local
        End Get
        Set
            If ((Me._Local = value) _
                        = False) Then
                Me.OnLocalChanging(value)
                Me.SendPropertyChanging
                Me._Local = value
                Me.SendPropertyChanged("Local")
                Me.OnLocalChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDoc", DbType:="VarChar(2) NOT NULL", CanBeNull:=False)>
    Public Property TipoDoc() As String
        Get
            Return Me._TipoDoc
        End Get
        Set
            If (String.Equals(Me._TipoDoc, value) = False) Then
                Me.OnTipoDocChanging(value)
                Me.SendPropertyChanging
                Me._TipoDoc = value
                Me.SendPropertyChanged("TipoDoc")
                Me.OnTipoDocChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Numero", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Numero() As Decimal
        Get
            Return Me._Numero
        End Get
        Set
            If ((Me._Numero = value) _
                        = False) Then
                Me.OnNumeroChanging(value)
                Me.SendPropertyChanging
                Me._Numero = value
                Me.SendPropertyChanged("Numero")
                Me.OnNumeroChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="DateTime NOT NULL")>
    Public Property Fecha() As Date
        Get
            Return Me._Fecha
        End Get
        Set
            If ((Me._Fecha = value) _
                        = False) Then
                Me.OnFechaChanging(value)
                Me.SendPropertyChanging
                Me._Fecha = value
                Me.SendPropertyChanged("Fecha")
                Me.OnFechaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cliente", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Cliente() As Decimal
        Get
            Return Me._Cliente
        End Get
        Set
            If ((Me._Cliente = value) _
                        = False) Then
                Me.OnClienteChanging(value)
                Me.SendPropertyChanging
                Me._Cliente = value
                Me.SendPropertyChanged("Cliente")
                Me.OnClienteChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Vendedor", DbType:="NVarChar(3) NOT NULL", CanBeNull:=False)>
    Public Property Vendedor() As String
        Get
            Return Me._Vendedor
        End Get
        Set
            If (String.Equals(Me._Vendedor, value) = False) Then
                Me.OnVendedorChanging(value)
                Me.SendPropertyChanging
                Me._Vendedor = value
                Me.SendPropertyChanged("Vendedor")
                Me.OnVendedorChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Estado", DbType:="VarChar(1) NOT NULL", CanBeNull:=False)>
    Public Property Estado() As String
        Get
            Return Me._Estado
        End Get
        Set
            If (String.Equals(Me._Estado, value) = False) Then
                Me.OnEstadoChanging(value)
                Me.SendPropertyChanging
                Me._Estado = value
                Me.SendPropertyChanged("Estado")
                Me.OnEstadoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FPago", DbType:="VarChar(2) NOT NULL", CanBeNull:=False)>
    Public Property FPago() As String
        Get
            Return Me._FPago
        End Get
        Set
            If (String.Equals(Me._FPago, value) = False) Then
                Me.OnFPagoChanging(value)
                Me.SendPropertyChanging
                Me._FPago = value
                Me.SendPropertyChanged("FPago")
                Me.OnFPagoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaPago", DbType:="DateTime NOT NULL")>
    Public Property FechaPago() As Date
        Get
            Return Me._FechaPago
        End Get
        Set
            If ((Me._FechaPago = value) _
                        = False) Then
                Me.OnFechaPagoChanging(value)
                Me.SendPropertyChanging
                Me._FechaPago = value
                Me.SendPropertyChanged("FechaPago")
                Me.OnFechaPagoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumeroPago", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property NumeroPago() As String
        Get
            Return Me._NumeroPago
        End Get
        Set
            If (String.Equals(Me._NumeroPago, value) = False) Then
                Me.OnNumeroPagoChanging(value)
                Me.SendPropertyChanging
                Me._NumeroPago = value
                Me.SendPropertyChanged("NumeroPago")
                Me.OnNumeroPagoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cuenta", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Cuenta() As String
        Get
            Return Me._Cuenta
        End Get
        Set
            If (String.Equals(Me._Cuenta, value) = False) Then
                Me.OnCuentaChanging(value)
                Me.SendPropertyChanging
                Me._Cuenta = value
                Me.SendPropertyChanged("Cuenta")
                Me.OnCuentaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Banco", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Banco() As String
        Get
            Return Me._Banco
        End Get
        Set
            If (String.Equals(Me._Banco, value) = False) Then
                Me.OnBancoChanging(value)
                Me.SendPropertyChanging
                Me._Banco = value
                Me.SendPropertyChanged("Banco")
                Me.OnBancoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Titular", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Titular() As String
        Get
            Return Me._Titular
        End Get
        Set
            If (String.Equals(Me._Titular, value) = False) Then
                Me.OnTitularChanging(value)
                Me.SendPropertyChanging
                Me._Titular = value
                Me.SendPropertyChanged("Titular")
                Me.OnTitularChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Monto", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Monto() As Decimal
        Get
            Return Me._Monto
        End Get
        Set
            If ((Me._Monto = value) _
                        = False) Then
                Me.OnMontoChanging(value)
                Me.SendPropertyChanging
                Me._Monto = value
                Me.SendPropertyChanged("Monto")
                Me.OnMontoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Obs", DbType:="VarChar(4000) NOT NULL", CanBeNull:=False)>
    Public Property Obs() As String
        Get
            Return Me._Obs
        End Get
        Set
            If (String.Equals(Me._Obs, value) = False) Then
                Me.OnObsChanging(value)
                Me.SendPropertyChanging
                Me._Obs = value
                Me.SendPropertyChanged("Obs")
                Me.OnObsChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="VarChar(3) NOT NULL", CanBeNull:=False)>
    Public Property Usuario() As String
        Get
            Return Me._Usuario
        End Get
        Set
            If (String.Equals(Me._Usuario, value) = False) Then
                Me.OnUsuarioChanging(value)
                Me.SendPropertyChanging
                Me._Usuario = value
                Me.SendPropertyChanged("Usuario")
                Me.OnUsuarioChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaCanc", DbType:="Date NOT NULL")>
    Public Property FechaCanc() As Date
        Get
            Return Me._FechaCanc
        End Get
        Set
            If ((Me._FechaCanc = value) _
                        = False) Then
                Me.OnFechaCancChanging(value)
                Me.SendPropertyChanging
                Me._FechaCanc = value
                Me.SendPropertyChanged("FechaCanc")
                Me.OnFechaCancChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DocumentosG")>
Partial Public Class T_DocumentosG
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _ID As Decimal

    Private _Local As Decimal

    Private _TipoDoc As String

    Private _Numero As Decimal

    Private _Fecha As Date

    Private _Estado As String

    Private _Cliente As Decimal

    Private _Rut As String

    Private _Aprobado As Boolean

    Private _FPago As String

    Private _Bodega As Decimal

    Private _OC As String

    Private _Motivo As String

    Private _Observaciones As String

    Private _Usuario As String

    Private _Vendedor As String

    Private _Electronica As Boolean

    Private _POS As Decimal

    Private _Ticket As Decimal

    Private _SubTotal As Double

    Private _Descuento As Double

    Private _Abonado As Double

    Private _Neto As Double

    Private _IVA As Decimal

    Private _EXE As Decimal

    Private _MIN As Decimal

    Private _BEB As Decimal

    Private _VIN As Decimal

    Private _CER As Decimal

    Private _LIC As Decimal

    Private _HAR As Decimal

    Private _CAR As Decimal

    Private _FEP As Decimal

    Private _TAB As Decimal

    Private _LGT As Decimal

    Private _OTRO As Decimal

    Private _Total As Double

    Private _RutTransporte As String

    Private _NombreTransporte As String

    Private _RutChofer As String

    Private _NombreChofer As String

    Private _PatenteMovil As String

    Private _DTE As Boolean

    Private _Firma() As Byte

    Private _TED As String

    Private _STATUS_DTE As Decimal

    Private _StockTraspasado As Boolean

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnLocalChanging(value As Decimal)
    End Sub
    Partial Private Sub OnLocalChanged()
    End Sub
    Partial Private Sub OnTipoDocChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDocChanged()
    End Sub
    Partial Private Sub OnNumeroChanging(value As Decimal)
    End Sub
    Partial Private Sub OnNumeroChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnClienteChanging(value As Decimal)
    End Sub
    Partial Private Sub OnClienteChanged()
    End Sub
    Partial Private Sub OnRutChanging(value As String)
    End Sub
    Partial Private Sub OnRutChanged()
    End Sub
    Partial Private Sub OnAprobadoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnAprobadoChanged()
    End Sub
    Partial Private Sub OnFPagoChanging(value As String)
    End Sub
    Partial Private Sub OnFPagoChanged()
    End Sub
    Partial Private Sub OnBodegaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnBodegaChanged()
    End Sub
    Partial Private Sub OnOCChanging(value As String)
    End Sub
    Partial Private Sub OnOCChanged()
    End Sub
    Partial Private Sub OnMotivoChanging(value As String)
    End Sub
    Partial Private Sub OnMotivoChanged()
    End Sub
    Partial Private Sub OnObservacionesChanging(value As String)
    End Sub
    Partial Private Sub OnObservacionesChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnVendedorChanging(value As String)
    End Sub
    Partial Private Sub OnVendedorChanged()
    End Sub
    Partial Private Sub OnElectronicaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnElectronicaChanged()
    End Sub
    Partial Private Sub OnPOSChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPOSChanged()
    End Sub
    Partial Private Sub OnTicketChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTicketChanged()
    End Sub
    Partial Private Sub OnSubTotalChanging(value As Double)
    End Sub
    Partial Private Sub OnSubTotalChanged()
    End Sub
    Partial Private Sub OnDescuentoChanging(value As Double)
    End Sub
    Partial Private Sub OnDescuentoChanged()
    End Sub
    Partial Private Sub OnAbonadoChanging(value As Double)
    End Sub
    Partial Private Sub OnAbonadoChanged()
    End Sub
    Partial Private Sub OnNetoChanging(value As Double)
    End Sub
    Partial Private Sub OnNetoChanged()
    End Sub
    Partial Private Sub OnIVAChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIVAChanged()
    End Sub
    Partial Private Sub OnEXEChanging(value As Decimal)
    End Sub
    Partial Private Sub OnEXEChanged()
    End Sub
    Partial Private Sub OnMINChanging(value As Decimal)
    End Sub
    Partial Private Sub OnMINChanged()
    End Sub
    Partial Private Sub OnBEBChanging(value As Decimal)
    End Sub
    Partial Private Sub OnBEBChanged()
    End Sub
    Partial Private Sub OnVINChanging(value As Decimal)
    End Sub
    Partial Private Sub OnVINChanged()
    End Sub
    Partial Private Sub OnCERChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCERChanged()
    End Sub
    Partial Private Sub OnLICChanging(value As Decimal)
    End Sub
    Partial Private Sub OnLICChanged()
    End Sub
    Partial Private Sub OnHARChanging(value As Decimal)
    End Sub
    Partial Private Sub OnHARChanged()
    End Sub
    Partial Private Sub OnCARChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCARChanged()
    End Sub
    Partial Private Sub OnFEPChanging(value As Decimal)
    End Sub
    Partial Private Sub OnFEPChanged()
    End Sub
    Partial Private Sub OnTABChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTABChanged()
    End Sub
    Partial Private Sub OnLGTChanging(value As Decimal)
    End Sub
    Partial Private Sub OnLGTChanged()
    End Sub
    Partial Private Sub OnOTROChanging(value As Decimal)
    End Sub
    Partial Private Sub OnOTROChanged()
    End Sub
    Partial Private Sub OnTotalChanging(value As Double)
    End Sub
    Partial Private Sub OnTotalChanged()
    End Sub
    Partial Private Sub OnRutTransporteChanging(value As String)
    End Sub
    Partial Private Sub OnRutTransporteChanged()
    End Sub
    Partial Private Sub OnNombreTransporteChanging(value As String)
    End Sub
    Partial Private Sub OnNombreTransporteChanged()
    End Sub
    Partial Private Sub OnRutChoferChanging(value As String)
    End Sub
    Partial Private Sub OnRutChoferChanged()
    End Sub
    Partial Private Sub OnNombreChoferChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChoferChanged()
    End Sub
    Partial Private Sub OnPatenteMovilChanging(value As String)
    End Sub
    Partial Private Sub OnPatenteMovilChanged()
    End Sub
    Partial Private Sub OnDTEChanging(value As Boolean)
    End Sub
    Partial Private Sub OnDTEChanged()
    End Sub
    Partial Private Sub OnFirmaChanging(value As Byte())
    End Sub
    Partial Private Sub OnFirmaChanged()
    End Sub
    Partial Private Sub OnTEDChanging(value As String)
    End Sub
    Partial Private Sub OnTEDChanged()
    End Sub
    Partial Private Sub OnSTATUS_DTEChanging(value As Decimal)
    End Sub
    Partial Private Sub OnSTATUS_DTEChanged()
    End Sub
    Partial Private Sub OnStockTraspasadoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnStockTraspasadoChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.Always, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsDbGenerated:=True)>
    Public Property ID() As Decimal
        Get
            Return Me._ID
        End Get
        Set
            If ((Me._ID = value) _
                        = False) Then
                Me.OnIDChanging(value)
                Me.SendPropertyChanging
                Me._ID = value
                Me.SendPropertyChanged("ID")
                Me.OnIDChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=True)>
    Public Property Local() As Decimal
        Get
            Return Me._Local
        End Get
        Set
            If ((Me._Local = value) _
                        = False) Then
                Me.OnLocalChanging(value)
                Me.SendPropertyChanging
                Me._Local = value
                Me.SendPropertyChanged("Local")
                Me.OnLocalChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDoc", DbType:="VarChar(2) NOT NULL", CanBeNull:=False, IsPrimaryKey:=True)>
    Public Property TipoDoc() As String
        Get
            Return Me._TipoDoc
        End Get
        Set
            If (String.Equals(Me._TipoDoc, value) = False) Then
                Me.OnTipoDocChanging(value)
                Me.SendPropertyChanging
                Me._TipoDoc = value
                Me.SendPropertyChanged("TipoDoc")
                Me.OnTipoDocChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Numero", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=True)>
    Public Property Numero() As Decimal
        Get
            Return Me._Numero
        End Get
        Set
            If ((Me._Numero = value) _
                        = False) Then
                Me.OnNumeroChanging(value)
                Me.SendPropertyChanging
                Me._Numero = value
                Me.SendPropertyChanged("Numero")
                Me.OnNumeroChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="DateTime NOT NULL")>
    Public Property Fecha() As Date
        Get
            Return Me._Fecha
        End Get
        Set
            If ((Me._Fecha = value) _
                        = False) Then
                Me.OnFechaChanging(value)
                Me.SendPropertyChanging
                Me._Fecha = value
                Me.SendPropertyChanged("Fecha")
                Me.OnFechaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Estado", DbType:="VarChar(1) NOT NULL", CanBeNull:=False)>
    Public Property Estado() As String
        Get
            Return Me._Estado
        End Get
        Set
            If (String.Equals(Me._Estado, value) = False) Then
                Me.OnEstadoChanging(value)
                Me.SendPropertyChanging
                Me._Estado = value
                Me.SendPropertyChanged("Estado")
                Me.OnEstadoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cliente", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Cliente() As Decimal
        Get
            Return Me._Cliente
        End Get
        Set
            If ((Me._Cliente = value) _
                        = False) Then
                Me.OnClienteChanging(value)
                Me.SendPropertyChanging
                Me._Cliente = value
                Me.SendPropertyChanged("Cliente")
                Me.OnClienteChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rut", DbType:="VarChar(12) NOT NULL", CanBeNull:=False)>
    Public Property Rut() As String
        Get
            Return Me._Rut
        End Get
        Set
            If (String.Equals(Me._Rut, value) = False) Then
                Me.OnRutChanging(value)
                Me.SendPropertyChanging
                Me._Rut = value
                Me.SendPropertyChanged("Rut")
                Me.OnRutChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Aprobado", DbType:="Bit NOT NULL")>
    Public Property Aprobado() As Boolean
        Get
            Return Me._Aprobado
        End Get
        Set
            If ((Me._Aprobado = value) _
                        = False) Then
                Me.OnAprobadoChanging(value)
                Me.SendPropertyChanging
                Me._Aprobado = value
                Me.SendPropertyChanged("Aprobado")
                Me.OnAprobadoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FPago", DbType:="VarChar(2) NOT NULL", CanBeNull:=False)>
    Public Property FPago() As String
        Get
            Return Me._FPago
        End Get
        Set
            If (String.Equals(Me._FPago, value) = False) Then
                Me.OnFPagoChanging(value)
                Me.SendPropertyChanging
                Me._FPago = value
                Me.SendPropertyChanged("FPago")
                Me.OnFPagoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bodega", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Bodega() As Decimal
        Get
            Return Me._Bodega
        End Get
        Set
            If ((Me._Bodega = value) _
                        = False) Then
                Me.OnBodegaChanging(value)
                Me.SendPropertyChanging
                Me._Bodega = value
                Me.SendPropertyChanged("Bodega")
                Me.OnBodegaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OC", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property OC() As String
        Get
            Return Me._OC
        End Get
        Set
            If (String.Equals(Me._OC, value) = False) Then
                Me.OnOCChanging(value)
                Me.SendPropertyChanging
                Me._OC = value
                Me.SendPropertyChanged("OC")
                Me.OnOCChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Motivo", DbType:="VarChar(1) NOT NULL", CanBeNull:=False)>
    Public Property Motivo() As String
        Get
            Return Me._Motivo
        End Get
        Set
            If (String.Equals(Me._Motivo, value) = False) Then
                Me.OnMotivoChanging(value)
                Me.SendPropertyChanging
                Me._Motivo = value
                Me.SendPropertyChanged("Motivo")
                Me.OnMotivoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Observaciones", DbType:="VarChar(4000) NOT NULL", CanBeNull:=False)>
    Public Property Observaciones() As String
        Get
            Return Me._Observaciones
        End Get
        Set
            If (String.Equals(Me._Observaciones, value) = False) Then
                Me.OnObservacionesChanging(value)
                Me.SendPropertyChanging
                Me._Observaciones = value
                Me.SendPropertyChanged("Observaciones")
                Me.OnObservacionesChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="VarChar(3) NOT NULL", CanBeNull:=False)>
    Public Property Usuario() As String
        Get
            Return Me._Usuario
        End Get
        Set
            If (String.Equals(Me._Usuario, value) = False) Then
                Me.OnUsuarioChanging(value)
                Me.SendPropertyChanging
                Me._Usuario = value
                Me.SendPropertyChanged("Usuario")
                Me.OnUsuarioChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Vendedor", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Vendedor() As String
        Get
            Return Me._Vendedor
        End Get
        Set
            If (String.Equals(Me._Vendedor, value) = False) Then
                Me.OnVendedorChanging(value)
                Me.SendPropertyChanging
                Me._Vendedor = value
                Me.SendPropertyChanged("Vendedor")
                Me.OnVendedorChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Electronica", DbType:="Bit NOT NULL")>
    Public Property Electronica() As Boolean
        Get
            Return Me._Electronica
        End Get
        Set
            If ((Me._Electronica = value) _
                        = False) Then
                Me.OnElectronicaChanging(value)
                Me.SendPropertyChanging
                Me._Electronica = value
                Me.SendPropertyChanged("Electronica")
                Me.OnElectronicaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POS", DbType:="Decimal(18,0) NOT NULL")>
    Public Property POS() As Decimal
        Get
            Return Me._POS
        End Get
        Set
            If ((Me._POS = value) _
                        = False) Then
                Me.OnPOSChanging(value)
                Me.SendPropertyChanging
                Me._POS = value
                Me.SendPropertyChanged("POS")
                Me.OnPOSChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ticket", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Ticket() As Decimal
        Get
            Return Me._Ticket
        End Get
        Set
            If ((Me._Ticket = value) _
                        = False) Then
                Me.OnTicketChanging(value)
                Me.SendPropertyChanging
                Me._Ticket = value
                Me.SendPropertyChanged("Ticket")
                Me.OnTicketChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubTotal", DbType:="Float NOT NULL")>
    Public Property SubTotal() As Double
        Get
            Return Me._SubTotal
        End Get
        Set
            If ((Me._SubTotal = value) _
                        = False) Then
                Me.OnSubTotalChanging(value)
                Me.SendPropertyChanging
                Me._SubTotal = value
                Me.SendPropertyChanged("SubTotal")
                Me.OnSubTotalChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descuento", DbType:="Float NOT NULL")>
    Public Property Descuento() As Double
        Get
            Return Me._Descuento
        End Get
        Set
            If ((Me._Descuento = value) _
                        = False) Then
                Me.OnDescuentoChanging(value)
                Me.SendPropertyChanging
                Me._Descuento = value
                Me.SendPropertyChanged("Descuento")
                Me.OnDescuentoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Abonado", DbType:="Float NOT NULL")>
    Public Property Abonado() As Double
        Get
            Return Me._Abonado
        End Get
        Set
            If ((Me._Abonado = value) _
                        = False) Then
                Me.OnAbonadoChanging(value)
                Me.SendPropertyChanging
                Me._Abonado = value
                Me.SendPropertyChanged("Abonado")
                Me.OnAbonadoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Neto", DbType:="Float NOT NULL")>
    Public Property Neto() As Double
        Get
            Return Me._Neto
        End Get
        Set
            If ((Me._Neto = value) _
                        = False) Then
                Me.OnNetoChanging(value)
                Me.SendPropertyChanging
                Me._Neto = value
                Me.SendPropertyChanged("Neto")
                Me.OnNetoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IVA", DbType:="Decimal(18,0) NOT NULL")>
    Public Property IVA() As Decimal
        Get
            Return Me._IVA
        End Get
        Set
            If ((Me._IVA = value) _
                        = False) Then
                Me.OnIVAChanging(value)
                Me.SendPropertyChanging
                Me._IVA = value
                Me.SendPropertyChanged("IVA")
                Me.OnIVAChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXE", DbType:="Decimal(18,0) NOT NULL")>
    Public Property EXE() As Decimal
        Get
            Return Me._EXE
        End Get
        Set
            If ((Me._EXE = value) _
                        = False) Then
                Me.OnEXEChanging(value)
                Me.SendPropertyChanging
                Me._EXE = value
                Me.SendPropertyChanged("EXE")
                Me.OnEXEChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MIN", DbType:="Decimal(18,0) NOT NULL")>
    Public Property MIN() As Decimal
        Get
            Return Me._MIN
        End Get
        Set
            If ((Me._MIN = value) _
                        = False) Then
                Me.OnMINChanging(value)
                Me.SendPropertyChanging
                Me._MIN = value
                Me.SendPropertyChanged("MIN")
                Me.OnMINChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BEB", DbType:="Decimal(18,0) NOT NULL")>
    Public Property BEB() As Decimal
        Get
            Return Me._BEB
        End Get
        Set
            If ((Me._BEB = value) _
                        = False) Then
                Me.OnBEBChanging(value)
                Me.SendPropertyChanging
                Me._BEB = value
                Me.SendPropertyChanged("BEB")
                Me.OnBEBChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VIN", DbType:="Decimal(18,0) NOT NULL")>
    Public Property VIN() As Decimal
        Get
            Return Me._VIN
        End Get
        Set
            If ((Me._VIN = value) _
                        = False) Then
                Me.OnVINChanging(value)
                Me.SendPropertyChanging
                Me._VIN = value
                Me.SendPropertyChanged("VIN")
                Me.OnVINChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER", DbType:="Decimal(18,0) NOT NULL")>
    Public Property CER() As Decimal
        Get
            Return Me._CER
        End Get
        Set
            If ((Me._CER = value) _
                        = False) Then
                Me.OnCERChanging(value)
                Me.SendPropertyChanging
                Me._CER = value
                Me.SendPropertyChanged("CER")
                Me.OnCERChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LIC", DbType:="Decimal(18,0) NOT NULL")>
    Public Property LIC() As Decimal
        Get
            Return Me._LIC
        End Get
        Set
            If ((Me._LIC = value) _
                        = False) Then
                Me.OnLICChanging(value)
                Me.SendPropertyChanging
                Me._LIC = value
                Me.SendPropertyChanged("LIC")
                Me.OnLICChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HAR", DbType:="Decimal(18,0) NOT NULL")>
    Public Property HAR() As Decimal
        Get
            Return Me._HAR
        End Get
        Set
            If ((Me._HAR = value) _
                        = False) Then
                Me.OnHARChanging(value)
                Me.SendPropertyChanging
                Me._HAR = value
                Me.SendPropertyChanged("HAR")
                Me.OnHARChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAR", DbType:="Decimal(18,0) NOT NULL")>
    Public Property CAR() As Decimal
        Get
            Return Me._CAR
        End Get
        Set
            If ((Me._CAR = value) _
                        = False) Then
                Me.OnCARChanging(value)
                Me.SendPropertyChanging
                Me._CAR = value
                Me.SendPropertyChanged("CAR")
                Me.OnCARChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FEP", DbType:="Decimal(18,0) NOT NULL")>
    Public Property FEP() As Decimal
        Get
            Return Me._FEP
        End Get
        Set
            If ((Me._FEP = value) _
                        = False) Then
                Me.OnFEPChanging(value)
                Me.SendPropertyChanging
                Me._FEP = value
                Me.SendPropertyChanged("FEP")
                Me.OnFEPChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAB", DbType:="Decimal(18,0) NOT NULL")>
    Public Property TAB() As Decimal
        Get
            Return Me._TAB
        End Get
        Set
            If ((Me._TAB = value) _
                        = False) Then
                Me.OnTABChanging(value)
                Me.SendPropertyChanging
                Me._TAB = value
                Me.SendPropertyChanged("TAB")
                Me.OnTABChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LGT", DbType:="Decimal(18,0) NOT NULL")>
    Public Property LGT() As Decimal
        Get
            Return Me._LGT
        End Get
        Set
            If ((Me._LGT = value) _
                        = False) Then
                Me.OnLGTChanging(value)
                Me.SendPropertyChanging
                Me._LGT = value
                Me.SendPropertyChanged("LGT")
                Me.OnLGTChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTRO", DbType:="Decimal(18,0) NOT NULL")>
    Public Property OTRO() As Decimal
        Get
            Return Me._OTRO
        End Get
        Set
            If ((Me._OTRO = value) _
                        = False) Then
                Me.OnOTROChanging(value)
                Me.SendPropertyChanging
                Me._OTRO = value
                Me.SendPropertyChanged("OTRO")
                Me.OnOTROChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Total", DbType:="Float NOT NULL")>
    Public Property Total() As Double
        Get
            Return Me._Total
        End Get
        Set
            If ((Me._Total = value) _
                        = False) Then
                Me.OnTotalChanging(value)
                Me.SendPropertyChanging
                Me._Total = value
                Me.SendPropertyChanged("Total")
                Me.OnTotalChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RutTransporte", DbType:="VarChar(12) NOT NULL", CanBeNull:=False)>
    Public Property RutTransporte() As String
        Get
            Return Me._RutTransporte
        End Get
        Set
            If (String.Equals(Me._RutTransporte, value) = False) Then
                Me.OnRutTransporteChanging(value)
                Me.SendPropertyChanging
                Me._RutTransporte = value
                Me.SendPropertyChanged("RutTransporte")
                Me.OnRutTransporteChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreTransporte", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property NombreTransporte() As String
        Get
            Return Me._NombreTransporte
        End Get
        Set
            If (String.Equals(Me._NombreTransporte, value) = False) Then
                Me.OnNombreTransporteChanging(value)
                Me.SendPropertyChanging
                Me._NombreTransporte = value
                Me.SendPropertyChanged("NombreTransporte")
                Me.OnNombreTransporteChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RutChofer", DbType:="VarChar(12) NOT NULL", CanBeNull:=False)>
    Public Property RutChofer() As String
        Get
            Return Me._RutChofer
        End Get
        Set
            If (String.Equals(Me._RutChofer, value) = False) Then
                Me.OnRutChoferChanging(value)
                Me.SendPropertyChanging
                Me._RutChofer = value
                Me.SendPropertyChanged("RutChofer")
                Me.OnRutChoferChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreChofer", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property NombreChofer() As String
        Get
            Return Me._NombreChofer
        End Get
        Set
            If (String.Equals(Me._NombreChofer, value) = False) Then
                Me.OnNombreChoferChanging(value)
                Me.SendPropertyChanging
                Me._NombreChofer = value
                Me.SendPropertyChanged("NombreChofer")
                Me.OnNombreChoferChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PatenteMovil", DbType:="VarChar(20) NOT NULL", CanBeNull:=False)>
    Public Property PatenteMovil() As String
        Get
            Return Me._PatenteMovil
        End Get
        Set
            If (String.Equals(Me._PatenteMovil, value) = False) Then
                Me.OnPatenteMovilChanging(value)
                Me.SendPropertyChanging
                Me._PatenteMovil = value
                Me.SendPropertyChanged("PatenteMovil")
                Me.OnPatenteMovilChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTE", DbType:="Bit NOT NULL")>
    Public Property DTE() As Boolean
        Get
            Return Me._DTE
        End Get
        Set
            If ((Me._DTE = value) _
                        = False) Then
                Me.OnDTEChanging(value)
                Me.SendPropertyChanging
                Me._DTE = value
                Me.SendPropertyChanged("DTE")
                Me.OnDTEChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Firma", DbType:="Image NOT NULL", CanBeNull:=False, UpdateCheck:=UpdateCheck.Never)>
    Public Property Firma() As Byte()
        Get
            Return Me._Firma
        End Get
        Set
            If (Object.Equals(Me._Firma, value) = False) Then
                Me.OnFirmaChanging(value)
                Me.SendPropertyChanging
                Me._Firma = value
                Me.SendPropertyChanged("Firma")
                Me.OnFirmaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TED", DbType:="VarChar(2000) NOT NULL", CanBeNull:=False)>
    Public Property TED() As String
        Get
            Return Me._TED
        End Get
        Set
            If (String.Equals(Me._TED, value) = False) Then
                Me.OnTEDChanging(value)
                Me.SendPropertyChanging
                Me._TED = value
                Me.SendPropertyChanged("TED")
                Me.OnTEDChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_DTE", DbType:="Decimal(18,0) NOT NULL")>
    Public Property STATUS_DTE() As Decimal
        Get
            Return Me._STATUS_DTE
        End Get
        Set
            If ((Me._STATUS_DTE = value) _
                        = False) Then
                Me.OnSTATUS_DTEChanging(value)
                Me.SendPropertyChanging
                Me._STATUS_DTE = value
                Me.SendPropertyChanged("STATUS_DTE")
                Me.OnSTATUS_DTEChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StockTraspasado", DbType:="Bit NOT NULL")>
    Public Property StockTraspasado() As Boolean
        Get
            Return Me._StockTraspasado
        End Get
        Set
            If ((Me._StockTraspasado = value) _
                        = False) Then
                Me.OnStockTraspasadoChanging(value)
                Me.SendPropertyChanging
                Me._StockTraspasado = value
                Me.SendPropertyChanged("StockTraspasado")
                Me.OnStockTraspasadoChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Barras")>
Partial Public Class T_Barras
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _ID As Decimal

    Private _Barra As String

    Private _Articulo As Decimal

    Private _Unidades As Decimal

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnBarraChanging(value As String)
    End Sub
    Partial Private Sub OnBarraChanged()
    End Sub
    Partial Private Sub OnArticuloChanging(value As Decimal)
    End Sub
    Partial Private Sub OnArticuloChanged()
    End Sub
    Partial Private Sub OnUnidadesChanging(value As Decimal)
    End Sub
    Partial Private Sub OnUnidadesChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property ID() As Decimal
        Get
            Return Me._ID
        End Get
        Set
            If ((Me._ID = value) _
                        = False) Then
                Me.OnIDChanging(value)
                Me.SendPropertyChanging
                Me._ID = value
                Me.SendPropertyChanged("ID")
                Me.OnIDChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Barra", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Barra() As String
        Get
            Return Me._Barra
        End Get
        Set
            If (String.Equals(Me._Barra, value) = False) Then
                Me.OnBarraChanging(value)
                Me.SendPropertyChanging
                Me._Barra = value
                Me.SendPropertyChanged("Barra")
                Me.OnBarraChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Articulo", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Articulo() As Decimal
        Get
            Return Me._Articulo
        End Get
        Set
            If ((Me._Articulo = value) _
                        = False) Then
                Me.OnArticuloChanging(value)
                Me.SendPropertyChanging
                Me._Articulo = value
                Me.SendPropertyChanged("Articulo")
                Me.OnArticuloChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Unidades", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Unidades() As Decimal
        Get
            Return Me._Unidades
        End Get
        Set
            If ((Me._Unidades = value) _
                        = False) Then
                Me.OnUnidadesChanging(value)
                Me.SendPropertyChanging
                Me._Unidades = value
                Me.SendPropertyChanged("Unidades")
                Me.OnUnidadesChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Abastecimiento")>
Partial Public Class T_Abastecimiento
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _id As Decimal

    Private _Articulo As Decimal

    Private _Descripcion As String

    Private _TotalSolicitado As Decimal

    Private _Usuario As String

    Private _Local1 As String

    Private _Local2 As String

    Private _Local3 As String

    Private _Local4 As String

    Private _Local5 As String

    Private _Local6 As String

    Private _Local7 As String

    Private _Local8 As String

    Private _Local9 As String

    Private _Local10 As String

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidChanging(value As Decimal)
    End Sub
    Partial Private Sub OnidChanged()
    End Sub
    Partial Private Sub OnArticuloChanging(value As Decimal)
    End Sub
    Partial Private Sub OnArticuloChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnTotalSolicitadoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTotalSolicitadoChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnLocal1Changing(value As String)
    End Sub
    Partial Private Sub OnLocal1Changed()
    End Sub
    Partial Private Sub OnLocal2Changing(value As String)
    End Sub
    Partial Private Sub OnLocal2Changed()
    End Sub
    Partial Private Sub OnLocal3Changing(value As String)
    End Sub
    Partial Private Sub OnLocal3Changed()
    End Sub
    Partial Private Sub OnLocal4Changing(value As String)
    End Sub
    Partial Private Sub OnLocal4Changed()
    End Sub
    Partial Private Sub OnLocal5Changing(value As String)
    End Sub
    Partial Private Sub OnLocal5Changed()
    End Sub
    Partial Private Sub OnLocal6Changing(value As String)
    End Sub
    Partial Private Sub OnLocal6Changed()
    End Sub
    Partial Private Sub OnLocal7Changing(value As String)
    End Sub
    Partial Private Sub OnLocal7Changed()
    End Sub
    Partial Private Sub OnLocal8Changing(value As String)
    End Sub
    Partial Private Sub OnLocal8Changed()
    End Sub
    Partial Private Sub OnLocal9Changing(value As String)
    End Sub
    Partial Private Sub OnLocal9Changed()
    End Sub
    Partial Private Sub OnLocal10Changing(value As String)
    End Sub
    Partial Private Sub OnLocal10Changed()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property id() As Decimal
        Get
            Return Me._id
        End Get
        Set
            If ((Me._id = value) _
                        = False) Then
                Me.OnidChanging(value)
                Me.SendPropertyChanging
                Me._id = value
                Me.SendPropertyChanged("id")
                Me.OnidChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Articulo", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Articulo() As Decimal
        Get
            Return Me._Articulo
        End Get
        Set
            If ((Me._Articulo = value) _
                        = False) Then
                Me.OnArticuloChanging(value)
                Me.SendPropertyChanging
                Me._Articulo = value
                Me.SendPropertyChanged("Articulo")
                Me.OnArticuloChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="VarChar(200) NOT NULL", CanBeNull:=False)>
    Public Property Descripcion() As String
        Get
            Return Me._Descripcion
        End Get
        Set
            If (String.Equals(Me._Descripcion, value) = False) Then
                Me.OnDescripcionChanging(value)
                Me.SendPropertyChanging
                Me._Descripcion = value
                Me.SendPropertyChanged("Descripcion")
                Me.OnDescripcionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalSolicitado", DbType:="Decimal(18,0) NOT NULL")>
    Public Property TotalSolicitado() As Decimal
        Get
            Return Me._TotalSolicitado
        End Get
        Set
            If ((Me._TotalSolicitado = value) _
                        = False) Then
                Me.OnTotalSolicitadoChanging(value)
                Me.SendPropertyChanging
                Me._TotalSolicitado = value
                Me.SendPropertyChanged("TotalSolicitado")
                Me.OnTotalSolicitadoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="VarChar(10) NOT NULL", CanBeNull:=False)>
    Public Property Usuario() As String
        Get
            Return Me._Usuario
        End Get
        Set
            If (String.Equals(Me._Usuario, value) = False) Then
                Me.OnUsuarioChanging(value)
                Me.SendPropertyChanging
                Me._Usuario = value
                Me.SendPropertyChanged("Usuario")
                Me.OnUsuarioChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local1", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Local1() As String
        Get
            Return Me._Local1
        End Get
        Set
            If (String.Equals(Me._Local1, value) = False) Then
                Me.OnLocal1Changing(value)
                Me.SendPropertyChanging
                Me._Local1 = value
                Me.SendPropertyChanged("Local1")
                Me.OnLocal1Changed
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local2", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Local2() As String
        Get
            Return Me._Local2
        End Get
        Set
            If (String.Equals(Me._Local2, value) = False) Then
                Me.OnLocal2Changing(value)
                Me.SendPropertyChanging
                Me._Local2 = value
                Me.SendPropertyChanged("Local2")
                Me.OnLocal2Changed
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local3", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Local3() As String
        Get
            Return Me._Local3
        End Get
        Set
            If (String.Equals(Me._Local3, value) = False) Then
                Me.OnLocal3Changing(value)
                Me.SendPropertyChanging
                Me._Local3 = value
                Me.SendPropertyChanged("Local3")
                Me.OnLocal3Changed
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local4", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Local4() As String
        Get
            Return Me._Local4
        End Get
        Set
            If (String.Equals(Me._Local4, value) = False) Then
                Me.OnLocal4Changing(value)
                Me.SendPropertyChanging
                Me._Local4 = value
                Me.SendPropertyChanged("Local4")
                Me.OnLocal4Changed
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local5", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Local5() As String
        Get
            Return Me._Local5
        End Get
        Set
            If (String.Equals(Me._Local5, value) = False) Then
                Me.OnLocal5Changing(value)
                Me.SendPropertyChanging
                Me._Local5 = value
                Me.SendPropertyChanged("Local5")
                Me.OnLocal5Changed
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local6", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Local6() As String
        Get
            Return Me._Local6
        End Get
        Set
            If (String.Equals(Me._Local6, value) = False) Then
                Me.OnLocal6Changing(value)
                Me.SendPropertyChanging
                Me._Local6 = value
                Me.SendPropertyChanged("Local6")
                Me.OnLocal6Changed
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local7", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Local7() As String
        Get
            Return Me._Local7
        End Get
        Set
            If (String.Equals(Me._Local7, value) = False) Then
                Me.OnLocal7Changing(value)
                Me.SendPropertyChanging
                Me._Local7 = value
                Me.SendPropertyChanged("Local7")
                Me.OnLocal7Changed
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local8", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Local8() As String
        Get
            Return Me._Local8
        End Get
        Set
            If (String.Equals(Me._Local8, value) = False) Then
                Me.OnLocal8Changing(value)
                Me.SendPropertyChanging
                Me._Local8 = value
                Me.SendPropertyChanged("Local8")
                Me.OnLocal8Changed
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local9", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Local9() As String
        Get
            Return Me._Local9
        End Get
        Set
            If (String.Equals(Me._Local9, value) = False) Then
                Me.OnLocal9Changing(value)
                Me.SendPropertyChanging
                Me._Local9 = value
                Me.SendPropertyChanged("Local9")
                Me.OnLocal9Changed
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local10", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Local10() As String
        Get
            Return Me._Local10
        End Get
        Set
            If (String.Equals(Me._Local10, value) = False) Then
                Me.OnLocal10Changing(value)
                Me.SendPropertyChanging
                Me._Local10 = value
                Me.SendPropertyChanged("Local10")
                Me.OnLocal10Changed
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Articulos")>
Partial Public Class T_Articulos
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Articulo As Decimal

    Private _Descripcion As String

    Private _Unidad As String

    Private _Familia As Decimal

    Private _SubFamilia As Decimal

    Private _Marca As String

    Private _Cliente As Decimal

    Private _SKU As String

    Private _Modelo As String

    Private _Costo As Decimal

    Private _PVenta As Decimal

    Private _Oferta As Boolean

    Private _MaxDescuento As Decimal

    Private _ActivoFijo As Boolean

    Private _Ano As Decimal

    Private _Grupo As String

    Private _Categoria As String

    Private _Destacado As Boolean

    Private _DestacadoComunidad As Boolean

    Private _OfertaTemporada As Boolean

    Private _Estado As String

    Private _iIVA As Decimal

    Private _iEXE As Boolean

    Private _iMIN As Decimal

    Private _iBEB As Decimal

    Private _iVIN As Decimal

    Private _iCER As Decimal

    Private _iLIC As Decimal

    Private _iCAR As Decimal

    Private _iHAR As Decimal

    Private _iTAB As Decimal

    Private _iFEP As Decimal

    Private _iLOG As Decimal

    Private _iOTRO As Decimal

    Private _DetalleProducto As String

    Private _TipoArticulo As String

    Private _Produccion As Boolean

    Private _VisibleWeb As Boolean

    Private _FechaCreacion As Date

    Private _UsuarioCreacion As String

    Private _FechaModificacion As Date

    Private _UsuarioModificacion As String

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnArticuloChanging(value As Decimal)
    End Sub
    Partial Private Sub OnArticuloChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnUnidadChanging(value As String)
    End Sub
    Partial Private Sub OnUnidadChanged()
    End Sub
    Partial Private Sub OnFamiliaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnFamiliaChanged()
    End Sub
    Partial Private Sub OnSubFamiliaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnSubFamiliaChanged()
    End Sub
    Partial Private Sub OnMarcaChanging(value As String)
    End Sub
    Partial Private Sub OnMarcaChanged()
    End Sub
    Partial Private Sub OnClienteChanging(value As Decimal)
    End Sub
    Partial Private Sub OnClienteChanged()
    End Sub
    Partial Private Sub OnSKUChanging(value As String)
    End Sub
    Partial Private Sub OnSKUChanged()
    End Sub
    Partial Private Sub OnModeloChanging(value As String)
    End Sub
    Partial Private Sub OnModeloChanged()
    End Sub
    Partial Private Sub OnCostoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCostoChanged()
    End Sub
    Partial Private Sub OnPVentaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPVentaChanged()
    End Sub
    Partial Private Sub OnOfertaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOfertaChanged()
    End Sub
    Partial Private Sub OnMaxDescuentoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnMaxDescuentoChanged()
    End Sub
    Partial Private Sub OnActivoFijoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivoFijoChanged()
    End Sub
    Partial Private Sub OnAnoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnAnoChanged()
    End Sub
    Partial Private Sub OnGrupoChanging(value As String)
    End Sub
    Partial Private Sub OnGrupoChanged()
    End Sub
    Partial Private Sub OnCategoriaChanging(value As String)
    End Sub
    Partial Private Sub OnCategoriaChanged()
    End Sub
    Partial Private Sub OnDestacadoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnDestacadoChanged()
    End Sub
    Partial Private Sub OnDestacadoComunidadChanging(value As Boolean)
    End Sub
    Partial Private Sub OnDestacadoComunidadChanged()
    End Sub
    Partial Private Sub OnOfertaTemporadaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOfertaTemporadaChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OniIVAChanging(value As Decimal)
    End Sub
    Partial Private Sub OniIVAChanged()
    End Sub
    Partial Private Sub OniEXEChanging(value As Boolean)
    End Sub
    Partial Private Sub OniEXEChanged()
    End Sub
    Partial Private Sub OniMINChanging(value As Decimal)
    End Sub
    Partial Private Sub OniMINChanged()
    End Sub
    Partial Private Sub OniBEBChanging(value As Decimal)
    End Sub
    Partial Private Sub OniBEBChanged()
    End Sub
    Partial Private Sub OniVINChanging(value As Decimal)
    End Sub
    Partial Private Sub OniVINChanged()
    End Sub
    Partial Private Sub OniCERChanging(value As Decimal)
    End Sub
    Partial Private Sub OniCERChanged()
    End Sub
    Partial Private Sub OniLICChanging(value As Decimal)
    End Sub
    Partial Private Sub OniLICChanged()
    End Sub
    Partial Private Sub OniCARChanging(value As Decimal)
    End Sub
    Partial Private Sub OniCARChanged()
    End Sub
    Partial Private Sub OniHARChanging(value As Decimal)
    End Sub
    Partial Private Sub OniHARChanged()
    End Sub
    Partial Private Sub OniTABChanging(value As Decimal)
    End Sub
    Partial Private Sub OniTABChanged()
    End Sub
    Partial Private Sub OniFEPChanging(value As Decimal)
    End Sub
    Partial Private Sub OniFEPChanged()
    End Sub
    Partial Private Sub OniLOGChanging(value As Decimal)
    End Sub
    Partial Private Sub OniLOGChanged()
    End Sub
    Partial Private Sub OniOTROChanging(value As Decimal)
    End Sub
    Partial Private Sub OniOTROChanged()
    End Sub
    Partial Private Sub OnDetalleProductoChanging(value As String)
    End Sub
    Partial Private Sub OnDetalleProductoChanged()
    End Sub
    Partial Private Sub OnTipoArticuloChanging(value As String)
    End Sub
    Partial Private Sub OnTipoArticuloChanged()
    End Sub
    Partial Private Sub OnProduccionChanging(value As Boolean)
    End Sub
    Partial Private Sub OnProduccionChanged()
    End Sub
    Partial Private Sub OnVisibleWebChanging(value As Boolean)
    End Sub
    Partial Private Sub OnVisibleWebChanged()
    End Sub
    Partial Private Sub OnFechaCreacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaCreacionChanged()
    End Sub
    Partial Private Sub OnUsuarioCreacionChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioCreacionChanged()
    End Sub
    Partial Private Sub OnFechaModificacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaModificacionChanged()
    End Sub
    Partial Private Sub OnUsuarioModificacionChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioModificacionChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Articulo", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=True)>
    Public Property Articulo() As Decimal
        Get
            Return Me._Articulo
        End Get
        Set
            If ((Me._Articulo = value) _
                        = False) Then
                Me.OnArticuloChanging(value)
                Me.SendPropertyChanging
                Me._Articulo = value
                Me.SendPropertyChanged("Articulo")
                Me.OnArticuloChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="VarChar(200) NOT NULL", CanBeNull:=False)>
    Public Property Descripcion() As String
        Get
            Return Me._Descripcion
        End Get
        Set
            If (String.Equals(Me._Descripcion, value) = False) Then
                Me.OnDescripcionChanging(value)
                Me.SendPropertyChanging
                Me._Descripcion = value
                Me.SendPropertyChanged("Descripcion")
                Me.OnDescripcionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Unidad", DbType:="VarChar(2) NOT NULL", CanBeNull:=False)>
    Public Property Unidad() As String
        Get
            Return Me._Unidad
        End Get
        Set
            If (String.Equals(Me._Unidad, value) = False) Then
                Me.OnUnidadChanging(value)
                Me.SendPropertyChanging
                Me._Unidad = value
                Me.SendPropertyChanged("Unidad")
                Me.OnUnidadChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Familia", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Familia() As Decimal
        Get
            Return Me._Familia
        End Get
        Set
            If ((Me._Familia = value) _
                        = False) Then
                Me.OnFamiliaChanging(value)
                Me.SendPropertyChanging
                Me._Familia = value
                Me.SendPropertyChanged("Familia")
                Me.OnFamiliaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubFamilia", DbType:="Decimal(18,0) NOT NULL")>
    Public Property SubFamilia() As Decimal
        Get
            Return Me._SubFamilia
        End Get
        Set
            If ((Me._SubFamilia = value) _
                        = False) Then
                Me.OnSubFamiliaChanging(value)
                Me.SendPropertyChanging
                Me._SubFamilia = value
                Me.SendPropertyChanged("SubFamilia")
                Me.OnSubFamiliaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Marca", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Marca() As String
        Get
            Return Me._Marca
        End Get
        Set
            If (String.Equals(Me._Marca, value) = False) Then
                Me.OnMarcaChanging(value)
                Me.SendPropertyChanging
                Me._Marca = value
                Me.SendPropertyChanged("Marca")
                Me.OnMarcaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cliente", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Cliente() As Decimal
        Get
            Return Me._Cliente
        End Get
        Set
            If ((Me._Cliente = value) _
                        = False) Then
                Me.OnClienteChanging(value)
                Me.SendPropertyChanging
                Me._Cliente = value
                Me.SendPropertyChanged("Cliente")
                Me.OnClienteChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SKU", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property SKU() As String
        Get
            Return Me._SKU
        End Get
        Set
            If (String.Equals(Me._SKU, value) = False) Then
                Me.OnSKUChanging(value)
                Me.SendPropertyChanging
                Me._SKU = value
                Me.SendPropertyChanged("SKU")
                Me.OnSKUChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Modelo", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Modelo() As String
        Get
            Return Me._Modelo
        End Get
        Set
            If (String.Equals(Me._Modelo, value) = False) Then
                Me.OnModeloChanging(value)
                Me.SendPropertyChanging
                Me._Modelo = value
                Me.SendPropertyChanged("Modelo")
                Me.OnModeloChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Costo", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Costo() As Decimal
        Get
            Return Me._Costo
        End Get
        Set
            If ((Me._Costo = value) _
                        = False) Then
                Me.OnCostoChanging(value)
                Me.SendPropertyChanging
                Me._Costo = value
                Me.SendPropertyChanged("Costo")
                Me.OnCostoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVenta", DbType:="Decimal(18,0) NOT NULL")>
    Public Property PVenta() As Decimal
        Get
            Return Me._PVenta
        End Get
        Set
            If ((Me._PVenta = value) _
                        = False) Then
                Me.OnPVentaChanging(value)
                Me.SendPropertyChanging
                Me._PVenta = value
                Me.SendPropertyChanged("PVenta")
                Me.OnPVentaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Oferta", DbType:="Bit NOT NULL")>
    Public Property Oferta() As Boolean
        Get
            Return Me._Oferta
        End Get
        Set
            If ((Me._Oferta = value) _
                        = False) Then
                Me.OnOfertaChanging(value)
                Me.SendPropertyChanging
                Me._Oferta = value
                Me.SendPropertyChanged("Oferta")
                Me.OnOfertaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaxDescuento", DbType:="Decimal(18,0) NOT NULL")>
    Public Property MaxDescuento() As Decimal
        Get
            Return Me._MaxDescuento
        End Get
        Set
            If ((Me._MaxDescuento = value) _
                        = False) Then
                Me.OnMaxDescuentoChanging(value)
                Me.SendPropertyChanging
                Me._MaxDescuento = value
                Me.SendPropertyChanged("MaxDescuento")
                Me.OnMaxDescuentoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ActivoFijo", DbType:="Bit NOT NULL")>
    Public Property ActivoFijo() As Boolean
        Get
            Return Me._ActivoFijo
        End Get
        Set
            If ((Me._ActivoFijo = value) _
                        = False) Then
                Me.OnActivoFijoChanging(value)
                Me.SendPropertyChanging
                Me._ActivoFijo = value
                Me.SendPropertyChanged("ActivoFijo")
                Me.OnActivoFijoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ano", DbType:="Decimal(4,0) NOT NULL")>
    Public Property Ano() As Decimal
        Get
            Return Me._Ano
        End Get
        Set
            If ((Me._Ano = value) _
                        = False) Then
                Me.OnAnoChanging(value)
                Me.SendPropertyChanging
                Me._Ano = value
                Me.SendPropertyChanged("Ano")
                Me.OnAnoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Grupo", DbType:="VarChar(100) NOT NULL", CanBeNull:=False)>
    Public Property Grupo() As String
        Get
            Return Me._Grupo
        End Get
        Set
            If (String.Equals(Me._Grupo, value) = False) Then
                Me.OnGrupoChanging(value)
                Me.SendPropertyChanging
                Me._Grupo = value
                Me.SendPropertyChanged("Grupo")
                Me.OnGrupoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Categoria", DbType:="VarChar(100) NOT NULL", CanBeNull:=False)>
    Public Property Categoria() As String
        Get
            Return Me._Categoria
        End Get
        Set
            If (String.Equals(Me._Categoria, value) = False) Then
                Me.OnCategoriaChanging(value)
                Me.SendPropertyChanging
                Me._Categoria = value
                Me.SendPropertyChanged("Categoria")
                Me.OnCategoriaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Destacado", DbType:="Bit NOT NULL")>
    Public Property Destacado() As Boolean
        Get
            Return Me._Destacado
        End Get
        Set
            If ((Me._Destacado = value) _
                        = False) Then
                Me.OnDestacadoChanging(value)
                Me.SendPropertyChanging
                Me._Destacado = value
                Me.SendPropertyChanged("Destacado")
                Me.OnDestacadoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DestacadoComunidad", DbType:="Bit NOT NULL")>
    Public Property DestacadoComunidad() As Boolean
        Get
            Return Me._DestacadoComunidad
        End Get
        Set
            If ((Me._DestacadoComunidad = value) _
                        = False) Then
                Me.OnDestacadoComunidadChanging(value)
                Me.SendPropertyChanging
                Me._DestacadoComunidad = value
                Me.SendPropertyChanged("DestacadoComunidad")
                Me.OnDestacadoComunidadChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OfertaTemporada", DbType:="Bit NOT NULL")>
    Public Property OfertaTemporada() As Boolean
        Get
            Return Me._OfertaTemporada
        End Get
        Set
            If ((Me._OfertaTemporada = value) _
                        = False) Then
                Me.OnOfertaTemporadaChanging(value)
                Me.SendPropertyChanging
                Me._OfertaTemporada = value
                Me.SendPropertyChanged("OfertaTemporada")
                Me.OnOfertaTemporadaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Estado", DbType:="VarChar(1) NOT NULL", CanBeNull:=False)>
    Public Property Estado() As String
        Get
            Return Me._Estado
        End Get
        Set
            If (String.Equals(Me._Estado, value) = False) Then
                Me.OnEstadoChanging(value)
                Me.SendPropertyChanging
                Me._Estado = value
                Me.SendPropertyChanged("Estado")
                Me.OnEstadoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iIVA", DbType:="Decimal(18,2) NOT NULL")>
    Public Property iIVA() As Decimal
        Get
            Return Me._iIVA
        End Get
        Set
            If ((Me._iIVA = value) _
                        = False) Then
                Me.OniIVAChanging(value)
                Me.SendPropertyChanging
                Me._iIVA = value
                Me.SendPropertyChanged("iIVA")
                Me.OniIVAChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iEXE", DbType:="Bit NOT NULL")>
    Public Property iEXE() As Boolean
        Get
            Return Me._iEXE
        End Get
        Set
            If ((Me._iEXE = value) _
                        = False) Then
                Me.OniEXEChanging(value)
                Me.SendPropertyChanging
                Me._iEXE = value
                Me.SendPropertyChanged("iEXE")
                Me.OniEXEChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iMIN", DbType:="Decimal(18,2) NOT NULL")>
    Public Property iMIN() As Decimal
        Get
            Return Me._iMIN
        End Get
        Set
            If ((Me._iMIN = value) _
                        = False) Then
                Me.OniMINChanging(value)
                Me.SendPropertyChanging
                Me._iMIN = value
                Me.SendPropertyChanged("iMIN")
                Me.OniMINChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iBEB", DbType:="Decimal(18,2) NOT NULL")>
    Public Property iBEB() As Decimal
        Get
            Return Me._iBEB
        End Get
        Set
            If ((Me._iBEB = value) _
                        = False) Then
                Me.OniBEBChanging(value)
                Me.SendPropertyChanging
                Me._iBEB = value
                Me.SendPropertyChanged("iBEB")
                Me.OniBEBChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iVIN", DbType:="Decimal(18,2) NOT NULL")>
    Public Property iVIN() As Decimal
        Get
            Return Me._iVIN
        End Get
        Set
            If ((Me._iVIN = value) _
                        = False) Then
                Me.OniVINChanging(value)
                Me.SendPropertyChanging
                Me._iVIN = value
                Me.SendPropertyChanged("iVIN")
                Me.OniVINChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iCER", DbType:="Decimal(18,2) NOT NULL")>
    Public Property iCER() As Decimal
        Get
            Return Me._iCER
        End Get
        Set
            If ((Me._iCER = value) _
                        = False) Then
                Me.OniCERChanging(value)
                Me.SendPropertyChanging
                Me._iCER = value
                Me.SendPropertyChanged("iCER")
                Me.OniCERChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iLIC", DbType:="Decimal(18,2) NOT NULL")>
    Public Property iLIC() As Decimal
        Get
            Return Me._iLIC
        End Get
        Set
            If ((Me._iLIC = value) _
                        = False) Then
                Me.OniLICChanging(value)
                Me.SendPropertyChanging
                Me._iLIC = value
                Me.SendPropertyChanged("iLIC")
                Me.OniLICChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iCAR", DbType:="Decimal(18,2) NOT NULL")>
    Public Property iCAR() As Decimal
        Get
            Return Me._iCAR
        End Get
        Set
            If ((Me._iCAR = value) _
                        = False) Then
                Me.OniCARChanging(value)
                Me.SendPropertyChanging
                Me._iCAR = value
                Me.SendPropertyChanged("iCAR")
                Me.OniCARChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iHAR", DbType:="Decimal(18,2) NOT NULL")>
    Public Property iHAR() As Decimal
        Get
            Return Me._iHAR
        End Get
        Set
            If ((Me._iHAR = value) _
                        = False) Then
                Me.OniHARChanging(value)
                Me.SendPropertyChanging
                Me._iHAR = value
                Me.SendPropertyChanged("iHAR")
                Me.OniHARChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iTAB", DbType:="Decimal(18,2) NOT NULL")>
    Public Property iTAB() As Decimal
        Get
            Return Me._iTAB
        End Get
        Set
            If ((Me._iTAB = value) _
                        = False) Then
                Me.OniTABChanging(value)
                Me.SendPropertyChanging
                Me._iTAB = value
                Me.SendPropertyChanged("iTAB")
                Me.OniTABChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iFEP", DbType:="Decimal(18,2) NOT NULL")>
    Public Property iFEP() As Decimal
        Get
            Return Me._iFEP
        End Get
        Set
            If ((Me._iFEP = value) _
                        = False) Then
                Me.OniFEPChanging(value)
                Me.SendPropertyChanging
                Me._iFEP = value
                Me.SendPropertyChanged("iFEP")
                Me.OniFEPChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iLOG", DbType:="Decimal(18,2) NOT NULL")>
    Public Property iLOG() As Decimal
        Get
            Return Me._iLOG
        End Get
        Set
            If ((Me._iLOG = value) _
                        = False) Then
                Me.OniLOGChanging(value)
                Me.SendPropertyChanging
                Me._iLOG = value
                Me.SendPropertyChanged("iLOG")
                Me.OniLOGChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iOTRO", DbType:="Decimal(18,2) NOT NULL")>
    Public Property iOTRO() As Decimal
        Get
            Return Me._iOTRO
        End Get
        Set
            If ((Me._iOTRO = value) _
                        = False) Then
                Me.OniOTROChanging(value)
                Me.SendPropertyChanging
                Me._iOTRO = value
                Me.SendPropertyChanged("iOTRO")
                Me.OniOTROChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DetalleProducto", DbType:="VarChar(1000) NOT NULL", CanBeNull:=False)>
    Public Property DetalleProducto() As String
        Get
            Return Me._DetalleProducto
        End Get
        Set
            If (String.Equals(Me._DetalleProducto, value) = False) Then
                Me.OnDetalleProductoChanging(value)
                Me.SendPropertyChanging
                Me._DetalleProducto = value
                Me.SendPropertyChanged("DetalleProducto")
                Me.OnDetalleProductoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoArticulo", DbType:="VarChar(1) NOT NULL", CanBeNull:=False)>
    Public Property TipoArticulo() As String
        Get
            Return Me._TipoArticulo
        End Get
        Set
            If (String.Equals(Me._TipoArticulo, value) = False) Then
                Me.OnTipoArticuloChanging(value)
                Me.SendPropertyChanging
                Me._TipoArticulo = value
                Me.SendPropertyChanged("TipoArticulo")
                Me.OnTipoArticuloChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Produccion", DbType:="Bit NOT NULL")>
    Public Property Produccion() As Boolean
        Get
            Return Me._Produccion
        End Get
        Set
            If ((Me._Produccion = value) _
                        = False) Then
                Me.OnProduccionChanging(value)
                Me.SendPropertyChanging
                Me._Produccion = value
                Me.SendPropertyChanged("Produccion")
                Me.OnProduccionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VisibleWeb", DbType:="Bit NOT NULL")>
    Public Property VisibleWeb() As Boolean
        Get
            Return Me._VisibleWeb
        End Get
        Set
            If ((Me._VisibleWeb = value) _
                        = False) Then
                Me.OnVisibleWebChanging(value)
                Me.SendPropertyChanging
                Me._VisibleWeb = value
                Me.SendPropertyChanged("VisibleWeb")
                Me.OnVisibleWebChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaCreacion", DbType:="DateTime NOT NULL")>
    Public Property FechaCreacion() As Date
        Get
            Return Me._FechaCreacion
        End Get
        Set
            If ((Me._FechaCreacion = value) _
                        = False) Then
                Me.OnFechaCreacionChanging(value)
                Me.SendPropertyChanging
                Me._FechaCreacion = value
                Me.SendPropertyChanged("FechaCreacion")
                Me.OnFechaCreacionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UsuarioCreacion", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property UsuarioCreacion() As String
        Get
            Return Me._UsuarioCreacion
        End Get
        Set
            If (String.Equals(Me._UsuarioCreacion, value) = False) Then
                Me.OnUsuarioCreacionChanging(value)
                Me.SendPropertyChanging
                Me._UsuarioCreacion = value
                Me.SendPropertyChanged("UsuarioCreacion")
                Me.OnUsuarioCreacionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaModificacion", DbType:="DateTime NOT NULL")>
    Public Property FechaModificacion() As Date
        Get
            Return Me._FechaModificacion
        End Get
        Set
            If ((Me._FechaModificacion = value) _
                        = False) Then
                Me.OnFechaModificacionChanging(value)
                Me.SendPropertyChanging
                Me._FechaModificacion = value
                Me.SendPropertyChanged("FechaModificacion")
                Me.OnFechaModificacionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UsuarioModificacion", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property UsuarioModificacion() As String
        Get
            Return Me._UsuarioModificacion
        End Get
        Set
            If (String.Equals(Me._UsuarioModificacion, value) = False) Then
                Me.OnUsuarioModificacionChanging(value)
                Me.SendPropertyChanging
                Me._UsuarioModificacion = value
                Me.SendPropertyChanged("UsuarioModificacion")
                Me.OnUsuarioModificacionChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.BusquedaArticulo")>
Partial Public Class T_BusquedaArticulo

    Private _Articulo As Decimal

    Private _SKU As String

    Private _Descripcion As String

    Private _Familia As Decimal

    Private _PVenta As Decimal

    Private _Stock As Double

    Private _Local As Decimal

    Private _StockMin As Double

    Public Sub New()
        MyBase.New
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Articulo", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Articulo() As Decimal
        Get
            Return Me._Articulo
        End Get
        Set
            If ((Me._Articulo = value) _
                        = False) Then
                Me._Articulo = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SKU", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property SKU() As String
        Get
            Return Me._SKU
        End Get
        Set
            If (String.Equals(Me._SKU, value) = False) Then
                Me._SKU = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="VarChar(200) NOT NULL", CanBeNull:=False)>
    Public Property Descripcion() As String
        Get
            Return Me._Descripcion
        End Get
        Set
            If (String.Equals(Me._Descripcion, value) = False) Then
                Me._Descripcion = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Familia", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Familia() As Decimal
        Get
            Return Me._Familia
        End Get
        Set
            If ((Me._Familia = value) _
                        = False) Then
                Me._Familia = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVenta", DbType:="Decimal(18,0) NOT NULL")>
    Public Property PVenta() As Decimal
        Get
            Return Me._PVenta
        End Get
        Set
            If ((Me._PVenta = value) _
                        = False) Then
                Me._PVenta = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Stock", DbType:="Float")>
    Public Property Stock() As Double
        Get
            Return Me._Stock
        End Get
        Set
            If ((Me._Stock = value) _
                        = False) Then
                Me._Stock = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Local() As Decimal
        Get
            Return Me._Local
        End Get
        Set
            If ((Me._Local = value) _
                        = False) Then
                Me._Local = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StockMin", DbType:="Float NOT NULL")>
    Public Property StockMin() As Double
        Get
            Return Me._StockMin
        End Get
        Set
            If ((Me._StockMin = value) _
                        = False) Then
                Me._StockMin = value
            End If
        End Set
    End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.BuscadorAutocompletar")>
Partial Public Class T_BuscadorAutocompletar

    Private _Articulo As Decimal

    Private _Descripcion As String

    Private _SKU As String

    Private _Barra As String

    Private _TipoArticulo As String

    Public Sub New()
        MyBase.New
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Articulo", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Articulo() As Decimal
        Get
            Return Me._Articulo
        End Get
        Set
            If ((Me._Articulo = value) _
                        = False) Then
                Me._Articulo = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="VarChar(200) NOT NULL", CanBeNull:=False)>
    Public Property Descripcion() As String
        Get
            Return Me._Descripcion
        End Get
        Set
            If (String.Equals(Me._Descripcion, value) = False) Then
                Me._Descripcion = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SKU", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property SKU() As String
        Get
            Return Me._SKU
        End Get
        Set
            If (String.Equals(Me._SKU, value) = False) Then
                Me._SKU = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Barra", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Barra() As String
        Get
            Return Me._Barra
        End Get
        Set
            If (String.Equals(Me._Barra, value) = False) Then
                Me._Barra = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoArticulo", DbType:="VarChar(1) NOT NULL", CanBeNull:=False)>
    Public Property TipoArticulo() As String
        Get
            Return Me._TipoArticulo
        End Get
        Set
            If (String.Equals(Me._TipoArticulo, value) = False) Then
                Me._TipoArticulo = value
            End If
        End Set
    End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ListadoStockLocal")>
Partial Public Class T_ListadoStockLocal

    Private _Articulo As Decimal

    Private _SKU As String

    Private _Descripcion As String

    Private _PVenta As Decimal

    Private _Stock As Double

    Private _Local As Decimal

    Private _StockMin As Double

    Private _Familia As Decimal

    Private _SubFamilia As Decimal

    Private _Costo As Decimal

    Public Sub New()
        MyBase.New
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Articulo", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Articulo() As Decimal
        Get
            Return Me._Articulo
        End Get
        Set
            If ((Me._Articulo = value) _
                        = False) Then
                Me._Articulo = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SKU", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property SKU() As String
        Get
            Return Me._SKU
        End Get
        Set
            If (String.Equals(Me._SKU, value) = False) Then
                Me._SKU = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="VarChar(200) NOT NULL", CanBeNull:=False)>
    Public Property Descripcion() As String
        Get
            Return Me._Descripcion
        End Get
        Set
            If (String.Equals(Me._Descripcion, value) = False) Then
                Me._Descripcion = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVenta", DbType:="Decimal(18,0) NOT NULL")>
    Public Property PVenta() As Decimal
        Get
            Return Me._PVenta
        End Get
        Set
            If ((Me._PVenta = value) _
                        = False) Then
                Me._PVenta = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Stock", DbType:="Float")>
    Public Property Stock() As Double
        Get
            Return Me._Stock
        End Get
        Set
            If ((Me._Stock = value) _
                        = False) Then
                Me._Stock = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Local() As Decimal
        Get
            Return Me._Local
        End Get
        Set
            If ((Me._Local = value) _
                        = False) Then
                Me._Local = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StockMin", DbType:="Float NOT NULL")>
    Public Property StockMin() As Double
        Get
            Return Me._StockMin
        End Get
        Set
            If ((Me._StockMin = value) _
                        = False) Then
                Me._StockMin = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Familia", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Familia() As Decimal
        Get
            Return Me._Familia
        End Get
        Set
            If ((Me._Familia = value) _
                        = False) Then
                Me._Familia = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubFamilia", DbType:="Decimal(18,0) NOT NULL")>
    Public Property SubFamilia() As Decimal
        Get
            Return Me._SubFamilia
        End Get
        Set
            If ((Me._SubFamilia = value) _
                        = False) Then
                Me._SubFamilia = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Costo", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Costo() As Decimal
        Get
            Return Me._Costo
        End Get
        Set
            If ((Me._Costo = value) _
                        = False) Then
                Me._Costo = value
            End If
        End Set
    End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ListadoMovimientosEncabezado")>
Partial Public Class T_ListadoMovimientosEncabezado

    Private _Movimiento As Decimal

    Private _Fecha As Date

    Private _TipoMov As String

    Private _DescTipo As String

    Private _Local As Decimal

    Private _NombreLocal As String

    Private _Bodega As Decimal

    Private _NombreBodega As String

    Private _Usuario As String

    Private _NombreUsuario As String

    Private _Responsable As String

    Private _NombreResponsable As String

    Private _TipoDoc As String

    Private _DescTipoDoc As String

    Private _NumDoc As Decimal

    Public Sub New()
        MyBase.New
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Movimiento", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Movimiento() As Decimal
        Get
            Return Me._Movimiento
        End Get
        Set
            If ((Me._Movimiento = value) _
                        = False) Then
                Me._Movimiento = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="DateTime NOT NULL")>
    Public Property Fecha() As Date
        Get
            Return Me._Fecha
        End Get
        Set
            If ((Me._Fecha = value) _
                        = False) Then
                Me._Fecha = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoMov", DbType:="VarChar(1) NOT NULL", CanBeNull:=False)>
    Public Property TipoMov() As String
        Get
            Return Me._TipoMov
        End Get
        Set
            If (String.Equals(Me._TipoMov, value) = False) Then
                Me._TipoMov = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescTipo", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property DescTipo() As String
        Get
            Return Me._DescTipo
        End Get
        Set
            If (String.Equals(Me._DescTipo, value) = False) Then
                Me._DescTipo = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Local() As Decimal
        Get
            Return Me._Local
        End Get
        Set
            If ((Me._Local = value) _
                        = False) Then
                Me._Local = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreLocal", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property NombreLocal() As String
        Get
            Return Me._NombreLocal
        End Get
        Set
            If (String.Equals(Me._NombreLocal, value) = False) Then
                Me._NombreLocal = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bodega", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Bodega() As Decimal
        Get
            Return Me._Bodega
        End Get
        Set
            If ((Me._Bodega = value) _
                        = False) Then
                Me._Bodega = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreBodega", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property NombreBodega() As String
        Get
            Return Me._NombreBodega
        End Get
        Set
            If (String.Equals(Me._NombreBodega, value) = False) Then
                Me._NombreBodega = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="VarChar(3) NOT NULL", CanBeNull:=False)>
    Public Property Usuario() As String
        Get
            Return Me._Usuario
        End Get
        Set
            If (String.Equals(Me._Usuario, value) = False) Then
                Me._Usuario = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreUsuario", DbType:="VarChar(100) NOT NULL", CanBeNull:=False)>
    Public Property NombreUsuario() As String
        Get
            Return Me._NombreUsuario
        End Get
        Set
            If (String.Equals(Me._NombreUsuario, value) = False) Then
                Me._NombreUsuario = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Responsable", DbType:="VarChar(3) NOT NULL", CanBeNull:=False)>
    Public Property Responsable() As String
        Get
            Return Me._Responsable
        End Get
        Set
            If (String.Equals(Me._Responsable, value) = False) Then
                Me._Responsable = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreResponsable", DbType:="VarChar(100) NOT NULL", CanBeNull:=False)>
    Public Property NombreResponsable() As String
        Get
            Return Me._NombreResponsable
        End Get
        Set
            If (String.Equals(Me._NombreResponsable, value) = False) Then
                Me._NombreResponsable = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDoc", DbType:="VarChar(2) NOT NULL", CanBeNull:=False)>
    Public Property TipoDoc() As String
        Get
            Return Me._TipoDoc
        End Get
        Set
            If (String.Equals(Me._TipoDoc, value) = False) Then
                Me._TipoDoc = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescTipoDoc", DbType:="VarChar(30) NOT NULL", CanBeNull:=False)>
    Public Property DescTipoDoc() As String
        Get
            Return Me._DescTipoDoc
        End Get
        Set
            If (String.Equals(Me._DescTipoDoc, value) = False) Then
                Me._DescTipoDoc = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumDoc", DbType:="Decimal(18,0) NOT NULL")>
    Public Property NumDoc() As Decimal
        Get
            Return Me._NumDoc
        End Get
        Set
            If ((Me._NumDoc = value) _
                        = False) Then
                Me._NumDoc = value
            End If
        End Set
    End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ListadoStockBodega")>
Partial Public Class T_ListadoStockBodega

    Private _Articulo As Decimal

    Private _SKU As String

    Private _Descripcion As String

    Private _PVenta As Decimal

    Private _Bodega As Decimal

    Private _Stock As Double

    Private _StockMin As Double

    Private _Familia As Decimal

    Private _SubFamilia As Decimal

    Private _Costo As Decimal

    Public Sub New()
        MyBase.New
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Articulo", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Articulo() As Decimal
        Get
            Return Me._Articulo
        End Get
        Set
            If ((Me._Articulo = value) _
                        = False) Then
                Me._Articulo = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SKU", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property SKU() As String
        Get
            Return Me._SKU
        End Get
        Set
            If (String.Equals(Me._SKU, value) = False) Then
                Me._SKU = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="VarChar(200) NOT NULL", CanBeNull:=False)>
    Public Property Descripcion() As String
        Get
            Return Me._Descripcion
        End Get
        Set
            If (String.Equals(Me._Descripcion, value) = False) Then
                Me._Descripcion = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVenta", DbType:="Decimal(18,0) NOT NULL")>
    Public Property PVenta() As Decimal
        Get
            Return Me._PVenta
        End Get
        Set
            If ((Me._PVenta = value) _
                        = False) Then
                Me._PVenta = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bodega", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Bodega() As Decimal
        Get
            Return Me._Bodega
        End Get
        Set
            If ((Me._Bodega = value) _
                        = False) Then
                Me._Bodega = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Stock", DbType:="Float NOT NULL")>
    Public Property Stock() As Double
        Get
            Return Me._Stock
        End Get
        Set
            If ((Me._Stock = value) _
                        = False) Then
                Me._Stock = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StockMin", DbType:="Float NOT NULL")>
    Public Property StockMin() As Double
        Get
            Return Me._StockMin
        End Get
        Set
            If ((Me._StockMin = value) _
                        = False) Then
                Me._StockMin = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Familia", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Familia() As Decimal
        Get
            Return Me._Familia
        End Get
        Set
            If ((Me._Familia = value) _
                        = False) Then
                Me._Familia = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubFamilia", DbType:="Decimal(18,0) NOT NULL")>
    Public Property SubFamilia() As Decimal
        Get
            Return Me._SubFamilia
        End Get
        Set
            If ((Me._SubFamilia = value) _
                        = False) Then
                Me._SubFamilia = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Costo", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Costo() As Decimal
        Get
            Return Me._Costo
        End Get
        Set
            If ((Me._Costo = value) _
                        = False) Then
                Me._Costo = value
            End If
        End Set
    End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Clientes")>
Partial Public Class T_Clientes
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Cliente As Decimal

    Private _Nombre As String

    Private _Rut As String

    Private _Fantasia As String

    Private _Direccion As String

    Private _Ciudad As String

    Private _Comuna As String

    Private _Giro As String

    Private _Telefonos As String

    Private _Contacto As String

    Private _Tipo As String

    Private _Email As String

    Private _Proveedor As Boolean

    Private _Comision As Boolean

    Private _Clave As Char

    Private _MaxDescuento As Decimal

    Private _CupoMax As Decimal

    Private _Vencimiento As Decimal

    Private _Estado As Char

    Private _FPago As String

    Private _Glosa As String

    Private _MaxDescuentoServicios As Decimal

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnClienteChanging(value As Decimal)
    End Sub
    Partial Private Sub OnClienteChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnRutChanging(value As String)
    End Sub
    Partial Private Sub OnRutChanged()
    End Sub
    Partial Private Sub OnFantasiaChanging(value As String)
    End Sub
    Partial Private Sub OnFantasiaChanged()
    End Sub
    Partial Private Sub OnDireccionChanging(value As String)
    End Sub
    Partial Private Sub OnDireccionChanged()
    End Sub
    Partial Private Sub OnCiudadChanging(value As String)
    End Sub
    Partial Private Sub OnCiudadChanged()
    End Sub
    Partial Private Sub OnComunaChanging(value As String)
    End Sub
    Partial Private Sub OnComunaChanged()
    End Sub
    Partial Private Sub OnGiroChanging(value As String)
    End Sub
    Partial Private Sub OnGiroChanged()
    End Sub
    Partial Private Sub OnTelefonosChanging(value As String)
    End Sub
    Partial Private Sub OnTelefonosChanged()
    End Sub
    Partial Private Sub OnContactoChanging(value As String)
    End Sub
    Partial Private Sub OnContactoChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnProveedorChanging(value As Boolean)
    End Sub
    Partial Private Sub OnProveedorChanged()
    End Sub
    Partial Private Sub OnComisionChanging(value As Boolean)
    End Sub
    Partial Private Sub OnComisionChanged()
    End Sub
    Partial Private Sub OnClaveChanging(value As Char)
    End Sub
    Partial Private Sub OnClaveChanged()
    End Sub
    Partial Private Sub OnMaxDescuentoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnMaxDescuentoChanged()
    End Sub
    Partial Private Sub OnCupoMaxChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCupoMaxChanged()
    End Sub
    Partial Private Sub OnVencimientoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnVencimientoChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As Char)
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnFPagoChanging(value As String)
    End Sub
    Partial Private Sub OnFPagoChanged()
    End Sub
    Partial Private Sub OnGlosaChanging(value As String)
    End Sub
    Partial Private Sub OnGlosaChanged()
    End Sub
    Partial Private Sub OnMaxDescuentoServiciosChanging(value As Decimal)
    End Sub
    Partial Private Sub OnMaxDescuentoServiciosChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cliente", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=True)>
    Public Property Cliente() As Decimal
        Get
            Return Me._Cliente
        End Get
        Set
            If ((Me._Cliente = value) _
                        = False) Then
                Me.OnClienteChanging(value)
                Me.SendPropertyChanging
                Me._Cliente = value
                Me.SendPropertyChanged("Cliente")
                Me.OnClienteChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="VarChar(200) NOT NULL", CanBeNull:=False)>
    Public Property Nombre() As String
        Get
            Return Me._Nombre
        End Get
        Set
            If (String.Equals(Me._Nombre, value) = False) Then
                Me.OnNombreChanging(value)
                Me.SendPropertyChanging
                Me._Nombre = value
                Me.SendPropertyChanged("Nombre")
                Me.OnNombreChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rut", DbType:="VarChar(12) NOT NULL", CanBeNull:=False)>
    Public Property Rut() As String
        Get
            Return Me._Rut
        End Get
        Set
            If (String.Equals(Me._Rut, value) = False) Then
                Me.OnRutChanging(value)
                Me.SendPropertyChanging
                Me._Rut = value
                Me.SendPropertyChanged("Rut")
                Me.OnRutChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fantasia", DbType:="VarChar(30) NOT NULL", CanBeNull:=False)>
    Public Property Fantasia() As String
        Get
            Return Me._Fantasia
        End Get
        Set
            If (String.Equals(Me._Fantasia, value) = False) Then
                Me.OnFantasiaChanging(value)
                Me.SendPropertyChanging
                Me._Fantasia = value
                Me.SendPropertyChanged("Fantasia")
                Me.OnFantasiaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Direccion", DbType:="VarChar(255) NOT NULL", CanBeNull:=False)>
    Public Property Direccion() As String
        Get
            Return Me._Direccion
        End Get
        Set
            If (String.Equals(Me._Direccion, value) = False) Then
                Me.OnDireccionChanging(value)
                Me.SendPropertyChanging
                Me._Direccion = value
                Me.SendPropertyChanged("Direccion")
                Me.OnDireccionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ciudad", DbType:="VarChar(5) NOT NULL", CanBeNull:=False)>
    Public Property Ciudad() As String
        Get
            Return Me._Ciudad
        End Get
        Set
            If (String.Equals(Me._Ciudad, value) = False) Then
                Me.OnCiudadChanging(value)
                Me.SendPropertyChanging
                Me._Ciudad = value
                Me.SendPropertyChanged("Ciudad")
                Me.OnCiudadChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comuna", DbType:="VarChar(5) NOT NULL", CanBeNull:=False)>
    Public Property Comuna() As String
        Get
            Return Me._Comuna
        End Get
        Set
            If (String.Equals(Me._Comuna, value) = False) Then
                Me.OnComunaChanging(value)
                Me.SendPropertyChanging
                Me._Comuna = value
                Me.SendPropertyChanged("Comuna")
                Me.OnComunaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Giro", DbType:="VarChar(100) NOT NULL", CanBeNull:=False)>
    Public Property Giro() As String
        Get
            Return Me._Giro
        End Get
        Set
            If (String.Equals(Me._Giro, value) = False) Then
                Me.OnGiroChanging(value)
                Me.SendPropertyChanging
                Me._Giro = value
                Me.SendPropertyChanged("Giro")
                Me.OnGiroChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Telefonos", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Telefonos() As String
        Get
            Return Me._Telefonos
        End Get
        Set
            If (String.Equals(Me._Telefonos, value) = False) Then
                Me.OnTelefonosChanging(value)
                Me.SendPropertyChanging
                Me._Telefonos = value
                Me.SendPropertyChanged("Telefonos")
                Me.OnTelefonosChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Contacto", DbType:="VarChar(100) NOT NULL", CanBeNull:=False)>
    Public Property Contacto() As String
        Get
            Return Me._Contacto
        End Get
        Set
            If (String.Equals(Me._Contacto, value) = False) Then
                Me.OnContactoChanging(value)
                Me.SendPropertyChanging
                Me._Contacto = value
                Me.SendPropertyChanged("Contacto")
                Me.OnContactoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tipo", DbType:="VarChar(2) NOT NULL", CanBeNull:=False)>
    Public Property Tipo() As String
        Get
            Return Me._Tipo
        End Get
        Set
            If (String.Equals(Me._Tipo, value) = False) Then
                Me.OnTipoChanging(value)
                Me.SendPropertyChanging
                Me._Tipo = value
                Me.SendPropertyChanged("Tipo")
                Me.OnTipoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(100) NOT NULL", CanBeNull:=False)>
    Public Property Email() As String
        Get
            Return Me._Email
        End Get
        Set
            If (String.Equals(Me._Email, value) = False) Then
                Me.OnEmailChanging(value)
                Me.SendPropertyChanging
                Me._Email = value
                Me.SendPropertyChanged("Email")
                Me.OnEmailChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Proveedor", DbType:="Bit NOT NULL")>
    Public Property Proveedor() As Boolean
        Get
            Return Me._Proveedor
        End Get
        Set
            If ((Me._Proveedor = value) _
                        = False) Then
                Me.OnProveedorChanging(value)
                Me.SendPropertyChanging
                Me._Proveedor = value
                Me.SendPropertyChanged("Proveedor")
                Me.OnProveedorChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comision", DbType:="Bit NOT NULL")>
    Public Property Comision() As Boolean
        Get
            Return Me._Comision
        End Get
        Set
            If ((Me._Comision = value) _
                        = False) Then
                Me.OnComisionChanging(value)
                Me.SendPropertyChanging
                Me._Comision = value
                Me.SendPropertyChanged("Comision")
                Me.OnComisionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Clave", DbType:="Char(1) NOT NULL")>
    Public Property Clave() As Char
        Get
            Return Me._Clave
        End Get
        Set
            If ((Me._Clave = value) _
                        = False) Then
                Me.OnClaveChanging(value)
                Me.SendPropertyChanging
                Me._Clave = value
                Me.SendPropertyChanged("Clave")
                Me.OnClaveChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaxDescuento", DbType:="Float NOT NULL")>
    Public Property MaxDescuento() As Decimal
        Get
            Return Me._MaxDescuento
        End Get
        Set
            If ((Me._MaxDescuento = value) _
                        = False) Then
                Me.OnMaxDescuentoChanging(value)
                Me.SendPropertyChanging
                Me._MaxDescuento = value
                Me.SendPropertyChanged("MaxDescuento")
                Me.OnMaxDescuentoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CupoMax", DbType:="Decimal(18,0) NOT NULL")>
    Public Property CupoMax() As Decimal
        Get
            Return Me._CupoMax
        End Get
        Set
            If ((Me._CupoMax = value) _
                        = False) Then
                Me.OnCupoMaxChanging(value)
                Me.SendPropertyChanging
                Me._CupoMax = value
                Me.SendPropertyChanged("CupoMax")
                Me.OnCupoMaxChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Vencimiento", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Vencimiento() As Decimal
        Get
            Return Me._Vencimiento
        End Get
        Set
            If ((Me._Vencimiento = value) _
                        = False) Then
                Me.OnVencimientoChanging(value)
                Me.SendPropertyChanging
                Me._Vencimiento = value
                Me.SendPropertyChanged("Vencimiento")
                Me.OnVencimientoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Estado", DbType:="Char(1) NOT NULL")>
    Public Property Estado() As Char
        Get
            Return Me._Estado
        End Get
        Set
            If ((Me._Estado = value) _
                        = False) Then
                Me.OnEstadoChanging(value)
                Me.SendPropertyChanging
                Me._Estado = value
                Me.SendPropertyChanged("Estado")
                Me.OnEstadoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FPago", DbType:="VarChar(2) NOT NULL", CanBeNull:=False)>
    Public Property FPago() As String
        Get
            Return Me._FPago
        End Get
        Set
            If (String.Equals(Me._FPago, value) = False) Then
                Me.OnFPagoChanging(value)
                Me.SendPropertyChanging
                Me._FPago = value
                Me.SendPropertyChanged("FPago")
                Me.OnFPagoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Glosa", DbType:="VarChar(1000) NOT NULL", CanBeNull:=False)>
    Public Property Glosa() As String
        Get
            Return Me._Glosa
        End Get
        Set
            If (String.Equals(Me._Glosa, value) = False) Then
                Me.OnGlosaChanging(value)
                Me.SendPropertyChanging
                Me._Glosa = value
                Me.SendPropertyChanged("Glosa")
                Me.OnGlosaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaxDescuentoServicios", DbType:="Float NOT NULL")>
    Public Property MaxDescuentoServicios() As Decimal
        Get
            Return Me._MaxDescuentoServicios
        End Get
        Set
            If ((Me._MaxDescuentoServicios = value) _
                        = False) Then
                Me.OnMaxDescuentoServiciosChanging(value)
                Me.SendPropertyChanging
                Me._MaxDescuentoServicios = value
                Me.SendPropertyChanged("MaxDescuentoServicios")
                Me.OnMaxDescuentoServiciosChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Locales")>
Partial Public Class T_Locales
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Local As Decimal

    Private _NombreLocal As String

    Private _RazonLocal As String

    Private _RutLocal As String

    Private _GiroLocal As String

    Private _DirLocal As String

    Private _Ciudad As String

    Private _Comuna As String

    Private _Cliente As Decimal

    Private _EMailLocal As String

    Private _TelefonosLocal As String

    Private _HorarioLocal As String

    Private _MaxDeuda As Decimal

    Private _EnvioPrecios As Boolean

    Private _CargadeVentas As Boolean

    Private _FElectronica As Boolean

    Private _Produccion As Boolean

    Private _IP_DTE As String

    Private _FV_Elect As Boolean

    Private _GD_Elect As Boolean

    Private _NC_Elect As Boolean

    Private _FE_Elect As Boolean

    Private _ND_Elect As Boolean

    Private _FC_Elect As Boolean

    Private _BV_Elect As Boolean

    Private _BE_Elect As Boolean

    Private _Llave As String

    Private _NResolucion As Decimal

    Private _FResolucion As Date

    Private _ATECO As String

    Private _Logo() As Byte

    Private _LogoVoucher() As Byte

    Private _SII As String

    Private _Envio_Automatico As Boolean

    Private _BancoDeposito As String

    Private _CuentaDeposito As String

    Private _RutDeposito As String

    Private _TitularDeposito As String

    Private _CorreoDeposito As String

    Private _RedSocial1 As String

    Private _RedSocial2 As String

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLocalChanging(value As Decimal)
    End Sub
    Partial Private Sub OnLocalChanged()
    End Sub
    Partial Private Sub OnNombreLocalChanging(value As String)
    End Sub
    Partial Private Sub OnNombreLocalChanged()
    End Sub
    Partial Private Sub OnRazonLocalChanging(value As String)
    End Sub
    Partial Private Sub OnRazonLocalChanged()
    End Sub
    Partial Private Sub OnRutLocalChanging(value As String)
    End Sub
    Partial Private Sub OnRutLocalChanged()
    End Sub
    Partial Private Sub OnGiroLocalChanging(value As String)
    End Sub
    Partial Private Sub OnGiroLocalChanged()
    End Sub
    Partial Private Sub OnDirLocalChanging(value As String)
    End Sub
    Partial Private Sub OnDirLocalChanged()
    End Sub
    Partial Private Sub OnCiudadChanging(value As String)
    End Sub
    Partial Private Sub OnCiudadChanged()
    End Sub
    Partial Private Sub OnComunaChanging(value As String)
    End Sub
    Partial Private Sub OnComunaChanged()
    End Sub
    Partial Private Sub OnClienteChanging(value As Decimal)
    End Sub
    Partial Private Sub OnClienteChanged()
    End Sub
    Partial Private Sub OnEMailLocalChanging(value As String)
    End Sub
    Partial Private Sub OnEMailLocalChanged()
    End Sub
    Partial Private Sub OnTelefonosLocalChanging(value As String)
    End Sub
    Partial Private Sub OnTelefonosLocalChanged()
    End Sub
    Partial Private Sub OnHorarioLocalChanging(value As String)
    End Sub
    Partial Private Sub OnHorarioLocalChanged()
    End Sub
    Partial Private Sub OnMaxDeudaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnMaxDeudaChanged()
    End Sub
    Partial Private Sub OnEnvioPreciosChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEnvioPreciosChanged()
    End Sub
    Partial Private Sub OnCargadeVentasChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCargadeVentasChanged()
    End Sub
    Partial Private Sub OnFElectronicaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnFElectronicaChanged()
    End Sub
    Partial Private Sub OnProduccionChanging(value As Boolean)
    End Sub
    Partial Private Sub OnProduccionChanged()
    End Sub
    Partial Private Sub OnIP_DTEChanging(value As String)
    End Sub
    Partial Private Sub OnIP_DTEChanged()
    End Sub
    Partial Private Sub OnFV_ElectChanging(value As Boolean)
    End Sub
    Partial Private Sub OnFV_ElectChanged()
    End Sub
    Partial Private Sub OnGD_ElectChanging(value As Boolean)
    End Sub
    Partial Private Sub OnGD_ElectChanged()
    End Sub
    Partial Private Sub OnNC_ElectChanging(value As Boolean)
    End Sub
    Partial Private Sub OnNC_ElectChanged()
    End Sub
    Partial Private Sub OnFE_ElectChanging(value As Boolean)
    End Sub
    Partial Private Sub OnFE_ElectChanged()
    End Sub
    Partial Private Sub OnND_ElectChanging(value As Boolean)
    End Sub
    Partial Private Sub OnND_ElectChanged()
    End Sub
    Partial Private Sub OnFC_ElectChanging(value As Boolean)
    End Sub
    Partial Private Sub OnFC_ElectChanged()
    End Sub
    Partial Private Sub OnBV_ElectChanging(value As Boolean)
    End Sub
    Partial Private Sub OnBV_ElectChanged()
    End Sub
    Partial Private Sub OnBE_ElectChanging(value As Boolean)
    End Sub
    Partial Private Sub OnBE_ElectChanged()
    End Sub
    Partial Private Sub OnLlaveChanging(value As String)
    End Sub
    Partial Private Sub OnLlaveChanged()
    End Sub
    Partial Private Sub OnNResolucionChanging(value As Decimal)
    End Sub
    Partial Private Sub OnNResolucionChanged()
    End Sub
    Partial Private Sub OnFResolucionChanging(value As Date)
    End Sub
    Partial Private Sub OnFResolucionChanged()
    End Sub
    Partial Private Sub OnATECOChanging(value As String)
    End Sub
    Partial Private Sub OnATECOChanged()
    End Sub
    Partial Private Sub OnLogoChanging(value As Byte())
    End Sub
    Partial Private Sub OnLogoChanged()
    End Sub
    Partial Private Sub OnLogoVoucherChanging(value As Byte())
    End Sub
    Partial Private Sub OnLogoVoucherChanged()
    End Sub
    Partial Private Sub OnSIIChanging(value As String)
    End Sub
    Partial Private Sub OnSIIChanged()
    End Sub
    Partial Private Sub OnEnvio_AutomaticoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEnvio_AutomaticoChanged()
    End Sub
    Partial Private Sub OnBancoDepositoChanging(value As String)
    End Sub
    Partial Private Sub OnBancoDepositoChanged()
    End Sub
    Partial Private Sub OnCuentaDepositoChanging(value As String)
    End Sub
    Partial Private Sub OnCuentaDepositoChanged()
    End Sub
    Partial Private Sub OnRutDepositoChanging(value As String)
    End Sub
    Partial Private Sub OnRutDepositoChanged()
    End Sub
    Partial Private Sub OnTitularDepositoChanging(value As String)
    End Sub
    Partial Private Sub OnTitularDepositoChanged()
    End Sub
    Partial Private Sub OnCorreoDepositoChanging(value As String)
    End Sub
    Partial Private Sub OnCorreoDepositoChanged()
    End Sub
    Partial Private Sub OnRedSocial1Changing(value As String)
    End Sub
    Partial Private Sub OnRedSocial1Changed()
    End Sub
    Partial Private Sub OnRedSocial2Changing(value As String)
    End Sub
    Partial Private Sub OnRedSocial2Changed()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=True)>
    Public Property Local() As Decimal
        Get
            Return Me._Local
        End Get
        Set
            If ((Me._Local = value) _
                        = False) Then
                Me.OnLocalChanging(value)
                Me.SendPropertyChanging
                Me._Local = value
                Me.SendPropertyChanged("Local")
                Me.OnLocalChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreLocal", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property NombreLocal() As String
        Get
            Return Me._NombreLocal
        End Get
        Set
            If (String.Equals(Me._NombreLocal, value) = False) Then
                Me.OnNombreLocalChanging(value)
                Me.SendPropertyChanging
                Me._NombreLocal = value
                Me.SendPropertyChanged("NombreLocal")
                Me.OnNombreLocalChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RazonLocal", DbType:="VarChar(100) NOT NULL", CanBeNull:=False)>
    Public Property RazonLocal() As String
        Get
            Return Me._RazonLocal
        End Get
        Set
            If (String.Equals(Me._RazonLocal, value) = False) Then
                Me.OnRazonLocalChanging(value)
                Me.SendPropertyChanging
                Me._RazonLocal = value
                Me.SendPropertyChanged("RazonLocal")
                Me.OnRazonLocalChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RutLocal", DbType:="Char(12) NOT NULL", CanBeNull:=False)>
    Public Property RutLocal() As String
        Get
            Return Me._RutLocal
        End Get
        Set
            If (String.Equals(Me._RutLocal, value) = False) Then
                Me.OnRutLocalChanging(value)
                Me.SendPropertyChanging
                Me._RutLocal = value
                Me.SendPropertyChanged("RutLocal")
                Me.OnRutLocalChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GiroLocal", DbType:="VarChar(100) NOT NULL", CanBeNull:=False)>
    Public Property GiroLocal() As String
        Get
            Return Me._GiroLocal
        End Get
        Set
            If (String.Equals(Me._GiroLocal, value) = False) Then
                Me.OnGiroLocalChanging(value)
                Me.SendPropertyChanging
                Me._GiroLocal = value
                Me.SendPropertyChanged("GiroLocal")
                Me.OnGiroLocalChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DirLocal", DbType:="VarChar(100) NOT NULL", CanBeNull:=False)>
    Public Property DirLocal() As String
        Get
            Return Me._DirLocal
        End Get
        Set
            If (String.Equals(Me._DirLocal, value) = False) Then
                Me.OnDirLocalChanging(value)
                Me.SendPropertyChanging
                Me._DirLocal = value
                Me.SendPropertyChanged("DirLocal")
                Me.OnDirLocalChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ciudad", DbType:="VarChar(5) NOT NULL", CanBeNull:=False)>
    Public Property Ciudad() As String
        Get
            Return Me._Ciudad
        End Get
        Set
            If (String.Equals(Me._Ciudad, value) = False) Then
                Me.OnCiudadChanging(value)
                Me.SendPropertyChanging
                Me._Ciudad = value
                Me.SendPropertyChanged("Ciudad")
                Me.OnCiudadChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comuna", DbType:="VarChar(5) NOT NULL", CanBeNull:=False)>
    Public Property Comuna() As String
        Get
            Return Me._Comuna
        End Get
        Set
            If (String.Equals(Me._Comuna, value) = False) Then
                Me.OnComunaChanging(value)
                Me.SendPropertyChanging
                Me._Comuna = value
                Me.SendPropertyChanged("Comuna")
                Me.OnComunaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cliente", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Cliente() As Decimal
        Get
            Return Me._Cliente
        End Get
        Set
            If ((Me._Cliente = value) _
                        = False) Then
                Me.OnClienteChanging(value)
                Me.SendPropertyChanging
                Me._Cliente = value
                Me.SendPropertyChanged("Cliente")
                Me.OnClienteChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMailLocal", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property EMailLocal() As String
        Get
            Return Me._EMailLocal
        End Get
        Set
            If (String.Equals(Me._EMailLocal, value) = False) Then
                Me.OnEMailLocalChanging(value)
                Me.SendPropertyChanging
                Me._EMailLocal = value
                Me.SendPropertyChanged("EMailLocal")
                Me.OnEMailLocalChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TelefonosLocal", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property TelefonosLocal() As String
        Get
            Return Me._TelefonosLocal
        End Get
        Set
            If (String.Equals(Me._TelefonosLocal, value) = False) Then
                Me.OnTelefonosLocalChanging(value)
                Me.SendPropertyChanging
                Me._TelefonosLocal = value
                Me.SendPropertyChanged("TelefonosLocal")
                Me.OnTelefonosLocalChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HorarioLocal", DbType:="VarChar(250) NOT NULL", CanBeNull:=False)>
    Public Property HorarioLocal() As String
        Get
            Return Me._HorarioLocal
        End Get
        Set
            If (String.Equals(Me._HorarioLocal, value) = False) Then
                Me.OnHorarioLocalChanging(value)
                Me.SendPropertyChanging
                Me._HorarioLocal = value
                Me.SendPropertyChanged("HorarioLocal")
                Me.OnHorarioLocalChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaxDeuda", DbType:="Decimal(18,0) NOT NULL")>
    Public Property MaxDeuda() As Decimal
        Get
            Return Me._MaxDeuda
        End Get
        Set
            If ((Me._MaxDeuda = value) _
                        = False) Then
                Me.OnMaxDeudaChanging(value)
                Me.SendPropertyChanging
                Me._MaxDeuda = value
                Me.SendPropertyChanged("MaxDeuda")
                Me.OnMaxDeudaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EnvioPrecios", DbType:="Bit NOT NULL")>
    Public Property EnvioPrecios() As Boolean
        Get
            Return Me._EnvioPrecios
        End Get
        Set
            If ((Me._EnvioPrecios = value) _
                        = False) Then
                Me.OnEnvioPreciosChanging(value)
                Me.SendPropertyChanging
                Me._EnvioPrecios = value
                Me.SendPropertyChanged("EnvioPrecios")
                Me.OnEnvioPreciosChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CargadeVentas", DbType:="Bit NOT NULL")>
    Public Property CargadeVentas() As Boolean
        Get
            Return Me._CargadeVentas
        End Get
        Set
            If ((Me._CargadeVentas = value) _
                        = False) Then
                Me.OnCargadeVentasChanging(value)
                Me.SendPropertyChanging
                Me._CargadeVentas = value
                Me.SendPropertyChanged("CargadeVentas")
                Me.OnCargadeVentasChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FElectronica", DbType:="Bit NOT NULL")>
    Public Property FElectronica() As Boolean
        Get
            Return Me._FElectronica
        End Get
        Set
            If ((Me._FElectronica = value) _
                        = False) Then
                Me.OnFElectronicaChanging(value)
                Me.SendPropertyChanging
                Me._FElectronica = value
                Me.SendPropertyChanged("FElectronica")
                Me.OnFElectronicaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Produccion", DbType:="Bit NOT NULL")>
    Public Property Produccion() As Boolean
        Get
            Return Me._Produccion
        End Get
        Set
            If ((Me._Produccion = value) _
                        = False) Then
                Me.OnProduccionChanging(value)
                Me.SendPropertyChanging
                Me._Produccion = value
                Me.SendPropertyChanged("Produccion")
                Me.OnProduccionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IP_DTE", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property IP_DTE() As String
        Get
            Return Me._IP_DTE
        End Get
        Set
            If (String.Equals(Me._IP_DTE, value) = False) Then
                Me.OnIP_DTEChanging(value)
                Me.SendPropertyChanging
                Me._IP_DTE = value
                Me.SendPropertyChanged("IP_DTE")
                Me.OnIP_DTEChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FV_Elect", DbType:="Bit NOT NULL")>
    Public Property FV_Elect() As Boolean
        Get
            Return Me._FV_Elect
        End Get
        Set
            If ((Me._FV_Elect = value) _
                        = False) Then
                Me.OnFV_ElectChanging(value)
                Me.SendPropertyChanging
                Me._FV_Elect = value
                Me.SendPropertyChanged("FV_Elect")
                Me.OnFV_ElectChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GD_Elect", DbType:="Bit NOT NULL")>
    Public Property GD_Elect() As Boolean
        Get
            Return Me._GD_Elect
        End Get
        Set
            If ((Me._GD_Elect = value) _
                        = False) Then
                Me.OnGD_ElectChanging(value)
                Me.SendPropertyChanging
                Me._GD_Elect = value
                Me.SendPropertyChanged("GD_Elect")
                Me.OnGD_ElectChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NC_Elect", DbType:="Bit NOT NULL")>
    Public Property NC_Elect() As Boolean
        Get
            Return Me._NC_Elect
        End Get
        Set
            If ((Me._NC_Elect = value) _
                        = False) Then
                Me.OnNC_ElectChanging(value)
                Me.SendPropertyChanging
                Me._NC_Elect = value
                Me.SendPropertyChanged("NC_Elect")
                Me.OnNC_ElectChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FE_Elect", DbType:="Bit NOT NULL")>
    Public Property FE_Elect() As Boolean
        Get
            Return Me._FE_Elect
        End Get
        Set
            If ((Me._FE_Elect = value) _
                        = False) Then
                Me.OnFE_ElectChanging(value)
                Me.SendPropertyChanging
                Me._FE_Elect = value
                Me.SendPropertyChanged("FE_Elect")
                Me.OnFE_ElectChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ND_Elect", DbType:="Bit NOT NULL")>
    Public Property ND_Elect() As Boolean
        Get
            Return Me._ND_Elect
        End Get
        Set
            If ((Me._ND_Elect = value) _
                        = False) Then
                Me.OnND_ElectChanging(value)
                Me.SendPropertyChanging
                Me._ND_Elect = value
                Me.SendPropertyChanged("ND_Elect")
                Me.OnND_ElectChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FC_Elect", DbType:="Bit NOT NULL")>
    Public Property FC_Elect() As Boolean
        Get
            Return Me._FC_Elect
        End Get
        Set
            If ((Me._FC_Elect = value) _
                        = False) Then
                Me.OnFC_ElectChanging(value)
                Me.SendPropertyChanging
                Me._FC_Elect = value
                Me.SendPropertyChanged("FC_Elect")
                Me.OnFC_ElectChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BV_Elect", DbType:="Bit NOT NULL")>
    Public Property BV_Elect() As Boolean
        Get
            Return Me._BV_Elect
        End Get
        Set
            If ((Me._BV_Elect = value) _
                        = False) Then
                Me.OnBV_ElectChanging(value)
                Me.SendPropertyChanging
                Me._BV_Elect = value
                Me.SendPropertyChanged("BV_Elect")
                Me.OnBV_ElectChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BE_Elect", DbType:="Bit NOT NULL")>
    Public Property BE_Elect() As Boolean
        Get
            Return Me._BE_Elect
        End Get
        Set
            If ((Me._BE_Elect = value) _
                        = False) Then
                Me.OnBE_ElectChanging(value)
                Me.SendPropertyChanging
                Me._BE_Elect = value
                Me.SendPropertyChanged("BE_Elect")
                Me.OnBE_ElectChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Llave", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Llave() As String
        Get
            Return Me._Llave
        End Get
        Set
            If (String.Equals(Me._Llave, value) = False) Then
                Me.OnLlaveChanging(value)
                Me.SendPropertyChanging
                Me._Llave = value
                Me.SendPropertyChanged("Llave")
                Me.OnLlaveChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NResolucion", DbType:="Decimal(18,0) NOT NULL")>
    Public Property NResolucion() As Decimal
        Get
            Return Me._NResolucion
        End Get
        Set
            If ((Me._NResolucion = value) _
                        = False) Then
                Me.OnNResolucionChanging(value)
                Me.SendPropertyChanging
                Me._NResolucion = value
                Me.SendPropertyChanged("NResolucion")
                Me.OnNResolucionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FResolucion", DbType:="Date NOT NULL")>
    Public Property FResolucion() As Date
        Get
            Return Me._FResolucion
        End Get
        Set
            If ((Me._FResolucion = value) _
                        = False) Then
                Me.OnFResolucionChanging(value)
                Me.SendPropertyChanging
                Me._FResolucion = value
                Me.SendPropertyChanged("FResolucion")
                Me.OnFResolucionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATECO", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property ATECO() As String
        Get
            Return Me._ATECO
        End Get
        Set
            If (String.Equals(Me._ATECO, value) = False) Then
                Me.OnATECOChanging(value)
                Me.SendPropertyChanging
                Me._ATECO = value
                Me.SendPropertyChanged("ATECO")
                Me.OnATECOChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Logo", DbType:="Image NOT NULL", CanBeNull:=False, UpdateCheck:=UpdateCheck.Never)>
    Public Property Logo() As Byte()
        Get
            Return Me._Logo
        End Get
        Set
            If (Object.Equals(Me._Logo, value) = False) Then
                Me.OnLogoChanging(value)
                Me.SendPropertyChanging
                Me._Logo = value
                Me.SendPropertyChanged("Logo")
                Me.OnLogoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LogoVoucher", DbType:="Image NOT NULL", CanBeNull:=False, UpdateCheck:=UpdateCheck.Never)>
    Public Property LogoVoucher() As Byte()
        Get
            Return Me._LogoVoucher
        End Get
        Set
            If (Object.Equals(Me._LogoVoucher, value) = False) Then
                Me.OnLogoVoucherChanging(value)
                Me.SendPropertyChanging
                Me._LogoVoucher = value
                Me.SendPropertyChanged("LogoVoucher")
                Me.OnLogoVoucherChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SII", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property SII() As String
        Get
            Return Me._SII
        End Get
        Set
            If (String.Equals(Me._SII, value) = False) Then
                Me.OnSIIChanging(value)
                Me.SendPropertyChanging
                Me._SII = value
                Me.SendPropertyChanged("SII")
                Me.OnSIIChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Envio_Automatico", DbType:="Bit NOT NULL")>
    Public Property Envio_Automatico() As Boolean
        Get
            Return Me._Envio_Automatico
        End Get
        Set
            If ((Me._Envio_Automatico = value) _
                        = False) Then
                Me.OnEnvio_AutomaticoChanging(value)
                Me.SendPropertyChanging
                Me._Envio_Automatico = value
                Me.SendPropertyChanged("Envio_Automatico")
                Me.OnEnvio_AutomaticoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BancoDeposito", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property BancoDeposito() As String
        Get
            Return Me._BancoDeposito
        End Get
        Set
            If (String.Equals(Me._BancoDeposito, value) = False) Then
                Me.OnBancoDepositoChanging(value)
                Me.SendPropertyChanging
                Me._BancoDeposito = value
                Me.SendPropertyChanged("BancoDeposito")
                Me.OnBancoDepositoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CuentaDeposito", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property CuentaDeposito() As String
        Get
            Return Me._CuentaDeposito
        End Get
        Set
            If (String.Equals(Me._CuentaDeposito, value) = False) Then
                Me.OnCuentaDepositoChanging(value)
                Me.SendPropertyChanging
                Me._CuentaDeposito = value
                Me.SendPropertyChanged("CuentaDeposito")
                Me.OnCuentaDepositoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RutDeposito", DbType:="VarChar(12) NOT NULL", CanBeNull:=False)>
    Public Property RutDeposito() As String
        Get
            Return Me._RutDeposito
        End Get
        Set
            If (String.Equals(Me._RutDeposito, value) = False) Then
                Me.OnRutDepositoChanging(value)
                Me.SendPropertyChanging
                Me._RutDeposito = value
                Me.SendPropertyChanged("RutDeposito")
                Me.OnRutDepositoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TitularDeposito", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property TitularDeposito() As String
        Get
            Return Me._TitularDeposito
        End Get
        Set
            If (String.Equals(Me._TitularDeposito, value) = False) Then
                Me.OnTitularDepositoChanging(value)
                Me.SendPropertyChanging
                Me._TitularDeposito = value
                Me.SendPropertyChanged("TitularDeposito")
                Me.OnTitularDepositoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CorreoDeposito", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property CorreoDeposito() As String
        Get
            Return Me._CorreoDeposito
        End Get
        Set
            If (String.Equals(Me._CorreoDeposito, value) = False) Then
                Me.OnCorreoDepositoChanging(value)
                Me.SendPropertyChanging
                Me._CorreoDeposito = value
                Me.SendPropertyChanged("CorreoDeposito")
                Me.OnCorreoDepositoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RedSocial1", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property RedSocial1() As String
        Get
            Return Me._RedSocial1
        End Get
        Set
            If (String.Equals(Me._RedSocial1, value) = False) Then
                Me.OnRedSocial1Changing(value)
                Me.SendPropertyChanging
                Me._RedSocial1 = value
                Me.SendPropertyChanged("RedSocial1")
                Me.OnRedSocial1Changed
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RedSocial2", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property RedSocial2() As String
        Get
            Return Me._RedSocial2
        End Get
        Set
            If (String.Equals(Me._RedSocial2, value) = False) Then
                Me.OnRedSocial2Changing(value)
                Me.SendPropertyChanging
                Me._RedSocial2 = value
                Me.SendPropertyChanged("RedSocial2")
                Me.OnRedSocial2Changed
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.UFs")>
Partial Public Class T_UFs
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Id As Decimal

    Private _Año As Decimal

    Private _Mes As Decimal

    Private _UF As Double

    Private _UTM As Double

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnAñoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnAñoChanged()
    End Sub
    Partial Private Sub OnMesChanging(value As Decimal)
    End Sub
    Partial Private Sub OnMesChanged()
    End Sub
    Partial Private Sub OnUFChanging(value As Double)
    End Sub
    Partial Private Sub OnUFChanged()
    End Sub
    Partial Private Sub OnUTMChanging(value As Double)
    End Sub
    Partial Private Sub OnUTMChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property Id() As Decimal
        Get
            Return Me._Id
        End Get
        Set
            If ((Me._Id = value) _
                        = False) Then
                Me.OnIdChanging(value)
                Me.SendPropertyChanging
                Me._Id = value
                Me.SendPropertyChanged("Id")
                Me.OnIdChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Año", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Año() As Decimal
        Get
            Return Me._Año
        End Get
        Set
            If ((Me._Año = value) _
                        = False) Then
                Me.OnAñoChanging(value)
                Me.SendPropertyChanging
                Me._Año = value
                Me.SendPropertyChanged("Año")
                Me.OnAñoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mes", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Mes() As Decimal
        Get
            Return Me._Mes
        End Get
        Set
            If ((Me._Mes = value) _
                        = False) Then
                Me.OnMesChanging(value)
                Me.SendPropertyChanging
                Me._Mes = value
                Me.SendPropertyChanged("Mes")
                Me.OnMesChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UF", DbType:="Float NOT NULL")>
    Public Property UF() As Double
        Get
            Return Me._UF
        End Get
        Set
            If ((Me._UF = value) _
                        = False) Then
                Me.OnUFChanging(value)
                Me.SendPropertyChanging
                Me._UF = value
                Me.SendPropertyChanged("UF")
                Me.OnUFChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UTM", DbType:="Float NOT NULL")>
    Public Property UTM() As Double
        Get
            Return Me._UTM
        End Get
        Set
            If ((Me._UTM = value) _
                        = False) Then
                Me.OnUTMChanging(value)
                Me.SendPropertyChanging
                Me._UTM = value
                Me.SendPropertyChanged("UTM")
                Me.OnUTMChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AccesoModulo")>
Partial Public Class T_AccesoModulo
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _ID As Decimal

    Private _Empresa As String

    Private _Modulo As String

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnEmpresaChanging(value As String)
    End Sub
    Partial Private Sub OnEmpresaChanged()
    End Sub
    Partial Private Sub OnModuloChanging(value As String)
    End Sub
    Partial Private Sub OnModuloChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property ID() As Decimal
        Get
            Return Me._ID
        End Get
        Set
            If ((Me._ID = value) _
                        = False) Then
                Me.OnIDChanging(value)
                Me.SendPropertyChanging
                Me._ID = value
                Me.SendPropertyChanged("ID")
                Me.OnIDChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Empresa", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Empresa() As String
        Get
            Return Me._Empresa
        End Get
        Set
            If (String.Equals(Me._Empresa, value) = False) Then
                Me.OnEmpresaChanging(value)
                Me.SendPropertyChanging
                Me._Empresa = value
                Me.SendPropertyChanged("Empresa")
                Me.OnEmpresaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Modulo", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Modulo() As String
        Get
            Return Me._Modulo
        End Get
        Set
            If (String.Equals(Me._Modulo, value) = False) Then
                Me.OnModuloChanging(value)
                Me.SendPropertyChanging
                Me._Modulo = value
                Me.SendPropertyChanged("Modulo")
                Me.OnModuloChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MovDet")>
Partial Public Class T_MovDet
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Id As Decimal

    Private _Movimiento As Decimal

    Private _Fecha As Date

    Private _TipoMov As String

    Private _Articulo As Decimal

    Private _Barra As String

    Private _Cantidad As Decimal

    Private _Precio As Decimal

    Private _Costo As Decimal

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnMovimientoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnMovimientoChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnTipoMovChanging(value As String)
    End Sub
    Partial Private Sub OnTipoMovChanged()
    End Sub
    Partial Private Sub OnArticuloChanging(value As Decimal)
    End Sub
    Partial Private Sub OnArticuloChanged()
    End Sub
    Partial Private Sub OnBarraChanging(value As String)
    End Sub
    Partial Private Sub OnBarraChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
    Partial Private Sub OnPrecioChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPrecioChanged()
    End Sub
    Partial Private Sub OnCostoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCostoChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property Id() As Decimal
        Get
            Return Me._Id
        End Get
        Set
            If ((Me._Id = value) _
                        = False) Then
                Me.OnIdChanging(value)
                Me.SendPropertyChanging
                Me._Id = value
                Me.SendPropertyChanged("Id")
                Me.OnIdChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Movimiento", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Movimiento() As Decimal
        Get
            Return Me._Movimiento
        End Get
        Set
            If ((Me._Movimiento = value) _
                        = False) Then
                Me.OnMovimientoChanging(value)
                Me.SendPropertyChanging
                Me._Movimiento = value
                Me.SendPropertyChanged("Movimiento")
                Me.OnMovimientoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="DateTime NOT NULL")>
    Public Property Fecha() As Date
        Get
            Return Me._Fecha
        End Get
        Set
            If ((Me._Fecha = value) _
                        = False) Then
                Me.OnFechaChanging(value)
                Me.SendPropertyChanging
                Me._Fecha = value
                Me.SendPropertyChanged("Fecha")
                Me.OnFechaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoMov", DbType:="VarChar(1) NOT NULL", CanBeNull:=False)>
    Public Property TipoMov() As String
        Get
            Return Me._TipoMov
        End Get
        Set
            If (String.Equals(Me._TipoMov, value) = False) Then
                Me.OnTipoMovChanging(value)
                Me.SendPropertyChanging
                Me._TipoMov = value
                Me.SendPropertyChanged("TipoMov")
                Me.OnTipoMovChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Articulo", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Articulo() As Decimal
        Get
            Return Me._Articulo
        End Get
        Set
            If ((Me._Articulo = value) _
                        = False) Then
                Me.OnArticuloChanging(value)
                Me.SendPropertyChanging
                Me._Articulo = value
                Me.SendPropertyChanged("Articulo")
                Me.OnArticuloChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Barra", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Barra() As String
        Get
            Return Me._Barra
        End Get
        Set
            If (String.Equals(Me._Barra, value) = False) Then
                Me.OnBarraChanging(value)
                Me.SendPropertyChanging
                Me._Barra = value
                Me.SendPropertyChanged("Barra")
                Me.OnBarraChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cantidad", DbType:="Float NOT NULL")>
    Public Property Cantidad() As Decimal
        Get
            Return Me._Cantidad
        End Get
        Set
            If ((Me._Cantidad = value) _
                        = False) Then
                Me.OnCantidadChanging(value)
                Me.SendPropertyChanging
                Me._Cantidad = value
                Me.SendPropertyChanged("Cantidad")
                Me.OnCantidadChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Precio", DbType:="Float NOT NULL")>
    Public Property Precio() As Decimal
        Get
            Return Me._Precio
        End Get
        Set
            If ((Me._Precio = value) _
                        = False) Then
                Me.OnPrecioChanging(value)
                Me.SendPropertyChanging
                Me._Precio = value
                Me.SendPropertyChanged("Precio")
                Me.OnPrecioChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Costo", DbType:="Float NOT NULL")>
    Public Property Costo() As Decimal
        Get
            Return Me._Costo
        End Get
        Set
            If ((Me._Costo = value) _
                        = False) Then
                Me.OnCostoChanging(value)
                Me.SendPropertyChanging
                Me._Costo = value
                Me.SendPropertyChanged("Costo")
                Me.OnCostoChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CostosIngresos")>
Partial Public Class T_CostosIngresos

    Private _Articulo As Decimal

    Private _Movimiento As Decimal

    Private _Costo As Decimal

    Private _Fecha As System.Nullable(Of Date)

    Private _TipoDoc As String

    Private _NumDoc As System.Nullable(Of Decimal)

    Public Sub New()
        MyBase.New
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Articulo", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Articulo() As Decimal
        Get
            Return Me._Articulo
        End Get
        Set
            If ((Me._Articulo = value) _
                        = False) Then
                Me._Articulo = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Movimiento", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Movimiento() As Decimal
        Get
            Return Me._Movimiento
        End Get
        Set
            If ((Me._Movimiento = value) _
                        = False) Then
                Me._Movimiento = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Costo", DbType:="Float NOT NULL")>
    Public Property Costo() As Decimal
        Get
            Return Me._Costo
        End Get
        Set
            If ((Me._Costo = value) _
                        = False) Then
                Me._Costo = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="DateTime")>
    Public Property Fecha() As System.Nullable(Of Date)
        Get
            Return Me._Fecha
        End Get
        Set
            If (Me._Fecha.Equals(value) = False) Then
                Me._Fecha = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDoc", DbType:="VarChar(2)")>
    Public Property TipoDoc() As String
        Get
            Return Me._TipoDoc
        End Get
        Set
            If (String.Equals(Me._TipoDoc, value) = False) Then
                Me._TipoDoc = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumDoc", DbType:="Decimal(18,0)")>
    Public Property NumDoc() As System.Nullable(Of Decimal)
        Get
            Return Me._NumDoc
        End Get
        Set
            If (Me._NumDoc.Equals(value) = False) Then
                Me._NumDoc = value
            End If
        End Set
    End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Eventos")>
Partial Public Class T_Eventos
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Evento As Decimal

    Private _Descripcion As String

    Private _Categoria As String

    Private _EnviarNotificacionCliente As Boolean

    Private _EnviarCorreoCliente As Boolean

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnEventoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnEventoChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnCategoriaChanging(value As String)
    End Sub
    Partial Private Sub OnCategoriaChanged()
    End Sub
    Partial Private Sub OnEnviarNotificacionClienteChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEnviarNotificacionClienteChanged()
    End Sub
    Partial Private Sub OnEnviarCorreoClienteChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEnviarCorreoClienteChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Evento", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=True)>
    Public Property Evento() As Decimal
        Get
            Return Me._Evento
        End Get
        Set
            If ((Me._Evento = value) _
                        = False) Then
                Me.OnEventoChanging(value)
                Me.SendPropertyChanging
                Me._Evento = value
                Me.SendPropertyChanged("Evento")
                Me.OnEventoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="VarChar(200) NOT NULL", CanBeNull:=False)>
    Public Property Descripcion() As String
        Get
            Return Me._Descripcion
        End Get
        Set
            If (String.Equals(Me._Descripcion, value) = False) Then
                Me.OnDescripcionChanging(value)
                Me.SendPropertyChanging
                Me._Descripcion = value
                Me.SendPropertyChanged("Descripcion")
                Me.OnDescripcionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Categoria", DbType:="VarChar(3) NOT NULL", CanBeNull:=False)>
    Public Property Categoria() As String
        Get
            Return Me._Categoria
        End Get
        Set
            If (String.Equals(Me._Categoria, value) = False) Then
                Me.OnCategoriaChanging(value)
                Me.SendPropertyChanging
                Me._Categoria = value
                Me.SendPropertyChanged("Categoria")
                Me.OnCategoriaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EnviarNotificacionCliente", DbType:="Bit NOT NULL")>
    Public Property EnviarNotificacionCliente() As Boolean
        Get
            Return Me._EnviarNotificacionCliente
        End Get
        Set
            If ((Me._EnviarNotificacionCliente = value) _
                        = False) Then
                Me.OnEnviarNotificacionClienteChanging(value)
                Me.SendPropertyChanging
                Me._EnviarNotificacionCliente = value
                Me.SendPropertyChanged("EnviarNotificacionCliente")
                Me.OnEnviarNotificacionClienteChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EnviarCorreoCliente", DbType:="Bit NOT NULL")>
    Public Property EnviarCorreoCliente() As Boolean
        Get
            Return Me._EnviarCorreoCliente
        End Get
        Set
            If ((Me._EnviarCorreoCliente = value) _
                        = False) Then
                Me.OnEnviarCorreoClienteChanging(value)
                Me.SendPropertyChanging
                Me._EnviarCorreoCliente = value
                Me.SendPropertyChanged("EnviarCorreoCliente")
                Me.OnEnviarCorreoClienteChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.BuscarControlArticulos")>
Partial Public Class T_BuscarControlArticulos

    Private _Documento As String

    Private _Cliente As String

    Private _Nombre As String

    Private _Articulo As Decimal

    Private _Descripcion As String

    Private _Marca As String

    Private _Modelo As String

    Private _Color As String

    Private _Talla As String

    Private _SKU As String

    Private _Serie As String

    Private _Año As Decimal

    Public Sub New()
        MyBase.New
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Documento", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Documento() As String
        Get
            Return Me._Documento
        End Get
        Set
            If (String.Equals(Me._Documento, value) = False) Then
                Me._Documento = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cliente", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Cliente() As String
        Get
            Return Me._Cliente
        End Get
        Set
            If (String.Equals(Me._Cliente, value) = False) Then
                Me._Cliente = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="VarChar(200) NOT NULL", CanBeNull:=False)>
    Public Property Nombre() As String
        Get
            Return Me._Nombre
        End Get
        Set
            If (String.Equals(Me._Nombre, value) = False) Then
                Me._Nombre = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Articulo", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Articulo() As Decimal
        Get
            Return Me._Articulo
        End Get
        Set
            If ((Me._Articulo = value) _
                        = False) Then
                Me._Articulo = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="VarChar(200)")>
    Public Property Descripcion() As String
        Get
            Return Me._Descripcion
        End Get
        Set
            If (String.Equals(Me._Descripcion, value) = False) Then
                Me._Descripcion = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Marca", DbType:="VarChar(100) NOT NULL", CanBeNull:=False)>
    Public Property Marca() As String
        Get
            Return Me._Marca
        End Get
        Set
            If (String.Equals(Me._Marca, value) = False) Then
                Me._Marca = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Modelo", DbType:="VarChar(100) NOT NULL", CanBeNull:=False)>
    Public Property Modelo() As String
        Get
            Return Me._Modelo
        End Get
        Set
            If (String.Equals(Me._Modelo, value) = False) Then
                Me._Modelo = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Color", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Color() As String
        Get
            Return Me._Color
        End Get
        Set
            If (String.Equals(Me._Color, value) = False) Then
                Me._Color = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Talla", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Talla() As String
        Get
            Return Me._Talla
        End Get
        Set
            If (String.Equals(Me._Talla, value) = False) Then
                Me._Talla = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SKU", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property SKU() As String
        Get
            Return Me._SKU
        End Get
        Set
            If (String.Equals(Me._SKU, value) = False) Then
                Me._SKU = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Serie", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Serie() As String
        Get
            Return Me._Serie
        End Get
        Set
            If (String.Equals(Me._Serie, value) = False) Then
                Me._Serie = value
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Año", DbType:="Decimal(4,0) NOT NULL")>
    Public Property Año() As Decimal
        Get
            Return Me._Año
        End Get
        Set
            If ((Me._Año = value) _
                        = False) Then
                Me._Año = value
            End If
        End Set
    End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Tracking")>
Partial Public Class T_Tracking
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Tracking As Decimal

    Private _FechaSys As Date

    Private _FechaEvento As Date

    Private _Evento As Decimal

    Private _DescripcionEvento As String

    Private _Local As Decimal

    Private _Usuario As String

    Private _Cliente As Decimal

    Private _TipoDoc As String

    Private _NumDoc As Decimal

    Private _Observacion As String

    Private _Origen As String

    Private _AlertaGenerada As Boolean

    Private _FechaRegistroReferencia As Date

    Private _AlertaSecuencial As Decimal

    Private _Especificacion As String

    Private _Articulo As Decimal

    Private _SKU As String

    Private _Descripcion As String

    Private _Cantidad As Decimal

    Private _Bodega As Decimal

    Private _Modulo As String

    Private _Especial1 As String

    Private _Especial2 As String

    Private _Especial3 As String

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTrackingChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTrackingChanged()
    End Sub
    Partial Private Sub OnFechaSysChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaSysChanged()
    End Sub
    Partial Private Sub OnFechaEventoChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaEventoChanged()
    End Sub
    Partial Private Sub OnEventoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnEventoChanged()
    End Sub
    Partial Private Sub OnDescripcionEventoChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionEventoChanged()
    End Sub
    Partial Private Sub OnLocalChanging(value As Decimal)
    End Sub
    Partial Private Sub OnLocalChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnClienteChanging(value As Decimal)
    End Sub
    Partial Private Sub OnClienteChanged()
    End Sub
    Partial Private Sub OnTipoDocChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDocChanged()
    End Sub
    Partial Private Sub OnNumDocChanging(value As Decimal)
    End Sub
    Partial Private Sub OnNumDocChanged()
    End Sub
    Partial Private Sub OnObservacionChanging(value As String)
    End Sub
    Partial Private Sub OnObservacionChanged()
    End Sub
    Partial Private Sub OnOrigenChanging(value As String)
    End Sub
    Partial Private Sub OnOrigenChanged()
    End Sub
    Partial Private Sub OnAlertaGeneradaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnAlertaGeneradaChanged()
    End Sub
    Partial Private Sub OnFechaRegistroReferenciaChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaRegistroReferenciaChanged()
    End Sub
    Partial Private Sub OnAlertaSecuencialChanging(value As Decimal)
    End Sub
    Partial Private Sub OnAlertaSecuencialChanged()
    End Sub
    Partial Private Sub OnEspecificacionChanging(value As String)
    End Sub
    Partial Private Sub OnEspecificacionChanged()
    End Sub
    Partial Private Sub OnArticuloChanging(value As Decimal)
    End Sub
    Partial Private Sub OnArticuloChanged()
    End Sub
    Partial Private Sub OnSKUChanging(value As String)
    End Sub
    Partial Private Sub OnSKUChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
    Partial Private Sub OnBodegaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnBodegaChanged()
    End Sub
    Partial Private Sub OnModuloChanging(value As String)
    End Sub
    Partial Private Sub OnModuloChanged()
    End Sub
    Partial Private Sub OnEspecial1Changing(value As String)
    End Sub
    Partial Private Sub OnEspecial1Changed()
    End Sub
    Partial Private Sub OnEspecial2Changing(value As String)
    End Sub
    Partial Private Sub OnEspecial2Changed()
    End Sub
    Partial Private Sub OnEspecial3Changing(value As String)
    End Sub
    Partial Private Sub OnEspecial3Changed()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tracking", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property Tracking() As Decimal
        Get
            Return Me._Tracking
        End Get
        Set
            If ((Me._Tracking = value) _
                        = False) Then
                Me.OnTrackingChanging(value)
                Me.SendPropertyChanging
                Me._Tracking = value
                Me.SendPropertyChanged("Tracking")
                Me.OnTrackingChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaSys", DbType:="DateTime NOT NULL")>
    Public Property FechaSys() As Date
        Get
            Return Me._FechaSys
        End Get
        Set
            If ((Me._FechaSys = value) _
                        = False) Then
                Me.OnFechaSysChanging(value)
                Me.SendPropertyChanging
                Me._FechaSys = value
                Me.SendPropertyChanged("FechaSys")
                Me.OnFechaSysChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaEvento", DbType:="DateTime NOT NULL")>
    Public Property FechaEvento() As Date
        Get
            Return Me._FechaEvento
        End Get
        Set
            If ((Me._FechaEvento = value) _
                        = False) Then
                Me.OnFechaEventoChanging(value)
                Me.SendPropertyChanging
                Me._FechaEvento = value
                Me.SendPropertyChanged("FechaEvento")
                Me.OnFechaEventoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Evento", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Evento() As Decimal
        Get
            Return Me._Evento
        End Get
        Set
            If ((Me._Evento = value) _
                        = False) Then
                Me.OnEventoChanging(value)
                Me.SendPropertyChanging
                Me._Evento = value
                Me.SendPropertyChanged("Evento")
                Me.OnEventoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescripcionEvento", DbType:="VarChar(200) NOT NULL", CanBeNull:=False)>
    Public Property DescripcionEvento() As String
        Get
            Return Me._DescripcionEvento
        End Get
        Set
            If (String.Equals(Me._DescripcionEvento, value) = False) Then
                Me.OnDescripcionEventoChanging(value)
                Me.SendPropertyChanging
                Me._DescripcionEvento = value
                Me.SendPropertyChanged("DescripcionEvento")
                Me.OnDescripcionEventoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Local() As Decimal
        Get
            Return Me._Local
        End Get
        Set
            If ((Me._Local = value) _
                        = False) Then
                Me.OnLocalChanging(value)
                Me.SendPropertyChanging
                Me._Local = value
                Me.SendPropertyChanged("Local")
                Me.OnLocalChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="VarChar(3) NOT NULL", CanBeNull:=False)>
    Public Property Usuario() As String
        Get
            Return Me._Usuario
        End Get
        Set
            If (String.Equals(Me._Usuario, value) = False) Then
                Me.OnUsuarioChanging(value)
                Me.SendPropertyChanging
                Me._Usuario = value
                Me.SendPropertyChanged("Usuario")
                Me.OnUsuarioChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cliente", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Cliente() As Decimal
        Get
            Return Me._Cliente
        End Get
        Set
            If ((Me._Cliente = value) _
                        = False) Then
                Me.OnClienteChanging(value)
                Me.SendPropertyChanging
                Me._Cliente = value
                Me.SendPropertyChanged("Cliente")
                Me.OnClienteChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDoc", DbType:="VarChar(2) NOT NULL", CanBeNull:=False)>
    Public Property TipoDoc() As String
        Get
            Return Me._TipoDoc
        End Get
        Set
            If (String.Equals(Me._TipoDoc, value) = False) Then
                Me.OnTipoDocChanging(value)
                Me.SendPropertyChanging
                Me._TipoDoc = value
                Me.SendPropertyChanged("TipoDoc")
                Me.OnTipoDocChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumDoc", DbType:="Decimal(18,0) NOT NULL")>
    Public Property NumDoc() As Decimal
        Get
            Return Me._NumDoc
        End Get
        Set
            If ((Me._NumDoc = value) _
                        = False) Then
                Me.OnNumDocChanging(value)
                Me.SendPropertyChanging
                Me._NumDoc = value
                Me.SendPropertyChanged("NumDoc")
                Me.OnNumDocChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Observacion", DbType:="VarChar(200) NOT NULL", CanBeNull:=False)>
    Public Property Observacion() As String
        Get
            Return Me._Observacion
        End Get
        Set
            If (String.Equals(Me._Observacion, value) = False) Then
                Me.OnObservacionChanging(value)
                Me.SendPropertyChanging
                Me._Observacion = value
                Me.SendPropertyChanged("Observacion")
                Me.OnObservacionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Origen", DbType:="VarChar(3) NOT NULL", CanBeNull:=False)>
    Public Property Origen() As String
        Get
            Return Me._Origen
        End Get
        Set
            If (String.Equals(Me._Origen, value) = False) Then
                Me.OnOrigenChanging(value)
                Me.SendPropertyChanging
                Me._Origen = value
                Me.SendPropertyChanged("Origen")
                Me.OnOrigenChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AlertaGenerada", DbType:="Bit NOT NULL")>
    Public Property AlertaGenerada() As Boolean
        Get
            Return Me._AlertaGenerada
        End Get
        Set
            If ((Me._AlertaGenerada = value) _
                        = False) Then
                Me.OnAlertaGeneradaChanging(value)
                Me.SendPropertyChanging
                Me._AlertaGenerada = value
                Me.SendPropertyChanged("AlertaGenerada")
                Me.OnAlertaGeneradaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaRegistroReferencia", DbType:="DateTime NOT NULL")>
    Public Property FechaRegistroReferencia() As Date
        Get
            Return Me._FechaRegistroReferencia
        End Get
        Set
            If ((Me._FechaRegistroReferencia = value) _
                        = False) Then
                Me.OnFechaRegistroReferenciaChanging(value)
                Me.SendPropertyChanging
                Me._FechaRegistroReferencia = value
                Me.SendPropertyChanged("FechaRegistroReferencia")
                Me.OnFechaRegistroReferenciaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AlertaSecuencial", DbType:="Decimal(18,0) NOT NULL")>
    Public Property AlertaSecuencial() As Decimal
        Get
            Return Me._AlertaSecuencial
        End Get
        Set
            If ((Me._AlertaSecuencial = value) _
                        = False) Then
                Me.OnAlertaSecuencialChanging(value)
                Me.SendPropertyChanging
                Me._AlertaSecuencial = value
                Me.SendPropertyChanged("AlertaSecuencial")
                Me.OnAlertaSecuencialChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Especificacion", DbType:="VarChar(200) NOT NULL", CanBeNull:=False)>
    Public Property Especificacion() As String
        Get
            Return Me._Especificacion
        End Get
        Set
            If (String.Equals(Me._Especificacion, value) = False) Then
                Me.OnEspecificacionChanging(value)
                Me.SendPropertyChanging
                Me._Especificacion = value
                Me.SendPropertyChanged("Especificacion")
                Me.OnEspecificacionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Articulo", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Articulo() As Decimal
        Get
            Return Me._Articulo
        End Get
        Set
            If ((Me._Articulo = value) _
                        = False) Then
                Me.OnArticuloChanging(value)
                Me.SendPropertyChanging
                Me._Articulo = value
                Me.SendPropertyChanged("Articulo")
                Me.OnArticuloChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SKU", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property SKU() As String
        Get
            Return Me._SKU
        End Get
        Set
            If (String.Equals(Me._SKU, value) = False) Then
                Me.OnSKUChanging(value)
                Me.SendPropertyChanging
                Me._SKU = value
                Me.SendPropertyChanged("SKU")
                Me.OnSKUChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="VarChar(200) NOT NULL", CanBeNull:=False)>
    Public Property Descripcion() As String
        Get
            Return Me._Descripcion
        End Get
        Set
            If (String.Equals(Me._Descripcion, value) = False) Then
                Me.OnDescripcionChanging(value)
                Me.SendPropertyChanging
                Me._Descripcion = value
                Me.SendPropertyChanged("Descripcion")
                Me.OnDescripcionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cantidad", DbType:="Float NOT NULL")>
    Public Property Cantidad() As Decimal
        Get
            Return Me._Cantidad
        End Get
        Set
            If ((Me._Cantidad = value) _
                        = False) Then
                Me.OnCantidadChanging(value)
                Me.SendPropertyChanging
                Me._Cantidad = value
                Me.SendPropertyChanged("Cantidad")
                Me.OnCantidadChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bodega", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Bodega() As Decimal
        Get
            Return Me._Bodega
        End Get
        Set
            If ((Me._Bodega = value) _
                        = False) Then
                Me.OnBodegaChanging(value)
                Me.SendPropertyChanging
                Me._Bodega = value
                Me.SendPropertyChanged("Bodega")
                Me.OnBodegaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Modulo", DbType:="VarChar(200) NOT NULL", CanBeNull:=False)>
    Public Property Modulo() As String
        Get
            Return Me._Modulo
        End Get
        Set
            If (String.Equals(Me._Modulo, value) = False) Then
                Me.OnModuloChanging(value)
                Me.SendPropertyChanging
                Me._Modulo = value
                Me.SendPropertyChanged("Modulo")
                Me.OnModuloChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Especial1", DbType:="VarChar(200) NOT NULL", CanBeNull:=False)>
    Public Property Especial1() As String
        Get
            Return Me._Especial1
        End Get
        Set
            If (String.Equals(Me._Especial1, value) = False) Then
                Me.OnEspecial1Changing(value)
                Me.SendPropertyChanging
                Me._Especial1 = value
                Me.SendPropertyChanged("Especial1")
                Me.OnEspecial1Changed
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Especial2", DbType:="VarChar(200) NOT NULL", CanBeNull:=False)>
    Public Property Especial2() As String
        Get
            Return Me._Especial2
        End Get
        Set
            If (String.Equals(Me._Especial2, value) = False) Then
                Me.OnEspecial2Changing(value)
                Me.SendPropertyChanging
                Me._Especial2 = value
                Me.SendPropertyChanged("Especial2")
                Me.OnEspecial2Changed
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Especial3", DbType:="VarChar(200) NOT NULL", CanBeNull:=False)>
    Public Property Especial3() As String
        Get
            Return Me._Especial3
        End Get
        Set
            If (String.Equals(Me._Especial3, value) = False) Then
                Me.OnEspecial3Changing(value)
                Me.SendPropertyChanging
                Me._Especial3 = value
                Me.SendPropertyChanged("Especial3")
                Me.OnEspecial3Changed
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TikDet")>
Partial Public Class T_TikDet
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Id As Decimal

    Private _Ticket As Decimal

    Private _Articulo As Decimal

    Private _Barra As String

    Private _Cantidad As Double

    Private _PVenta As Double

    Private _Serie As String

    Private _PagoRealizado As Boolean

    Private _Entregado As Boolean

    Private _DocumentoEmitido As Boolean

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnTicketChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTicketChanged()
    End Sub
    Partial Private Sub OnArticuloChanging(value As Decimal)
    End Sub
    Partial Private Sub OnArticuloChanged()
    End Sub
    Partial Private Sub OnBarraChanging(value As String)
    End Sub
    Partial Private Sub OnBarraChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As Double)
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
    Partial Private Sub OnPVentaChanging(value As Double)
    End Sub
    Partial Private Sub OnPVentaChanged()
    End Sub
    Partial Private Sub OnSerieChanging(value As String)
    End Sub
    Partial Private Sub OnSerieChanged()
    End Sub
    Partial Private Sub OnPagoRealizadoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnPagoRealizadoChanged()
    End Sub
    Partial Private Sub OnEntregadoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEntregadoChanged()
    End Sub
    Partial Private Sub OnDocumentoEmitidoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnDocumentoEmitidoChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property Id() As Decimal
        Get
            Return Me._Id
        End Get
        Set
            If ((Me._Id = value) _
                        = False) Then
                Me.OnIdChanging(value)
                Me.SendPropertyChanging
                Me._Id = value
                Me.SendPropertyChanged("Id")
                Me.OnIdChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ticket", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Ticket() As Decimal
        Get
            Return Me._Ticket
        End Get
        Set
            If ((Me._Ticket = value) _
                        = False) Then
                Me.OnTicketChanging(value)
                Me.SendPropertyChanging
                Me._Ticket = value
                Me.SendPropertyChanged("Ticket")
                Me.OnTicketChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Articulo", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Articulo() As Decimal
        Get
            Return Me._Articulo
        End Get
        Set
            If ((Me._Articulo = value) _
                        = False) Then
                Me.OnArticuloChanging(value)
                Me.SendPropertyChanging
                Me._Articulo = value
                Me.SendPropertyChanged("Articulo")
                Me.OnArticuloChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Barra", DbType:="NChar(30) NOT NULL", CanBeNull:=False)>
    Public Property Barra() As String
        Get
            Return Me._Barra
        End Get
        Set
            If (String.Equals(Me._Barra, value) = False) Then
                Me.OnBarraChanging(value)
                Me.SendPropertyChanging
                Me._Barra = value
                Me.SendPropertyChanged("Barra")
                Me.OnBarraChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cantidad", DbType:="Float NOT NULL")>
    Public Property Cantidad() As Double
        Get
            Return Me._Cantidad
        End Get
        Set
            If ((Me._Cantidad = value) _
                        = False) Then
                Me.OnCantidadChanging(value)
                Me.SendPropertyChanging
                Me._Cantidad = value
                Me.SendPropertyChanged("Cantidad")
                Me.OnCantidadChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVenta", DbType:="Float NOT NULL")>
    Public Property PVenta() As Double
        Get
            Return Me._PVenta
        End Get
        Set
            If ((Me._PVenta = value) _
                        = False) Then
                Me.OnPVentaChanging(value)
                Me.SendPropertyChanging
                Me._PVenta = value
                Me.SendPropertyChanged("PVenta")
                Me.OnPVentaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Serie", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Serie() As String
        Get
            Return Me._Serie
        End Get
        Set
            If (String.Equals(Me._Serie, value) = False) Then
                Me.OnSerieChanging(value)
                Me.SendPropertyChanging
                Me._Serie = value
                Me.SendPropertyChanged("Serie")
                Me.OnSerieChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PagoRealizado", DbType:="Bit NOT NULL")>
    Public Property PagoRealizado() As Boolean
        Get
            Return Me._PagoRealizado
        End Get
        Set
            If ((Me._PagoRealizado = value) _
                        = False) Then
                Me.OnPagoRealizadoChanging(value)
                Me.SendPropertyChanging
                Me._PagoRealizado = value
                Me.SendPropertyChanged("PagoRealizado")
                Me.OnPagoRealizadoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Entregado", DbType:="Bit NOT NULL")>
    Public Property Entregado() As Boolean
        Get
            Return Me._Entregado
        End Get
        Set
            If ((Me._Entregado = value) _
                        = False) Then
                Me.OnEntregadoChanging(value)
                Me.SendPropertyChanging
                Me._Entregado = value
                Me.SendPropertyChanged("Entregado")
                Me.OnEntregadoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DocumentoEmitido", DbType:="Bit NOT NULL")>
    Public Property DocumentoEmitido() As Boolean
        Get
            Return Me._DocumentoEmitido
        End Get
        Set
            If ((Me._DocumentoEmitido = value) _
                        = False) Then
                Me.OnDocumentoEmitidoChanging(value)
                Me.SendPropertyChanging
                Me._DocumentoEmitido = value
                Me.SendPropertyChanged("DocumentoEmitido")
                Me.OnDocumentoEmitidoChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TikGen")>
Partial Public Class T_TikGen
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Ticket As Decimal

    Private _Fecha As Date

    Private _FechaPago As Date

    Private _FechaListo As Date

    Private _FechaDespacho As Date

    Private _FechaEntrega As Date

    Private _Local As Decimal

    Private _Cliente As Decimal

    Private _Usuario As String

    Private _Estado As String

    Private _Abonado As Decimal

    Private _Total As Decimal

    Private _Mesa As Decimal

    Private _DespachoRetiro As String

    Private _Credito As Boolean

    Private _Pagado As Boolean

    Private _Facturar As Boolean

    Private _TipoDoc As String

    Private _NumDoc As Decimal

    Private _OT As Decimal

    Private _FPago As String

    Private _IDTransaccion As String

    Private _Rut As String

    Private _Nombres As String

    Private _Apellidos As String

    Private _Giro As String

    Private _Direccion As String

    Private _Ciudad As String

    Private _Comuna As String

    Private _NombreComuna As String

    Private _Telefonos As String

    Private _Email As String

    Private _NombreDespacho As String

    Private _DireccionDespacho As String

    Private _TelefonoDespacho As String

    Private _EmailDespacho As String

    Private _CiudadDespacho As String

    Private _ComunaDespacho As String

    Private _Observacion As String

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTicketChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTicketChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnFechaPagoChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaPagoChanged()
    End Sub
    Partial Private Sub OnFechaListoChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaListoChanged()
    End Sub
    Partial Private Sub OnFechaDespachoChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaDespachoChanged()
    End Sub
    Partial Private Sub OnFechaEntregaChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaEntregaChanged()
    End Sub
    Partial Private Sub OnLocalChanging(value As Decimal)
    End Sub
    Partial Private Sub OnLocalChanged()
    End Sub
    Partial Private Sub OnClienteChanging(value As Decimal)
    End Sub
    Partial Private Sub OnClienteChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnAbonadoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnAbonadoChanged()
    End Sub
    Partial Private Sub OnTotalChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTotalChanged()
    End Sub
    Partial Private Sub OnMesaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnMesaChanged()
    End Sub
    Partial Private Sub OnDespachoRetiroChanging(value As String)
    End Sub
    Partial Private Sub OnDespachoRetiroChanged()
    End Sub
    Partial Private Sub OnCreditoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCreditoChanged()
    End Sub
    Partial Private Sub OnPagadoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnPagadoChanged()
    End Sub
    Partial Private Sub OnFacturarChanging(value As Boolean)
    End Sub
    Partial Private Sub OnFacturarChanged()
    End Sub
    Partial Private Sub OnTipoDocChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDocChanged()
    End Sub
    Partial Private Sub OnNumDocChanging(value As Decimal)
    End Sub
    Partial Private Sub OnNumDocChanged()
    End Sub
    Partial Private Sub OnOTChanging(value As Decimal)
    End Sub
    Partial Private Sub OnOTChanged()
    End Sub
    Partial Private Sub OnFPagoChanging(value As String)
    End Sub
    Partial Private Sub OnFPagoChanged()
    End Sub
    Partial Private Sub OnIDTransaccionChanging(value As String)
    End Sub
    Partial Private Sub OnIDTransaccionChanged()
    End Sub
    Partial Private Sub OnRutChanging(value As String)
    End Sub
    Partial Private Sub OnRutChanged()
    End Sub
    Partial Private Sub OnNombresChanging(value As String)
    End Sub
    Partial Private Sub OnNombresChanged()
    End Sub
    Partial Private Sub OnApellidosChanging(value As String)
    End Sub
    Partial Private Sub OnApellidosChanged()
    End Sub
    Partial Private Sub OnGiroChanging(value As String)
    End Sub
    Partial Private Sub OnGiroChanged()
    End Sub
    Partial Private Sub OnDireccionChanging(value As String)
    End Sub
    Partial Private Sub OnDireccionChanged()
    End Sub
    Partial Private Sub OnCiudadChanging(value As String)
    End Sub
    Partial Private Sub OnCiudadChanged()
    End Sub
    Partial Private Sub OnComunaChanging(value As String)
    End Sub
    Partial Private Sub OnComunaChanged()
    End Sub
    Partial Private Sub OnNombreComunaChanging(value As String)
    End Sub
    Partial Private Sub OnNombreComunaChanged()
    End Sub
    Partial Private Sub OnTelefonosChanging(value As String)
    End Sub
    Partial Private Sub OnTelefonosChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnNombreDespachoChanging(value As String)
    End Sub
    Partial Private Sub OnNombreDespachoChanged()
    End Sub
    Partial Private Sub OnDireccionDespachoChanging(value As String)
    End Sub
    Partial Private Sub OnDireccionDespachoChanged()
    End Sub
    Partial Private Sub OnTelefonoDespachoChanging(value As String)
    End Sub
    Partial Private Sub OnTelefonoDespachoChanged()
    End Sub
    Partial Private Sub OnEmailDespachoChanging(value As String)
    End Sub
    Partial Private Sub OnEmailDespachoChanged()
    End Sub
    Partial Private Sub OnCiudadDespachoChanging(value As String)
    End Sub
    Partial Private Sub OnCiudadDespachoChanged()
    End Sub
    Partial Private Sub OnComunaDespachoChanging(value As String)
    End Sub
    Partial Private Sub OnComunaDespachoChanged()
    End Sub
    Partial Private Sub OnObservacionChanging(value As String)
    End Sub
    Partial Private Sub OnObservacionChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ticket", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)>
    Public Property Ticket() As Decimal
        Get
            Return Me._Ticket
        End Get
        Set
            If ((Me._Ticket = value) _
                        = False) Then
                Me.OnTicketChanging(value)
                Me.SendPropertyChanging
                Me._Ticket = value
                Me.SendPropertyChanged("Ticket")
                Me.OnTicketChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="DateTime NOT NULL")>
    Public Property Fecha() As Date
        Get
            Return Me._Fecha
        End Get
        Set
            If ((Me._Fecha = value) _
                        = False) Then
                Me.OnFechaChanging(value)
                Me.SendPropertyChanging
                Me._Fecha = value
                Me.SendPropertyChanged("Fecha")
                Me.OnFechaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaPago", DbType:="DateTime NOT NULL")>
    Public Property FechaPago() As Date
        Get
            Return Me._FechaPago
        End Get
        Set
            If ((Me._FechaPago = value) _
                        = False) Then
                Me.OnFechaPagoChanging(value)
                Me.SendPropertyChanging
                Me._FechaPago = value
                Me.SendPropertyChanged("FechaPago")
                Me.OnFechaPagoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaListo", DbType:="DateTime NOT NULL")>
    Public Property FechaListo() As Date
        Get
            Return Me._FechaListo
        End Get
        Set
            If ((Me._FechaListo = value) _
                        = False) Then
                Me.OnFechaListoChanging(value)
                Me.SendPropertyChanging
                Me._FechaListo = value
                Me.SendPropertyChanged("FechaListo")
                Me.OnFechaListoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaDespacho", DbType:="DateTime NOT NULL")>
    Public Property FechaDespacho() As Date
        Get
            Return Me._FechaDespacho
        End Get
        Set
            If ((Me._FechaDespacho = value) _
                        = False) Then
                Me.OnFechaDespachoChanging(value)
                Me.SendPropertyChanging
                Me._FechaDespacho = value
                Me.SendPropertyChanged("FechaDespacho")
                Me.OnFechaDespachoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaEntrega", DbType:="DateTime NOT NULL")>
    Public Property FechaEntrega() As Date
        Get
            Return Me._FechaEntrega
        End Get
        Set
            If ((Me._FechaEntrega = value) _
                        = False) Then
                Me.OnFechaEntregaChanging(value)
                Me.SendPropertyChanging
                Me._FechaEntrega = value
                Me.SendPropertyChanged("FechaEntrega")
                Me.OnFechaEntregaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Local", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Local() As Decimal
        Get
            Return Me._Local
        End Get
        Set
            If ((Me._Local = value) _
                        = False) Then
                Me.OnLocalChanging(value)
                Me.SendPropertyChanging
                Me._Local = value
                Me.SendPropertyChanged("Local")
                Me.OnLocalChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cliente", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Cliente() As Decimal
        Get
            Return Me._Cliente
        End Get
        Set
            If ((Me._Cliente = value) _
                        = False) Then
                Me.OnClienteChanging(value)
                Me.SendPropertyChanging
                Me._Cliente = value
                Me.SendPropertyChanged("Cliente")
                Me.OnClienteChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="VarChar(3) NOT NULL", CanBeNull:=False)>
    Public Property Usuario() As String
        Get
            Return Me._Usuario
        End Get
        Set
            If (String.Equals(Me._Usuario, value) = False) Then
                Me.OnUsuarioChanging(value)
                Me.SendPropertyChanging
                Me._Usuario = value
                Me.SendPropertyChanged("Usuario")
                Me.OnUsuarioChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Estado", DbType:="VarChar(1) NOT NULL", CanBeNull:=False)>
    Public Property Estado() As String
        Get
            Return Me._Estado
        End Get
        Set
            If (String.Equals(Me._Estado, value) = False) Then
                Me.OnEstadoChanging(value)
                Me.SendPropertyChanging
                Me._Estado = value
                Me.SendPropertyChanged("Estado")
                Me.OnEstadoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Abonado", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Abonado() As Decimal
        Get
            Return Me._Abonado
        End Get
        Set
            If ((Me._Abonado = value) _
                        = False) Then
                Me.OnAbonadoChanging(value)
                Me.SendPropertyChanging
                Me._Abonado = value
                Me.SendPropertyChanged("Abonado")
                Me.OnAbonadoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Total", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Total() As Decimal
        Get
            Return Me._Total
        End Get
        Set
            If ((Me._Total = value) _
                        = False) Then
                Me.OnTotalChanging(value)
                Me.SendPropertyChanging
                Me._Total = value
                Me.SendPropertyChanged("Total")
                Me.OnTotalChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mesa", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Mesa() As Decimal
        Get
            Return Me._Mesa
        End Get
        Set
            If ((Me._Mesa = value) _
                        = False) Then
                Me.OnMesaChanging(value)
                Me.SendPropertyChanging
                Me._Mesa = value
                Me.SendPropertyChanged("Mesa")
                Me.OnMesaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DespachoRetiro", DbType:="VarChar(1) NOT NULL", CanBeNull:=False)>
    Public Property DespachoRetiro() As String
        Get
            Return Me._DespachoRetiro
        End Get
        Set
            If (String.Equals(Me._DespachoRetiro, value) = False) Then
                Me.OnDespachoRetiroChanging(value)
                Me.SendPropertyChanging
                Me._DespachoRetiro = value
                Me.SendPropertyChanged("DespachoRetiro")
                Me.OnDespachoRetiroChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Credito", DbType:="Bit NOT NULL")>
    Public Property Credito() As Boolean
        Get
            Return Me._Credito
        End Get
        Set
            If ((Me._Credito = value) _
                        = False) Then
                Me.OnCreditoChanging(value)
                Me.SendPropertyChanging
                Me._Credito = value
                Me.SendPropertyChanged("Credito")
                Me.OnCreditoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pagado", DbType:="Bit NOT NULL")>
    Public Property Pagado() As Boolean
        Get
            Return Me._Pagado
        End Get
        Set
            If ((Me._Pagado = value) _
                        = False) Then
                Me.OnPagadoChanging(value)
                Me.SendPropertyChanging
                Me._Pagado = value
                Me.SendPropertyChanged("Pagado")
                Me.OnPagadoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Facturar", DbType:="Bit NOT NULL")>
    Public Property Facturar() As Boolean
        Get
            Return Me._Facturar
        End Get
        Set
            If ((Me._Facturar = value) _
                        = False) Then
                Me.OnFacturarChanging(value)
                Me.SendPropertyChanging
                Me._Facturar = value
                Me.SendPropertyChanged("Facturar")
                Me.OnFacturarChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDoc", DbType:="VarChar(2) NOT NULL", CanBeNull:=False)>
    Public Property TipoDoc() As String
        Get
            Return Me._TipoDoc
        End Get
        Set
            If (String.Equals(Me._TipoDoc, value) = False) Then
                Me.OnTipoDocChanging(value)
                Me.SendPropertyChanging
                Me._TipoDoc = value
                Me.SendPropertyChanged("TipoDoc")
                Me.OnTipoDocChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumDoc", DbType:="Decimal(18,0) NOT NULL")>
    Public Property NumDoc() As Decimal
        Get
            Return Me._NumDoc
        End Get
        Set
            If ((Me._NumDoc = value) _
                        = False) Then
                Me.OnNumDocChanging(value)
                Me.SendPropertyChanging
                Me._NumDoc = value
                Me.SendPropertyChanged("NumDoc")
                Me.OnNumDocChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OT", DbType:="Decimal(18,0) NOT NULL")>
    Public Property OT() As Decimal
        Get
            Return Me._OT
        End Get
        Set
            If ((Me._OT = value) _
                        = False) Then
                Me.OnOTChanging(value)
                Me.SendPropertyChanging
                Me._OT = value
                Me.SendPropertyChanged("OT")
                Me.OnOTChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FPago", DbType:="VarChar(2) NOT NULL", CanBeNull:=False)>
    Public Property FPago() As String
        Get
            Return Me._FPago
        End Get
        Set
            If (String.Equals(Me._FPago, value) = False) Then
                Me.OnFPagoChanging(value)
                Me.SendPropertyChanging
                Me._FPago = value
                Me.SendPropertyChanged("FPago")
                Me.OnFPagoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDTransaccion", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property IDTransaccion() As String
        Get
            Return Me._IDTransaccion
        End Get
        Set
            If (String.Equals(Me._IDTransaccion, value) = False) Then
                Me.OnIDTransaccionChanging(value)
                Me.SendPropertyChanging
                Me._IDTransaccion = value
                Me.SendPropertyChanged("IDTransaccion")
                Me.OnIDTransaccionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rut", DbType:="VarChar(12) NOT NULL", CanBeNull:=False)>
    Public Property Rut() As String
        Get
            Return Me._Rut
        End Get
        Set
            If (String.Equals(Me._Rut, value) = False) Then
                Me.OnRutChanging(value)
                Me.SendPropertyChanging
                Me._Rut = value
                Me.SendPropertyChanged("Rut")
                Me.OnRutChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombres", DbType:="NVarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Nombres() As String
        Get
            Return Me._Nombres
        End Get
        Set
            If (String.Equals(Me._Nombres, value) = False) Then
                Me.OnNombresChanging(value)
                Me.SendPropertyChanging
                Me._Nombres = value
                Me.SendPropertyChanged("Nombres")
                Me.OnNombresChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Apellidos", DbType:="NVarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Apellidos() As String
        Get
            Return Me._Apellidos
        End Get
        Set
            If (String.Equals(Me._Apellidos, value) = False) Then
                Me.OnApellidosChanging(value)
                Me.SendPropertyChanging
                Me._Apellidos = value
                Me.SendPropertyChanged("Apellidos")
                Me.OnApellidosChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Giro", DbType:="VarChar(100) NOT NULL", CanBeNull:=False)>
    Public Property Giro() As String
        Get
            Return Me._Giro
        End Get
        Set
            If (String.Equals(Me._Giro, value) = False) Then
                Me.OnGiroChanging(value)
                Me.SendPropertyChanging
                Me._Giro = value
                Me.SendPropertyChanged("Giro")
                Me.OnGiroChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Direccion", DbType:="VarChar(255) NOT NULL", CanBeNull:=False)>
    Public Property Direccion() As String
        Get
            Return Me._Direccion
        End Get
        Set
            If (String.Equals(Me._Direccion, value) = False) Then
                Me.OnDireccionChanging(value)
                Me.SendPropertyChanging
                Me._Direccion = value
                Me.SendPropertyChanged("Direccion")
                Me.OnDireccionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ciudad", DbType:="VarChar(5) NOT NULL", CanBeNull:=False)>
    Public Property Ciudad() As String
        Get
            Return Me._Ciudad
        End Get
        Set
            If (String.Equals(Me._Ciudad, value) = False) Then
                Me.OnCiudadChanging(value)
                Me.SendPropertyChanging
                Me._Ciudad = value
                Me.SendPropertyChanged("Ciudad")
                Me.OnCiudadChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comuna", DbType:="VarChar(5) NOT NULL", CanBeNull:=False)>
    Public Property Comuna() As String
        Get
            Return Me._Comuna
        End Get
        Set
            If (String.Equals(Me._Comuna, value) = False) Then
                Me.OnComunaChanging(value)
                Me.SendPropertyChanging
                Me._Comuna = value
                Me.SendPropertyChanged("Comuna")
                Me.OnComunaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreComuna", DbType:="VarChar(200) NOT NULL", CanBeNull:=False)>
    Public Property NombreComuna() As String
        Get
            Return Me._NombreComuna
        End Get
        Set
            If (String.Equals(Me._NombreComuna, value) = False) Then
                Me.OnNombreComunaChanging(value)
                Me.SendPropertyChanging
                Me._NombreComuna = value
                Me.SendPropertyChanged("NombreComuna")
                Me.OnNombreComunaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Telefonos", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Telefonos() As String
        Get
            Return Me._Telefonos
        End Get
        Set
            If (String.Equals(Me._Telefonos, value) = False) Then
                Me.OnTelefonosChanging(value)
                Me.SendPropertyChanging
                Me._Telefonos = value
                Me.SendPropertyChanged("Telefonos")
                Me.OnTelefonosChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(100) NOT NULL", CanBeNull:=False)>
    Public Property Email() As String
        Get
            Return Me._Email
        End Get
        Set
            If (String.Equals(Me._Email, value) = False) Then
                Me.OnEmailChanging(value)
                Me.SendPropertyChanging
                Me._Email = value
                Me.SendPropertyChanged("Email")
                Me.OnEmailChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreDespacho", DbType:="VarChar(200) NOT NULL", CanBeNull:=False)>
    Public Property NombreDespacho() As String
        Get
            Return Me._NombreDespacho
        End Get
        Set
            If (String.Equals(Me._NombreDespacho, value) = False) Then
                Me.OnNombreDespachoChanging(value)
                Me.SendPropertyChanging
                Me._NombreDespacho = value
                Me.SendPropertyChanged("NombreDespacho")
                Me.OnNombreDespachoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DireccionDespacho", DbType:="VarChar(255) NOT NULL", CanBeNull:=False)>
    Public Property DireccionDespacho() As String
        Get
            Return Me._DireccionDespacho
        End Get
        Set
            If (String.Equals(Me._DireccionDespacho, value) = False) Then
                Me.OnDireccionDespachoChanging(value)
                Me.SendPropertyChanging
                Me._DireccionDespacho = value
                Me.SendPropertyChanged("DireccionDespacho")
                Me.OnDireccionDespachoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TelefonoDespacho", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property TelefonoDespacho() As String
        Get
            Return Me._TelefonoDespacho
        End Get
        Set
            If (String.Equals(Me._TelefonoDespacho, value) = False) Then
                Me.OnTelefonoDespachoChanging(value)
                Me.SendPropertyChanging
                Me._TelefonoDespacho = value
                Me.SendPropertyChanged("TelefonoDespacho")
                Me.OnTelefonoDespachoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmailDespacho", DbType:="VarChar(100) NOT NULL", CanBeNull:=False)>
    Public Property EmailDespacho() As String
        Get
            Return Me._EmailDespacho
        End Get
        Set
            If (String.Equals(Me._EmailDespacho, value) = False) Then
                Me.OnEmailDespachoChanging(value)
                Me.SendPropertyChanging
                Me._EmailDespacho = value
                Me.SendPropertyChanged("EmailDespacho")
                Me.OnEmailDespachoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CiudadDespacho", DbType:="VarChar(5) NOT NULL", CanBeNull:=False)>
    Public Property CiudadDespacho() As String
        Get
            Return Me._CiudadDespacho
        End Get
        Set
            If (String.Equals(Me._CiudadDespacho, value) = False) Then
                Me.OnCiudadDespachoChanging(value)
                Me.SendPropertyChanging
                Me._CiudadDespacho = value
                Me.SendPropertyChanged("CiudadDespacho")
                Me.OnCiudadDespachoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ComunaDespacho", DbType:="VarChar(5) NOT NULL", CanBeNull:=False)>
    Public Property ComunaDespacho() As String
        Get
            Return Me._ComunaDespacho
        End Get
        Set
            If (String.Equals(Me._ComunaDespacho, value) = False) Then
                Me.OnComunaDespachoChanging(value)
                Me.SendPropertyChanging
                Me._ComunaDespacho = value
                Me.SendPropertyChanged("ComunaDespacho")
                Me.OnComunaDespachoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Observacion", DbType:="VarChar(500) NOT NULL", CanBeNull:=False)>
    Public Property Observacion() As String
        Get
            Return Me._Observacion
        End Get
        Set
            If (String.Equals(Me._Observacion, value) = False) Then
                Me.OnObservacionChanging(value)
                Me.SendPropertyChanging
                Me._Observacion = value
                Me.SendPropertyChanged("Observacion")
                Me.OnObservacionChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Parametros")>
Partial Public Class T_Parametros
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Sistema As String

    Private _Clave As String

    Private _Cliente As Decimal

    Private _Empresa As String

    Private _Rut As String

    Private _Fantasia As String

    Private _Direccion As String

    Private _Ciudad As String

    Private _Comuna As String

    Private _Representante As String

    Private _Telefonos As String

    Private _Email As String

    Private _Horario As String

    Private _Iva As Double

    Private _SLogan As String

    Private _Doc_Electronicos As Boolean

    Private _Dir_Sistema As String

    Private _Logo1() As Byte

    Private _Logo2() As Byte

    Private _MaximoDescuento As Decimal

    Private _Documentos As Boolean

    Private _Ventas As Boolean

    Private _Web As Boolean

    Private _DTE As Boolean

    Private _Distribucion As Boolean

    Private _Servicios As Boolean

    Private _Cobranzas As Boolean

    Private _Stocks As Boolean

    Private _Remuneraciones As Boolean

    Private _Consultas As Boolean

    Private _Tablas As Boolean

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSistemaChanging(value As String)
    End Sub
    Partial Private Sub OnSistemaChanged()
    End Sub
    Partial Private Sub OnClaveChanging(value As String)
    End Sub
    Partial Private Sub OnClaveChanged()
    End Sub
    Partial Private Sub OnClienteChanging(value As Decimal)
    End Sub
    Partial Private Sub OnClienteChanged()
    End Sub
    Partial Private Sub OnEmpresaChanging(value As String)
    End Sub
    Partial Private Sub OnEmpresaChanged()
    End Sub
    Partial Private Sub OnRutChanging(value As String)
    End Sub
    Partial Private Sub OnRutChanged()
    End Sub
    Partial Private Sub OnFantasiaChanging(value As String)
    End Sub
    Partial Private Sub OnFantasiaChanged()
    End Sub
    Partial Private Sub OnDireccionChanging(value As String)
    End Sub
    Partial Private Sub OnDireccionChanged()
    End Sub
    Partial Private Sub OnCiudadChanging(value As String)
    End Sub
    Partial Private Sub OnCiudadChanged()
    End Sub
    Partial Private Sub OnComunaChanging(value As String)
    End Sub
    Partial Private Sub OnComunaChanged()
    End Sub
    Partial Private Sub OnRepresentanteChanging(value As String)
    End Sub
    Partial Private Sub OnRepresentanteChanged()
    End Sub
    Partial Private Sub OnTelefonosChanging(value As String)
    End Sub
    Partial Private Sub OnTelefonosChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnHorarioChanging(value As String)
    End Sub
    Partial Private Sub OnHorarioChanged()
    End Sub
    Partial Private Sub OnIvaChanging(value As Double)
    End Sub
    Partial Private Sub OnIvaChanged()
    End Sub
    Partial Private Sub OnSLoganChanging(value As String)
    End Sub
    Partial Private Sub OnSLoganChanged()
    End Sub
    Partial Private Sub OnDoc_ElectronicosChanging(value As Boolean)
    End Sub
    Partial Private Sub OnDoc_ElectronicosChanged()
    End Sub
    Partial Private Sub OnDir_SistemaChanging(value As String)
    End Sub
    Partial Private Sub OnDir_SistemaChanged()
    End Sub
    Partial Private Sub OnLogo1Changing(value As Byte())
    End Sub
    Partial Private Sub OnLogo1Changed()
    End Sub
    Partial Private Sub OnLogo2Changing(value As Byte())
    End Sub
    Partial Private Sub OnLogo2Changed()
    End Sub
    Partial Private Sub OnMaximoDescuentoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnMaximoDescuentoChanged()
    End Sub
    Partial Private Sub OnDocumentosChanging(value As Boolean)
    End Sub
    Partial Private Sub OnDocumentosChanged()
    End Sub
    Partial Private Sub OnVentasChanging(value As Boolean)
    End Sub
    Partial Private Sub OnVentasChanged()
    End Sub
    Partial Private Sub OnWebChanging(value As Boolean)
    End Sub
    Partial Private Sub OnWebChanged()
    End Sub
    Partial Private Sub OnDTEChanging(value As Boolean)
    End Sub
    Partial Private Sub OnDTEChanged()
    End Sub
    Partial Private Sub OnDistribucionChanging(value As Boolean)
    End Sub
    Partial Private Sub OnDistribucionChanged()
    End Sub
    Partial Private Sub OnServiciosChanging(value As Boolean)
    End Sub
    Partial Private Sub OnServiciosChanged()
    End Sub
    Partial Private Sub OnCobranzasChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCobranzasChanged()
    End Sub
    Partial Private Sub OnStocksChanging(value As Boolean)
    End Sub
    Partial Private Sub OnStocksChanged()
    End Sub
    Partial Private Sub OnRemuneracionesChanging(value As Boolean)
    End Sub
    Partial Private Sub OnRemuneracionesChanged()
    End Sub
    Partial Private Sub OnConsultasChanging(value As Boolean)
    End Sub
    Partial Private Sub OnConsultasChanged()
    End Sub
    Partial Private Sub OnTablasChanging(value As Boolean)
    End Sub
    Partial Private Sub OnTablasChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sistema", DbType:="VarChar(50) NOT NULL", CanBeNull:=False, IsPrimaryKey:=True)>
    Public Property Sistema() As String
        Get
            Return Me._Sistema
        End Get
        Set
            If (String.Equals(Me._Sistema, value) = False) Then
                Me.OnSistemaChanging(value)
                Me.SendPropertyChanging
                Me._Sistema = value
                Me.SendPropertyChanged("Sistema")
                Me.OnSistemaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Clave", DbType:="VarChar(1) NOT NULL", CanBeNull:=False)>
    Public Property Clave() As String
        Get
            Return Me._Clave
        End Get
        Set
            If (String.Equals(Me._Clave, value) = False) Then
                Me.OnClaveChanging(value)
                Me.SendPropertyChanging
                Me._Clave = value
                Me.SendPropertyChanged("Clave")
                Me.OnClaveChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cliente", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Cliente() As Decimal
        Get
            Return Me._Cliente
        End Get
        Set
            If ((Me._Cliente = value) _
                        = False) Then
                Me.OnClienteChanging(value)
                Me.SendPropertyChanging
                Me._Cliente = value
                Me.SendPropertyChanged("Cliente")
                Me.OnClienteChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Empresa", DbType:="VarChar(100) NOT NULL", CanBeNull:=False)>
    Public Property Empresa() As String
        Get
            Return Me._Empresa
        End Get
        Set
            If (String.Equals(Me._Empresa, value) = False) Then
                Me.OnEmpresaChanging(value)
                Me.SendPropertyChanging
                Me._Empresa = value
                Me.SendPropertyChanged("Empresa")
                Me.OnEmpresaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rut", DbType:="VarChar(12) NOT NULL", CanBeNull:=False)>
    Public Property Rut() As String
        Get
            Return Me._Rut
        End Get
        Set
            If (String.Equals(Me._Rut, value) = False) Then
                Me.OnRutChanging(value)
                Me.SendPropertyChanging
                Me._Rut = value
                Me.SendPropertyChanged("Rut")
                Me.OnRutChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fantasia", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property Fantasia() As String
        Get
            Return Me._Fantasia
        End Get
        Set
            If (String.Equals(Me._Fantasia, value) = False) Then
                Me.OnFantasiaChanging(value)
                Me.SendPropertyChanging
                Me._Fantasia = value
                Me.SendPropertyChanged("Fantasia")
                Me.OnFantasiaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Direccion", DbType:="VarChar(500) NOT NULL", CanBeNull:=False)>
    Public Property Direccion() As String
        Get
            Return Me._Direccion
        End Get
        Set
            If (String.Equals(Me._Direccion, value) = False) Then
                Me.OnDireccionChanging(value)
                Me.SendPropertyChanging
                Me._Direccion = value
                Me.SendPropertyChanged("Direccion")
                Me.OnDireccionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ciudad", DbType:="VarChar(5) NOT NULL", CanBeNull:=False)>
    Public Property Ciudad() As String
        Get
            Return Me._Ciudad
        End Get
        Set
            If (String.Equals(Me._Ciudad, value) = False) Then
                Me.OnCiudadChanging(value)
                Me.SendPropertyChanging
                Me._Ciudad = value
                Me.SendPropertyChanged("Ciudad")
                Me.OnCiudadChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comuna", DbType:="VarChar(5) NOT NULL", CanBeNull:=False)>
    Public Property Comuna() As String
        Get
            Return Me._Comuna
        End Get
        Set
            If (String.Equals(Me._Comuna, value) = False) Then
                Me.OnComunaChanging(value)
                Me.SendPropertyChanging
                Me._Comuna = value
                Me.SendPropertyChanged("Comuna")
                Me.OnComunaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Representante", DbType:="VarChar(100) NOT NULL", CanBeNull:=False)>
    Public Property Representante() As String
        Get
            Return Me._Representante
        End Get
        Set
            If (String.Equals(Me._Representante, value) = False) Then
                Me.OnRepresentanteChanging(value)
                Me.SendPropertyChanging
                Me._Representante = value
                Me.SendPropertyChanged("Representante")
                Me.OnRepresentanteChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Telefonos", DbType:="VarChar(100) NOT NULL", CanBeNull:=False)>
    Public Property Telefonos() As String
        Get
            Return Me._Telefonos
        End Get
        Set
            If (String.Equals(Me._Telefonos, value) = False) Then
                Me.OnTelefonosChanging(value)
                Me.SendPropertyChanging
                Me._Telefonos = value
                Me.SendPropertyChanged("Telefonos")
                Me.OnTelefonosChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(100) NOT NULL", CanBeNull:=False)>
    Public Property Email() As String
        Get
            Return Me._Email
        End Get
        Set
            If (String.Equals(Me._Email, value) = False) Then
                Me.OnEmailChanging(value)
                Me.SendPropertyChanging
                Me._Email = value
                Me.SendPropertyChanged("Email")
                Me.OnEmailChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Horario", DbType:="VarChar(250) NOT NULL", CanBeNull:=False)>
    Public Property Horario() As String
        Get
            Return Me._Horario
        End Get
        Set
            If (String.Equals(Me._Horario, value) = False) Then
                Me.OnHorarioChanging(value)
                Me.SendPropertyChanging
                Me._Horario = value
                Me.SendPropertyChanged("Horario")
                Me.OnHorarioChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Iva", DbType:="Float NOT NULL")>
    Public Property Iva() As Double
        Get
            Return Me._Iva
        End Get
        Set
            If ((Me._Iva = value) _
                        = False) Then
                Me.OnIvaChanging(value)
                Me.SendPropertyChanging
                Me._Iva = value
                Me.SendPropertyChanged("Iva")
                Me.OnIvaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SLogan", DbType:="VarChar(200) NOT NULL", CanBeNull:=False)>
    Public Property SLogan() As String
        Get
            Return Me._SLogan
        End Get
        Set
            If (String.Equals(Me._SLogan, value) = False) Then
                Me.OnSLoganChanging(value)
                Me.SendPropertyChanging
                Me._SLogan = value
                Me.SendPropertyChanged("SLogan")
                Me.OnSLoganChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Doc_Electronicos", DbType:="Bit NOT NULL")>
    Public Property Doc_Electronicos() As Boolean
        Get
            Return Me._Doc_Electronicos
        End Get
        Set
            If ((Me._Doc_Electronicos = value) _
                        = False) Then
                Me.OnDoc_ElectronicosChanging(value)
                Me.SendPropertyChanging
                Me._Doc_Electronicos = value
                Me.SendPropertyChanged("Doc_Electronicos")
                Me.OnDoc_ElectronicosChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Dir_Sistema", DbType:="VarChar(100) NOT NULL", CanBeNull:=False)>
    Public Property Dir_Sistema() As String
        Get
            Return Me._Dir_Sistema
        End Get
        Set
            If (String.Equals(Me._Dir_Sistema, value) = False) Then
                Me.OnDir_SistemaChanging(value)
                Me.SendPropertyChanging
                Me._Dir_Sistema = value
                Me.SendPropertyChanged("Dir_Sistema")
                Me.OnDir_SistemaChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Logo1", DbType:="Image NOT NULL", CanBeNull:=False, UpdateCheck:=UpdateCheck.Never)>
    Public Property Logo1() As Byte()
        Get
            Return Me._Logo1
        End Get
        Set
            If (Object.Equals(Me._Logo1, value) = False) Then
                Me.OnLogo1Changing(value)
                Me.SendPropertyChanging
                Me._Logo1 = value
                Me.SendPropertyChanged("Logo1")
                Me.OnLogo1Changed
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Logo2", DbType:="Image NOT NULL", CanBeNull:=False, UpdateCheck:=UpdateCheck.Never)>
    Public Property Logo2() As Byte()
        Get
            Return Me._Logo2
        End Get
        Set
            If (Object.Equals(Me._Logo2, value) = False) Then
                Me.OnLogo2Changing(value)
                Me.SendPropertyChanging
                Me._Logo2 = value
                Me.SendPropertyChanged("Logo2")
                Me.OnLogo2Changed
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaximoDescuento", DbType:="Decimal(18,0) NOT NULL")>
    Public Property MaximoDescuento() As Decimal
        Get
            Return Me._MaximoDescuento
        End Get
        Set
            If ((Me._MaximoDescuento = value) _
                        = False) Then
                Me.OnMaximoDescuentoChanging(value)
                Me.SendPropertyChanging
                Me._MaximoDescuento = value
                Me.SendPropertyChanged("MaximoDescuento")
                Me.OnMaximoDescuentoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Documentos", DbType:="Bit NOT NULL")>
    Public Property Documentos() As Boolean
        Get
            Return Me._Documentos
        End Get
        Set
            If ((Me._Documentos = value) _
                        = False) Then
                Me.OnDocumentosChanging(value)
                Me.SendPropertyChanging
                Me._Documentos = value
                Me.SendPropertyChanged("Documentos")
                Me.OnDocumentosChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ventas", DbType:="Bit NOT NULL")>
    Public Property Ventas() As Boolean
        Get
            Return Me._Ventas
        End Get
        Set
            If ((Me._Ventas = value) _
                        = False) Then
                Me.OnVentasChanging(value)
                Me.SendPropertyChanging
                Me._Ventas = value
                Me.SendPropertyChanged("Ventas")
                Me.OnVentasChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Web", DbType:="Bit NOT NULL")>
    Public Property Web() As Boolean
        Get
            Return Me._Web
        End Get
        Set
            If ((Me._Web = value) _
                        = False) Then
                Me.OnWebChanging(value)
                Me.SendPropertyChanging
                Me._Web = value
                Me.SendPropertyChanged("Web")
                Me.OnWebChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTE", DbType:="Bit NOT NULL")>
    Public Property DTE() As Boolean
        Get
            Return Me._DTE
        End Get
        Set
            If ((Me._DTE = value) _
                        = False) Then
                Me.OnDTEChanging(value)
                Me.SendPropertyChanging
                Me._DTE = value
                Me.SendPropertyChanged("DTE")
                Me.OnDTEChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Distribucion", DbType:="Bit NOT NULL")>
    Public Property Distribucion() As Boolean
        Get
            Return Me._Distribucion
        End Get
        Set
            If ((Me._Distribucion = value) _
                        = False) Then
                Me.OnDistribucionChanging(value)
                Me.SendPropertyChanging
                Me._Distribucion = value
                Me.SendPropertyChanged("Distribucion")
                Me.OnDistribucionChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Servicios", DbType:="Bit NOT NULL")>
    Public Property Servicios() As Boolean
        Get
            Return Me._Servicios
        End Get
        Set
            If ((Me._Servicios = value) _
                        = False) Then
                Me.OnServiciosChanging(value)
                Me.SendPropertyChanging
                Me._Servicios = value
                Me.SendPropertyChanged("Servicios")
                Me.OnServiciosChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cobranzas", DbType:="Bit NOT NULL")>
    Public Property Cobranzas() As Boolean
        Get
            Return Me._Cobranzas
        End Get
        Set
            If ((Me._Cobranzas = value) _
                        = False) Then
                Me.OnCobranzasChanging(value)
                Me.SendPropertyChanging
                Me._Cobranzas = value
                Me.SendPropertyChanged("Cobranzas")
                Me.OnCobranzasChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Stocks", DbType:="Bit NOT NULL")>
    Public Property Stocks() As Boolean
        Get
            Return Me._Stocks
        End Get
        Set
            If ((Me._Stocks = value) _
                        = False) Then
                Me.OnStocksChanging(value)
                Me.SendPropertyChanging
                Me._Stocks = value
                Me.SendPropertyChanged("Stocks")
                Me.OnStocksChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remuneraciones", DbType:="Bit NOT NULL")>
    Public Property Remuneraciones() As Boolean
        Get
            Return Me._Remuneraciones
        End Get
        Set
            If ((Me._Remuneraciones = value) _
                        = False) Then
                Me.OnRemuneracionesChanging(value)
                Me.SendPropertyChanging
                Me._Remuneraciones = value
                Me.SendPropertyChanged("Remuneraciones")
                Me.OnRemuneracionesChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Consultas", DbType:="Bit NOT NULL")>
    Public Property Consultas() As Boolean
        Get
            Return Me._Consultas
        End Get
        Set
            If ((Me._Consultas = value) _
                        = False) Then
                Me.OnConsultasChanging(value)
                Me.SendPropertyChanging
                Me._Consultas = value
                Me.SendPropertyChanged("Consultas")
                Me.OnConsultasChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tablas", DbType:="Bit NOT NULL")>
    Public Property Tablas() As Boolean
        Get
            Return Me._Tablas
        End Get
        Set
            If ((Me._Tablas = value) _
                        = False) Then
                Me.OnTablasChanging(value)
                Me.SendPropertyChanging
                Me._Tablas = value
                Me.SendPropertyChanged("Tablas")
                Me.OnTablasChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Estados")>
Partial Public Class T_Estados
    Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

    Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

    Private _Estado As String

    Private _DescEstado As String

    Private _Tipo As Char

    Private _Orden As Decimal

#Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnDescEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnDescEstadoChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As Char)
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    Partial Private Sub OnOrdenChanging(value As Decimal)
    End Sub
    Partial Private Sub OnOrdenChanged()
    End Sub
#End Region

    Public Sub New()
        MyBase.New
        OnCreated
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Estado", DbType:="VarChar(1) NOT NULL", CanBeNull:=False, IsPrimaryKey:=True)>
    Public Property Estado() As String
        Get
            Return Me._Estado
        End Get
        Set
            If (String.Equals(Me._Estado, value) = False) Then
                Me.OnEstadoChanging(value)
                Me.SendPropertyChanging
                Me._Estado = value
                Me.SendPropertyChanged("Estado")
                Me.OnEstadoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescEstado", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)>
    Public Property DescEstado() As String
        Get
            Return Me._DescEstado
        End Get
        Set
            If (String.Equals(Me._DescEstado, value) = False) Then
                Me.OnDescEstadoChanging(value)
                Me.SendPropertyChanging
                Me._DescEstado = value
                Me.SendPropertyChanged("DescEstado")
                Me.OnDescEstadoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tipo", DbType:="Char(1) NOT NULL", IsPrimaryKey:=True)>
    Public Property Tipo() As Char
        Get
            Return Me._Tipo
        End Get
        Set
            If ((Me._Tipo = value) _
                        = False) Then
                Me.OnTipoChanging(value)
                Me.SendPropertyChanging
                Me._Tipo = value
                Me.SendPropertyChanged("Tipo")
                Me.OnTipoChanged
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Orden", DbType:="Decimal(18,0) NOT NULL")>
    Public Property Orden() As Decimal
        Get
            Return Me._Orden
        End Get
        Set
            If ((Me._Orden = value) _
                        = False) Then
                Me.OnOrdenChanging(value)
                Me.SendPropertyChanging
                Me._Orden = value
                Me.SendPropertyChanged("Orden")
                Me.OnOrdenChanged
            End If
        End Set
    End Property

    Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

    Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

    Protected Overridable Sub SendPropertyChanging()
        If ((Me.PropertyChangingEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
        End If
    End Sub

    Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
        If ((Me.PropertyChangedEvent Is Nothing) _
                    = False) Then
            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

Partial Public Class IncrementarCorrelativoResult

    Private _Correlativo As Decimal

    Public Sub New()
        MyBase.New
    End Sub

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Correlativo", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Correlativo() As Decimal
		Get
			Return Me._Correlativo
		End Get
		Set
			If ((Me._Correlativo = value)  _
						= false) Then
				Me._Correlativo = value
			End If
		End Set
	End Property
End Class
